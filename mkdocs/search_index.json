{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to \nScorocode\n cloud service documentation.\n\n\nThe documentation contains:\n\n\n\n\na description of how to use the personal account, applications and data\n\n\nHTTP API documentation for implementing the cloud service on any platform\n\n\nSDK documentation: WEB server/client (\nJavaScript SDK\n), iOS/Mac OS (\nSwift SDK\n), Android (\nJava SDK\n).\n\n\n\n\n\n\nSource codes\n\n\nSource codes for all SDKs and documentation are openly available on \nGitHub\n. We would be very happy to receive any comments, modifications and suggestions for each repository.\n\n\n\n\nTo go to the relevant documentation section, select it in the menu on the left.\n\n\nGeneral info\n\n\nScorocode\n is a cloud platform providing BaaS (Backend as a Service) functions. With \nScorocode\n, you can quickly create a data structure by using visual modelling for collections and fields, connect event triggers for data, develop and start server JavaScript code from client applications according to a schedule.\n\n\nKey features of the service:\n\n\n\n\nFull-scale platform for backend design, free option for small applications;\n\n\nAvailability of ready backend functions: sending emails, SMS and push notifications, file storage, server scripts, etc;\n\n\nProviding statistics and analytics for applications 24x7;\n\n\nManagement of users and application access levels, collections and documents;\n\n\nDocumentation, platform use cases and SDKs in English;\n\n\n\n\nScorocode\n offers a wide range of features for connecting projects to cloud backend:\n\n\n\n\nREST API\n\n\nJavaScript SDK for web applications \u2013 both client and server parts\n\n\nSwift SDK for developing applications on iOS and Mac OS X platforms\n\n\nJava SDK for developing Android-based applications\n\n\n\n\nScorocode\n allows you to import data from the \nParse\n cloud service.\n\n\nThe list of \nScorocode\n features and supported platforms is steadily growing.\n\n\nUsers\n\n\nScorocode\n users are:\n\n\n\n\nIndividual developers\n\n\nProfessional developers and developer teams\n\n\nSystem integrators\n\n\nCorporate clients\n\n\n\n\nFor individual developers, \nScorocode\n is a technically simple, reasonably priced and documented solution for trying out their abilities in the application development area and for creating and quickly modifying the backend for applications. \nScorocode\n provides professional developers and developer teams with the ability to support modern services (social networks, payment systems, etc.) and a transparent pricing model to calculate development and maintenance costs. For corporate users, \nScorocode\n offers analytical tools to improve the efficiency of applications and marketing, as well as a uniform platform for simultaneous development of several projects.", 
            "title": "General info"
        }, 
        {
            "location": "/#general-info", 
            "text": "Scorocode  is a cloud platform providing BaaS (Backend as a Service) functions. With  Scorocode , you can quickly create a data structure by using visual modelling for collections and fields, connect event triggers for data, develop and start server JavaScript code from client applications according to a schedule.", 
            "title": "General info"
        }, 
        {
            "location": "/#key-features-of-the-service", 
            "text": "Full-scale platform for backend design, free option for small applications;  Availability of ready backend functions: sending emails, SMS and push notifications, file storage, server scripts, etc;  Providing statistics and analytics for applications 24x7;  Management of users and application access levels, collections and documents;  Documentation, platform use cases and SDKs in English;   Scorocode  offers a wide range of features for connecting projects to cloud backend:   REST API  JavaScript SDK for web applications \u2013 both client and server parts  Swift SDK for developing applications on iOS and Mac OS X platforms  Java SDK for developing Android-based applications   Scorocode  allows you to import data from the  Parse  cloud service.  The list of  Scorocode  features and supported platforms is steadily growing.", 
            "title": "Key features of the service:"
        }, 
        {
            "location": "/#users", 
            "text": "Scorocode  users are:   Individual developers  Professional developers and developer teams  System integrators  Corporate clients   For individual developers,  Scorocode  is a technically simple, reasonably priced and documented solution for trying out their abilities in the application development area and for creating and quickly modifying the backend for applications.  Scorocode  provides professional developers and developer teams with the ability to support modern services (social networks, payment systems, etc.) and a transparent pricing model to calculate development and maintenance costs. For corporate users,  Scorocode  offers analytical tools to improve the efficiency of applications and marketing, as well as a uniform platform for simultaneous development of several projects.", 
            "title": "Users"
        }, 
        {
            "location": "/main/main1/", 
            "text": "Please register to start using the Scorocode service. Enter your name and email address on the \nregistration page\n.\n\n\n\n\nAfter successful registration, enter the developer's personal account (My account). We will send your login password by email to the address that you provided during registration. You can change the password issued by the system through the user settings section in your personal account.\n\n\nTo enter the platform's member area, use the Login link in the main menu on the Home page. Enter the username (email address) that you provided during registration and your password. If you enter an incorrect password three times, the system will ask you to enter captcha text. If you forget your password, click the Forgot Password link. In the next window, enter your registration email address. We will send you information on how to reset your password to this address.", 
            "title": "Get started"
        }, 
        {
            "location": "/main/main2/", 
            "text": "The developer's personal account contains the following sections:\n\n\n\n\nuser settings and system notifications for the user;\n\n\napplications;\n\n\ndocumentation.\n\n\n\n\nAfter logging in, you will see the Applications page.\n\n\n\n\nUser settings and system notifications for the user\n\n\nTo go to the user settings and system notifications section, click the email address in the name of your personal account. The user settings and system notifications page contains the following sections:\n\n\n\n\nNotifications;\n\n\nPersonal information;\n\n\nChange password;\n\n\nOrganization;\n\n\nBalance.\n\n\n\n\nBy default, you will see the Notifications section.\n\n\n\n\nNotifications\n\n\nA list of system notifications can be seen in the Notifications section of the User settings and system notifications page of your personal account. To remove a system notification, click Delete.\n\n\nPersonal information\n\n\nIn the personal information section, you can enter (edit) your personal data: username and phone number. The email address used for your account cannot be edited.\n\n\n\n\nClick Save Changes to save your changes.\n\n\nChange password\n\n\nGo the Change Password section to change your password. Use this function to change the password that was generated by the system during registration.\n\n\n\n\nYour new password must be at least 6 characters long. To save your new password, click the Change password button.\n\n\nOrganization\n\n\n\n\nEnter information about your organization in the Organization section. This information is used for preparing contracts, invoices for bank transfer payments, certificates and other accounting documents.\n\n\nClick Save Changes to save the entered information.\n\n\nBalance\n\n\nThe Balance section contains information about your current balance, as well as the details of your receipts and expenses.\n\n\n\n\nYou can use the Balance section to top up your current balance with your bank card. To do this, enter the top up in Rubles and click the Pay by Card button. Enter the payment details in the form that appears. Follow the payment service instructions. You can also top up your account by bank transfer if your organization's details have been entered. Click Export to create your account statement.", 
            "title": "My account"
        }, 
        {
            "location": "/main/main2/#user-settings-and-system-notifications-for-the-user", 
            "text": "To go to the user settings and system notifications section, click the email address in the name of your personal account. The user settings and system notifications page contains the following sections:   Notifications;  Personal information;  Change password;  Organization;  Balance.   By default, you will see the Notifications section.", 
            "title": "User settings and system notifications for the user"
        }, 
        {
            "location": "/main/main2/#notifications", 
            "text": "A list of system notifications can be seen in the Notifications section of the User settings and system notifications page of your personal account. To remove a system notification, click Delete.", 
            "title": "Notifications"
        }, 
        {
            "location": "/main/main2/#personal-information", 
            "text": "In the personal information section, you can enter (edit) your personal data: username and phone number. The email address used for your account cannot be edited.   Click Save Changes to save your changes.", 
            "title": "Personal information"
        }, 
        {
            "location": "/main/main2/#change-password", 
            "text": "Go the Change Password section to change your password. Use this function to change the password that was generated by the system during registration.   Your new password must be at least 6 characters long. To save your new password, click the Change password button.", 
            "title": "Change password"
        }, 
        {
            "location": "/main/main2/#organization", 
            "text": "Enter information about your organization in the Organization section. This information is used for preparing contracts, invoices for bank transfer payments, certificates and other accounting documents.  Click Save Changes to save the entered information.", 
            "title": "Organization"
        }, 
        {
            "location": "/main/main2/#balance", 
            "text": "The Balance section contains information about your current balance, as well as the details of your receipts and expenses.   You can use the Balance section to top up your current balance with your bank card. To do this, enter the top up in Rubles and click the Pay by Card button. Enter the payment details in the form that appears. Follow the payment service instructions. You can also top up your account by bank transfer if your organization's details have been entered. Click Export to create your account statement.", 
            "title": "Balance"
        }, 
        {
            "location": "/app/app/", 
            "text": "To go to the applications page, click the Applications link in the upper menu in My account. This page opens by default after you log in. This page displays widgets of previously created applications, as well as a widget for creating a new application.\n\n\nTo create a new application, click the mouse in the New Application widget area. Enter the name of the new application in the entry field and click Create. You can enter any characters in the application name field.\n\n\n\n\nThe widget for previously created applications has a name and a menu containing icons of functions:\n\n\n\n\n\n\nAnalytics\n\n\nData\n\n\nServerside code\n\n\nBots\n\n\nSettings\n\n\n\n\nThe empty application widget has the New Application name and does not have a functional menu.", 
            "title": "Working with application"
        }, 
        {
            "location": "/app/app1/", 
            "text": "Application analytics is statistical information on the application's use and a list of system notifications related to the application. Application usage statistics are presented as diagrams in the respective widgets. A specific set of included/excluded elements can be presented for each diagram. To include/exclude a selected element, click the icon with its name.\n\n\nThe following widgets can be found on the page:\n\n\nNotifications\n\n\nList of application-related system notifications To remove a notification from the list of application notifications, use the Delete link.\n\n\nData size\n\n\nThe diagram displays the disk space occupied by the application.\n\n\n\n\nData \u2013 the disk space occupied by data in the application's collections.\n\n\nIndexes \u2013 the disk space occupied by indexes created in the application's collections.\n\n\nFiles \u2013 the disk space occupied by a project's files (only links to these files are stored in the DB area, while the files themselves are stored in a separate cloud data warehouse).\n\n\nAvailable \u2013 the disk space available in accordance with the rate plan.\n\n\n\n\nUsers\n\n\nNumber of users in the application's users collection. Number of application's developers specified in the Settings section.\n\n\nTotal number of queries\n\n\nThis graph displays the total number of queries for a specific period with regard to data in the application's collections.\n\n\nAndroid, iOS, JavaScript, WinPhone\n\n\nThe number of application queries from the respective platform for a specific period. Queries can be filtered by types specified on the diagram.\n\n\nTriggers\n\n\nThe number of application queries from data triggers for a specific period. Queries can be filtered by types specified on the diagram.", 
            "title": "Application analytics"
        }, 
        {
            "location": "/app/app2/", 
            "text": "The Data functional tab contains the list of collections and a set of instruments for application collection management. The newly created application page contains 3 system collections:\n\n\n\n\nroles;\n\n\nusers;\n\n\ndevices.\n\n\n\n\nSystem collections cannot be deleted. By default, the users collection of the application is selected. Each collection has the following set of management tools:\n\n\n\n\nData\n\n\nSettings\n\n\nIndexes\n\n\nTriggers\n\n\n\n\nCollection data\n\n\nBy default, the Data tab is active for a selected collection.\n\n\n\n\nEach collection is displayed in the form of a table with a set of fields (table columns) that contains the collection's documents. System fields that cannot be deleted are automatically created in the documents of each collection:\n\n\n\n\nid - unique document identifier\n\n\n*ACL - three ACL (access control list) type fields that define permissions to read (readACL), update (updateACL) and remove (removeACL) a document;\n\n\ncreatedAt \u2013 document creation date and time;\n\n\nupdatedAt \u2013 date and time the document was last updated\n\n\n\n\nFields \"id\", \"createdAt\" and \"updatedAt\" cannot be edited; their values are automatically set by the system.\n\n\nAdding a document to a collection\n\n\nTo create a new document in a collection, click the Add document link. Then, click the icon of the newly created table record and save the new document. The following fields will be automatically populated in the new document: id, createdAt, and updatedAt.\n\n\n\n\nRemoving a document from a collection\n\n\nTo remove documents from a collection, select them in the table using the checkboxes and click the Delete link. To enter a value for an editable field in the selected document, double-click in its area of the table. Enter one or several comma-separated values.\n\n\nACL fields\n\n\nACL fields can only contain user identifier values from the users collection and role identifiers from the roles collection up to 10 characters long and an asterisk (*). \n\n\n\n\nAnonymous access\n\n\nUsing the asterisk specifies that the function is available for all users of the Users and Roles collections as well as unauthenticated (anonymous) users in case if anonymous access is allowed in the application's security settings.\n\n\n\n\n\n\nWhen working with a widget you can use the filter \"Show only selected documents\", as well as a text search on the following fields:\n\n\n\n\nFor \nroles\n tab: \"_id\", \"name\".\n\n\nFor \nusers\n tab: \"_id\", \"username\", \"email\"\n\n\n\n\n\n\nNotice\n\n\n\n\nSearch is case-sensitive\n\n\nAdding a field\n\n\nTo add a field to a document, click the Add field link.\n\n\n\n\nEnter the field name (Latin letters and digits) and choose the field type from the following list:\n\n\n\n\nDate \u2013 date/time\n\n\nBoolean \u2013 true/false logical value\n\n\nString\n\n\nFile\n\n\nNumber\n\n\nPassword \u2013 string digest using the md5 algorithm\n\n\nArray \u2013 an arbitrary data array\n\n\nObject \u2013 an object consisting of \"key\" pairs: \n\n\nRelation \u2013 an array of identifiers of documents from another collection\n\n\nPointer \u2013 identifier of a document from another collection\n\n\n\n\nField names should not be the same within a single collection. To save the entered data, click the Add field button. The new field will be added to the end of the table.\n\n\nFilter\n\n\nUse the Filter link to search for documents in a collection. In the popup window, choose a set of fields from the displayed list and specify a logical condition and value for the filter.\n\n\n\n\nWhen choosing several filter condition fields, they will be combined based on the \"AND\" condition.\n\n\nCollection settings\n\n\nTo configure a collection, select it in the list and go to the Settings tab.\n\n\n\n\nTo use the ACL access mechanism specified in the description of a collection's document, check the \"Use document ACL\" field. Otherwise, ACL access of the collection's documents will be ignored.\n\n\nEnter the validity period for the file links in the cloud in seconds. This parameter defines the lifetime of the generated temporary link to the file which is retrieved when calling through the API. By default, the link is valid for 120 seconds.\n\n\nEnter the users and/or roles that have access rights to create, read, edit and remove a selected collection. To add users and/or roles, use the Add link and enter the user id or roles.\n\n\nTo grant anonymous users access to create, read, edit and remove a collection's document, select the appropriate option for the Anonymous users record.", 
            "title": "Application data"
        }, 
        {
            "location": "/app/app2/#collection-data", 
            "text": "By default, the Data tab is active for a selected collection.   Each collection is displayed in the form of a table with a set of fields (table columns) that contains the collection's documents. System fields that cannot be deleted are automatically created in the documents of each collection:   id - unique document identifier  *ACL - three ACL (access control list) type fields that define permissions to read (readACL), update (updateACL) and remove (removeACL) a document;  createdAt \u2013 document creation date and time;  updatedAt \u2013 date and time the document was last updated   Fields \"id\", \"createdAt\" and \"updatedAt\" cannot be edited; their values are automatically set by the system.", 
            "title": "Collection data"
        }, 
        {
            "location": "/app/app2/#adding-a-document-to-a-collection", 
            "text": "To create a new document in a collection, click the Add document link. Then, click the icon of the newly created table record and save the new document. The following fields will be automatically populated in the new document: id, createdAt, and updatedAt.", 
            "title": "Adding a document to a collection"
        }, 
        {
            "location": "/app/app2/#removing-a-document-from-a-collection", 
            "text": "To remove documents from a collection, select them in the table using the checkboxes and click the Delete link. To enter a value for an editable field in the selected document, double-click in its area of the table. Enter one or several comma-separated values.", 
            "title": "Removing a document from a collection"
        }, 
        {
            "location": "/app/app2/#acl-fields", 
            "text": "ACL fields can only contain user identifier values from the users collection and role identifiers from the roles collection up to 10 characters long and an asterisk (*).    Anonymous access  Using the asterisk specifies that the function is available for all users of the Users and Roles collections as well as unauthenticated (anonymous) users in case if anonymous access is allowed in the application's security settings.    When working with a widget you can use the filter \"Show only selected documents\", as well as a text search on the following fields:   For  roles  tab: \"_id\", \"name\".  For  users  tab: \"_id\", \"username\", \"email\"    Notice   Search is case-sensitive", 
            "title": "ACL fields"
        }, 
        {
            "location": "/app/app2/#adding-a-field", 
            "text": "To add a field to a document, click the Add field link.   Enter the field name (Latin letters and digits) and choose the field type from the following list:   Date \u2013 date/time  Boolean \u2013 true/false logical value  String  File  Number  Password \u2013 string digest using the md5 algorithm  Array \u2013 an arbitrary data array  Object \u2013 an object consisting of \"key\" pairs:   Relation \u2013 an array of identifiers of documents from another collection  Pointer \u2013 identifier of a document from another collection   Field names should not be the same within a single collection. To save the entered data, click the Add field button. The new field will be added to the end of the table.", 
            "title": "Adding a field"
        }, 
        {
            "location": "/app/app2/#filter", 
            "text": "Use the Filter link to search for documents in a collection. In the popup window, choose a set of fields from the displayed list and specify a logical condition and value for the filter.   When choosing several filter condition fields, they will be combined based on the \"AND\" condition.", 
            "title": "Filter"
        }, 
        {
            "location": "/app/app2/#collection-settings", 
            "text": "To configure a collection, select it in the list and go to the Settings tab.   To use the ACL access mechanism specified in the description of a collection's document, check the \"Use document ACL\" field. Otherwise, ACL access of the collection's documents will be ignored.  Enter the validity period for the file links in the cloud in seconds. This parameter defines the lifetime of the generated temporary link to the file which is retrieved when calling through the API. By default, the link is valid for 120 seconds.  Enter the users and/or roles that have access rights to create, read, edit and remove a selected collection. To add users and/or roles, use the Add link and enter the user id or roles.  To grant anonymous users access to create, read, edit and remove a collection's document, select the appropriate option for the Anonymous users record.", 
            "title": "Collection settings"
        }, 
        {
            "location": "/app/app3/", 
            "text": "You can create indexes for collection fields in the Indexes tab. To create an index, click the Create button. In the window that appears, enter the index name (Latin letters and digits), then select the collection fields in the list. Choose how to sort the selected field (1 \u2013 ascending, -1 \u2013 descending). To create a compound index consisting of several fields, click the Add link. You can remove a field from an index by clicking the Remove link.\n\n\n\n\n\n\nOnce the index is saved, it will appear in the index list of the application's collection, and the index creation process will begin.\n\n\n\n\nData\n\n\nIndexes considerably increase the disk space occupied by data.", 
            "title": "Indexes"
        }, 
        {
            "location": "/app/app4/", 
            "text": "On the Triggers tab, you can create descriptions for standard triggers.\n\n\n\n\nTriggers are Java scripts that are executed when specific operations are performed with respect to data. All triggers are closed and have a local context. Select a trigger from the presented descriptions below and enter its description in the corresponding window. To save the entered description, click Save. To activate the created trigger, enable the Activate parameter. The trigger will not function without this parameter enabled.\n\n\nWhen executing a trigger, the following objects are created in its context: \nDataManager\n and \npool\n.\n\n\n\n\nTrigger execution time\n\n\nMaximum execution time for each trigger is 500 milliseconds.\n\n\n\n\n\n\nStack limit\n\n\nMaximum depth of triggers calling stack is 10.\nExample:\nIf you execute the \"insert\" operation for the same collection after the \"insert\" operation in the trigger, 10 documents will be inserted. After this, the call chain will be suspended.\n\n\n\n\n\n\nOperations interruption/execution due to a trigger\n\n\nWhen running triggers \nbefore\n operations \"insert\", \"update\" and \"delete\", one needs to execute \nreturn true\n to continue the document operations, and \nreturn false\n to interrupt them. The default result for a trigger is \nfalse\n if it doesn't return the value. \n\n\n\n\n\n\nReturning data when trigger operations are interrupted\n\n\nIn case there is a need to return data when a trigger operation was interrupted, one can specify data that needs to be returned in \npool.result\nparameter.\nFor example, inside a trigger one can create a field validation for a mandatory value before adding a document.\n\n\nif\n \n(\n!\npool\n.\ndoc\n.\nhasOwnProperty\n(\nname\n))\n \n{\n  \n// check if pool.doc does not have property \nname\n\n    \npool\n.\nresult\n \n=\n \nYou Shall Not Pass\n;\n  \n    \nreturn\n \nfalse\n;\n                        \n// interrupt document creation\n\n\n};\n \n\nreturn\n \ntrue\n;\n    \n// else - create the document\n\n\n\n\nNow when we try to create a document with an empty field value for \nname\n, the operation will be interrupted and the following data will be returned: \n\n\n{\n\n    \nerrCode\n:\n \n412\n,\n\n    \nerrMsg\n:\n \nbeforeInsert Trigger result: false\n,\n\n    \nerror\n:\n \ntrue\n,\n\n    \nresult\n:\n \nYou Shall Not Pass\n\n\n}\n\n\n\n\n\n\n\n\npool Object\n\n\nObject \npool\n contains the following data:\n\n\nBefore operation \ninsert\n:\n\n\n{\n    coll : \n, // collection name\n    doc : {}   // document with field_name:value pairs\n}\n\n\n\n\n\nAfter operation \ninsert\n:\n\n\n{\n    coll : \n,   // collection name\n    newDoc : {}  // newly created document with field_name:value pairs\n}\n\n\n\n\n\nBefore operation \nremove\n:\n\n\n{\n    coll : \n,  // collection name\n    query : {}  // search query on the basis of which documents should be removed\n}\n\n\n\n\n\nAfter operation \nremove\n:\n\n\n{\n    coll : \n,  // collection name\n    count : int, // number of removed documents\n    docs  : []  // array of deleted document IDs\n\n\n\n\n\nBefore operation \nupdate\n:\n\n\n{\n    coll : \n,  // collection name\n    doc   : {}, // document with value update rules\n    query : {}  // search query on the basis of which documents should be updated\n}\n\n\n\n\n\nAfter operation \nupdate\n:\n\n\n{\n    coll : \n, // collection name\n    count : int, // number of updated documents\n    docs  : []  // array of updated document IDs\n}\n\n\n\n\n\nBefore operation \nupdatebyid\n:\n\n\n{\n    coll        : \n, // collection name\n    doc         : {}, // document with value update rules\n    query       : {}, // search query {\n_id\n : }\n}\n\n\n\n\n\nAfter operation \nupdatebyid\n:\n\n\n{\n    coll        : \n, // collection name\n    newDoc      : { } // updated document\n}\n\n\n\n\n\nDataManager Object\n\n\nThe \nDataManager\n object contains the following data handling methods:\n\n\nDataManager.Insert(data Object)\n\n\nMethod for inserting a document into a collection. Parameters:\n\n\ndata Object\n - object containing the following attributes:\n\n\n{\n    coll : \n, // collection name, mandatory\n    doc  : {}  // document with field_name:value pairs, optional\n}\n\n\n\n\n\nReturned value \u2013 \nObject\n:\n\n\nSuccess\n\n\n{\n    error  : false,\n    result : {}     // created document\n}\n\n\n\n\n\nError\n\n\n{\n    error   : true,\n    errCode : 4XX/5XX, // Error code\n    errMsg  : \nError text\n\n}\n\n\n\n\n\nDataManager.Remove(data Object)\n\n\nMethod for removing documents from collection. Parameters:\n\n\ndata Object\n - object containing the following attributes:\n\n\n{\n    coll  : \n, // collection name, mandatory\n    query : {}, // query with field_name/operator:value pairs, optional\n    limit : int // limit for the number of documents to be removed, optional,\n                // if not specified, the first 1,000 documents will be removed\n}\n\n\n\n\n\nReturned value \u2013 \nObject\n:\n\n\nSuccess\n\n\n{\n    error  : false,\n    result : {\n        count : int, // number of removed documents\n        docs  : []  // array of removed document IDs\n    }\n}\n\n\n\n\n\nError\n\n\n{\n    error   : true,\n    errCode : 4XX/5XX, // Error code\n    errMsg  : \nError text\n\n}\n\n\n\n\n\nDataManager.Update(data Object)\n\n\nMethod for updating documents in a collection. Parameters:\n\n\ndata Object\n - object containing the following attributes:\n\n\n{\n    coll  : \n, // collection name, mandatory\n    query : {}, // query with field_name/operator:value pairs, optional\n    doc   : {}, // document with field_name:value pairs, mandatory\n    limit : int // limit for the number of documents to be updated, optional,\n                // if not specified, the first 1,000 documents will be updated\n}\n\n\n\n\n\nReturned value \u2013 \nObject\n:\n\n\nSuccess\n\n\n{\n    error  : false,\n    result : {\n        count : int, // number of removed documents\n        docs  : []  // array of updated document IDs\n    }\n}\n\n\n\n\n\nError\n\n\n{\n    error   : true,\n    errCode : 4XX/5XX, // Error code\n    errMsg  : \nError text\n\n}\n\n\n\n\n\nDataManager.UpdateById(data Object)\n\n\nMethod for updating one document in a collection which is identified by its ID. Parameters:\n\n\ndata Object\n - object containing the following attributes:\n\n\n{\n    coll  : \n, // collection name, mandatory\n    query : {}, // query in the following format: \n_id\n : \ndocument identifier\n, mandatory\n    doc   : {}  // document with field_name:value pairs, mandatory\n}\n\n\n\n\n\nReturned value - \nObject\n:\n\n\nSuccess\n\n\n{\n    error  : false,\n    result : {} // updated document\n}\n\n\n\n\n\nError\n\n\n{\n    error   : true,\n    errCode : 4XX/5XX, // Error code\n    errMsg  : \nError text\n\n}\n\n\n\n\n\nDataManager.Find(data Object)\n\n\nMethod for requesting a document from a collection. Parameters:\n\n\ndata Object\n - object containing the following attributes:\n\n\n{\n    coll   : \n, // collection name, mandatory\n    query  : {}, // query with field_name/operator:value pairs, optional if empty\n                 // then first 100 documents will be returned\n    sort   : {}, // sorting by fields in format field_name:1/-1, optional\n    fields : [], // list of field names that will be returned in each document, optional\n    limit  : int,// limit of the sample size, by default, 50\n    skip   : int // number of documents to be skipped in the sample\n}\n\n\n\n\n\nReturned value \u2013 \nObject\n:\n\n\nSuccess\n\n\n{\n    error  : false,\n    result : [] // array of selected documents taking into account the limit\n}\n\n\n\n\n\nError\n\n\n{\n    error   : true,\n    errCode : 4XX/5XX, // Error code\n    errMsg  : \nError text\n\n}\n\n\n\n\n\nDataManager.Count(data Object)\n\n\nMethod for requesting the number of documents in a collection Parameters:\n\n\ndata Object\n - object containing the following attributes:\n\n\n{\n    coll  : \n, // collection name, mandatory\n    query : {}  // query with field_name/operator:value pairs, optional\n}\n\n\n\n\n\nReturned value \u2013 \nObject\n:\n\n\nSuccess\n\n\n{\n    error  : false,\n    result : int // number of documents\n}\n\n\n\n\n\nError\n\n\n{\n    error   : true,\n    errCode : 4XX/5XX, // Error code\n    errMsg  : \nError text\n\n}\n\n\n\n\n\nDataManager.RunScript(data Object)\n\n\nA method that runs a server-side script. Parameters:\n\n\ndata Object\n - object containing the following attributes:\n\n\n{\n    script   : \n, // script identifier, mandatory\n    pool     : {}  // object with the data that will be passed to the server-side script, optional\n}\n\n\n\n\n\nReturned value \u2013 \nObject\n:\n\n\nSuccess\n\n\n{\n    error  : false\n}\n\n\n\n\n\nError\n\n\n{\n    error   : true,\n    errCode : 4XX/5XX, // Error code\n    errMsg  : \nError text\n\n}\n\n\n\n\n\nTrigger examples\n\n\n\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043d\u0430\u043b\u0438\u0447\u0438\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044f.\n\n\n\u041f\u0435\u0440\u0435\u0434 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u043c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044f \"name\" \u0438, \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0435\u0433\u043e \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u044f, \u043f\u0440\u0435\u0440\u0432\u0435\u043c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430.\n\n\nif\n \n(\n!\npool\n.\ndoc\n.\nhasOwnProperty\n(\nname\n))\n \n{\n   \n        \nreturn\n \nfalse\n;\n                     \n// if name is not specified then document creation will be interrupted\n\n    \n}\n \nelse\n \n{\n\n        \nreturn\n \ntrue\n;\n                      \n    \n};\n\n\n\n\n\n\n\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u043e-\u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e.\n\n\n\u041f\u0435\u0440\u0435\u0434 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u043c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044f \"name\" \u0438, \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0435\u0433\u043e \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u044f, \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e-\u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e.\n\n\nif\n \n(\n!\npool\n.\ndoc\n.\nhasOwnProperty\n(\nname\n))\n \n{\n \n        \npool\n.\ndoc\n.\nname\n \n=\n \nJohn Snow\n;\n    \n// if not specified, name is now \nJohn Snow\n dy default \n\n    \n}\n\n\n\nreturn\n \ntrue\n;\n                    \n\n\n\n\n\n\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0434\u0440\u0443\u0433\u043e\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438.\n\n\n\u041f\u043e\u0441\u043b\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430, \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0432 \u0434\u0440\u0443\u0433\u043e\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u0441\u043e \u0441\u0441\u044b\u043b\u043a\u043e\u0439 \u043d\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0439.\n\n\nDataManager\n.\nInsert\n({\n                           \n// create new document in the \nstuff\n collection\n\n        \ncoll\n \n:\n \nstuff\n,\n\n        \ndoc\n  \n:\n \n{\n\n                   \nthing\n:\n \npool\n.\nnewDoc\n.\n_id\n    \n// pass _id value to the new document\ns field \nthing\n\n        \n}\n\n    \n})\n\n\n\n\n\n\n\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0445 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u0434\u0440\u0443\u0433\u043e\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438.\n\n\n\u041f\u0435\u0440\u0435\u0434 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435\u043c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430, \u0443\u0434\u0430\u043b\u0438\u043c \u0432\u0441\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b \u0434\u0440\u0443\u0433\u043e\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u0441\u043e \u0441\u0441\u044b\u043b\u043a\u043e\u0439 \u043d\u0430 \u0443\u0434\u0430\u043b\u044f\u0435\u043c\u044b\u0439.\n\n\nDataManager\n.\nRemove\n({\n                           \n// \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043c \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0445 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u0432 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \nstuff\n\n    \ncoll\n  \n:\n \nstuff\n,\n\n    \nquery\n:\n \n{\n\n        \nthing\n:\n \npool\n.\nquery\n.\n_id\n                \n// \u043f\u0435\u0440\u0435\u0434\u0430\u0434\u0438\u043c _id \u0443\u0434\u0430\u043b\u044f\u0435\u043c\u043e\u0433\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\n\n    \n}\n\n\n})\n\n\nreturn\n \ntrue\n;\n\n\n\n\n\n\n\u0412\u044b\u0437\u043e\u0432 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0433\u043e \u0441\u043a\u0440\u0438\u043f\u0442\u0430.\n\n\n\u041f\u043e\u0441\u043b\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430, \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043c \u0441\u043a\u0440\u0438\u043f\u0442, \u043f\u0435\u0440\u0435\u0434\u0430\u0432 \u0435\u043c\u0443 \u043d\u043e\u0432\u044b\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442. \u0421\u043a\u0440\u0438\u043f\u0442 \u043c\u043e\u0436\u0435\u0442, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u0442\u044c \u0440\u0430\u0441\u0441\u044b\u043b\u043a\u0443 PUSH-\u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439.\n\n\nDataManager\n.\nRunScript\n({\n                   \n// \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043c \u0437\u0430\u043f\u0443\u0441\u043a \u0441\u043a\u0440\u0438\u043f\u0442\u0430 \u0441 ID 580b386d42d52f1ba275fc24\n\n    \nscript\n  \n:\n \n580b386d42d52f1ba275fc24\n,\n\n    \npool\n:\n \n{\n\n        \ndoc\n:\n \npool\n.\nnewDoc\n                \n// \u043f\u0435\u0440\u0435\u0434\u0430\u0434\u0438\u043c \u043d\u043e\u0432\u044b\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\n\n    \n}\n\n\n})", 
            "title": "Triggers"
        }, 
        {
            "location": "/app/app4/#pool-object", 
            "text": "Object  pool  contains the following data:", 
            "title": "pool Object"
        }, 
        {
            "location": "/app/app4/#before-operation-insert", 
            "text": "{\n    coll :  , // collection name\n    doc : {}   // document with field_name:value pairs\n}", 
            "title": "Before operation insert:"
        }, 
        {
            "location": "/app/app4/#after-operation-insert", 
            "text": "{\n    coll :  ,   // collection name\n    newDoc : {}  // newly created document with field_name:value pairs\n}", 
            "title": "After operation insert:"
        }, 
        {
            "location": "/app/app4/#before-operation-remove", 
            "text": "{\n    coll :  ,  // collection name\n    query : {}  // search query on the basis of which documents should be removed\n}", 
            "title": "Before operation remove:"
        }, 
        {
            "location": "/app/app4/#after-operation-remove", 
            "text": "{\n    coll :  ,  // collection name\n    count : int, // number of removed documents\n    docs  : []  // array of deleted document IDs", 
            "title": "After operation remove:"
        }, 
        {
            "location": "/app/app4/#before-operation-update", 
            "text": "{\n    coll :  ,  // collection name\n    doc   : {}, // document with value update rules\n    query : {}  // search query on the basis of which documents should be updated\n}", 
            "title": "Before operation update:"
        }, 
        {
            "location": "/app/app4/#after-operation-update", 
            "text": "{\n    coll :  , // collection name\n    count : int, // number of updated documents\n    docs  : []  // array of updated document IDs\n}", 
            "title": "After operation update:"
        }, 
        {
            "location": "/app/app4/#before-operation-updatebyid", 
            "text": "{\n    coll        :  , // collection name\n    doc         : {}, // document with value update rules\n    query       : {}, // search query { _id  : }\n}", 
            "title": "Before operation updatebyid:"
        }, 
        {
            "location": "/app/app4/#after-operation-updatebyid", 
            "text": "{\n    coll        :  , // collection name\n    newDoc      : { } // updated document\n}", 
            "title": "After operation updatebyid:"
        }, 
        {
            "location": "/app/app4/#datamanager-object", 
            "text": "The  DataManager  object contains the following data handling methods:", 
            "title": "DataManager Object"
        }, 
        {
            "location": "/app/app4/#datamanagerinsertdata-object", 
            "text": "Method for inserting a document into a collection. Parameters:  data Object  - object containing the following attributes:  {\n    coll :  , // collection name, mandatory\n    doc  : {}  // document with field_name:value pairs, optional\n}  Returned value \u2013  Object :  Success  {\n    error  : false,\n    result : {}     // created document\n}  Error  {\n    error   : true,\n    errCode : 4XX/5XX, // Error code\n    errMsg  :  Error text \n}", 
            "title": "DataManager.Insert(data Object)"
        }, 
        {
            "location": "/app/app4/#datamanagerremovedata-object", 
            "text": "Method for removing documents from collection. Parameters:  data Object  - object containing the following attributes:  {\n    coll  :  , // collection name, mandatory\n    query : {}, // query with field_name/operator:value pairs, optional\n    limit : int // limit for the number of documents to be removed, optional,\n                // if not specified, the first 1,000 documents will be removed\n}  Returned value \u2013  Object :  Success  {\n    error  : false,\n    result : {\n        count : int, // number of removed documents\n        docs  : []  // array of removed document IDs\n    }\n}  Error  {\n    error   : true,\n    errCode : 4XX/5XX, // Error code\n    errMsg  :  Error text \n}", 
            "title": "DataManager.Remove(data Object)"
        }, 
        {
            "location": "/app/app4/#datamanagerupdatedata-object", 
            "text": "Method for updating documents in a collection. Parameters:  data Object  - object containing the following attributes:  {\n    coll  :  , // collection name, mandatory\n    query : {}, // query with field_name/operator:value pairs, optional\n    doc   : {}, // document with field_name:value pairs, mandatory\n    limit : int // limit for the number of documents to be updated, optional,\n                // if not specified, the first 1,000 documents will be updated\n}  Returned value \u2013  Object :  Success  {\n    error  : false,\n    result : {\n        count : int, // number of removed documents\n        docs  : []  // array of updated document IDs\n    }\n}  Error  {\n    error   : true,\n    errCode : 4XX/5XX, // Error code\n    errMsg  :  Error text \n}", 
            "title": "DataManager.Update(data Object)"
        }, 
        {
            "location": "/app/app4/#datamanagerupdatebyiddata-object", 
            "text": "Method for updating one document in a collection which is identified by its ID. Parameters:  data Object  - object containing the following attributes:  {\n    coll  :  , // collection name, mandatory\n    query : {}, // query in the following format:  _id  :  document identifier , mandatory\n    doc   : {}  // document with field_name:value pairs, mandatory\n}  Returned value -  Object :  Success  {\n    error  : false,\n    result : {} // updated document\n}  Error  {\n    error   : true,\n    errCode : 4XX/5XX, // Error code\n    errMsg  :  Error text \n}", 
            "title": "DataManager.UpdateById(data Object)"
        }, 
        {
            "location": "/app/app4/#datamanagerfinddata-object", 
            "text": "Method for requesting a document from a collection. Parameters:  data Object  - object containing the following attributes:  {\n    coll   :  , // collection name, mandatory\n    query  : {}, // query with field_name/operator:value pairs, optional if empty\n                 // then first 100 documents will be returned\n    sort   : {}, // sorting by fields in format field_name:1/-1, optional\n    fields : [], // list of field names that will be returned in each document, optional\n    limit  : int,// limit of the sample size, by default, 50\n    skip   : int // number of documents to be skipped in the sample\n}  Returned value \u2013  Object :  Success  {\n    error  : false,\n    result : [] // array of selected documents taking into account the limit\n}  Error  {\n    error   : true,\n    errCode : 4XX/5XX, // Error code\n    errMsg  :  Error text \n}", 
            "title": "DataManager.Find(data Object)"
        }, 
        {
            "location": "/app/app4/#datamanagercountdata-object", 
            "text": "Method for requesting the number of documents in a collection Parameters:  data Object  - object containing the following attributes:  {\n    coll  :  , // collection name, mandatory\n    query : {}  // query with field_name/operator:value pairs, optional\n}  Returned value \u2013  Object :  Success  {\n    error  : false,\n    result : int // number of documents\n}  Error  {\n    error   : true,\n    errCode : 4XX/5XX, // Error code\n    errMsg  :  Error text \n}", 
            "title": "DataManager.Count(data Object)"
        }, 
        {
            "location": "/app/app4/#datamanagerrunscriptdata-object", 
            "text": "A method that runs a server-side script. Parameters:  data Object  - object containing the following attributes:  {\n    script   :  , // script identifier, mandatory\n    pool     : {}  // object with the data that will be passed to the server-side script, optional\n}  Returned value \u2013  Object :  Success  {\n    error  : false\n}  Error  {\n    error   : true,\n    errCode : 4XX/5XX, // Error code\n    errMsg  :  Error text \n}", 
            "title": "DataManager.RunScript(data Object)"
        }, 
        {
            "location": "/app/app4/#trigger-examples", 
            "text": "", 
            "title": "Trigger examples"
        }, 
        {
            "location": "/app/app4/#_1", 
            "text": "\u041f\u0435\u0440\u0435\u0434 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u043c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044f \"name\" \u0438, \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0435\u0433\u043e \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u044f, \u043f\u0440\u0435\u0440\u0432\u0435\u043c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430.  if   ( ! pool . doc . hasOwnProperty ( name ))   {    \n         return   false ;                       // if name is not specified then document creation will be interrupted \n     }   else   { \n         return   true ;                       \n     };", 
            "title": "\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043d\u0430\u043b\u0438\u0447\u0438\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044f."
        }, 
        {
            "location": "/app/app4/#-", 
            "text": "\u041f\u0435\u0440\u0435\u0434 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u043c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044f \"name\" \u0438, \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0435\u0433\u043e \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u044f, \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e-\u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e.  if   ( ! pool . doc . hasOwnProperty ( name ))   {  \n         pool . doc . name   =   John Snow ;      // if not specified, name is now  John Snow  dy default  \n     }  return   true ;", 
            "title": "\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u043e-\u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e."
        }, 
        {
            "location": "/app/app4/#_2", 
            "text": "\u041f\u043e\u0441\u043b\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430, \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0432 \u0434\u0440\u0443\u0433\u043e\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u0441\u043e \u0441\u0441\u044b\u043b\u043a\u043e\u0439 \u043d\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0439.  DataManager . Insert ({                             // create new document in the  stuff  collection \n         coll   :   stuff , \n         doc    :   { \n                    thing :   pool . newDoc . _id      // pass _id value to the new document s field  thing \n         } \n     })", 
            "title": "\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0434\u0440\u0443\u0433\u043e\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438."
        }, 
        {
            "location": "/app/app4/#_3", 
            "text": "\u041f\u0435\u0440\u0435\u0434 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435\u043c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430, \u0443\u0434\u0430\u043b\u0438\u043c \u0432\u0441\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b \u0434\u0440\u0443\u0433\u043e\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u0441\u043e \u0441\u0441\u044b\u043b\u043a\u043e\u0439 \u043d\u0430 \u0443\u0434\u0430\u043b\u044f\u0435\u043c\u044b\u0439.  DataManager . Remove ({                             // \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043c \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0445 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u0432 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438  stuff \n     coll    :   stuff , \n     query :   { \n         thing :   pool . query . _id                  // \u043f\u0435\u0440\u0435\u0434\u0430\u0434\u0438\u043c _id \u0443\u0434\u0430\u043b\u044f\u0435\u043c\u043e\u0433\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \n     }  })  return   true ;", 
            "title": "\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0445 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u0434\u0440\u0443\u0433\u043e\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438."
        }, 
        {
            "location": "/app/app4/#_4", 
            "text": "\u041f\u043e\u0441\u043b\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430, \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043c \u0441\u043a\u0440\u0438\u043f\u0442, \u043f\u0435\u0440\u0435\u0434\u0430\u0432 \u0435\u043c\u0443 \u043d\u043e\u0432\u044b\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442. \u0421\u043a\u0440\u0438\u043f\u0442 \u043c\u043e\u0436\u0435\u0442, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u0442\u044c \u0440\u0430\u0441\u0441\u044b\u043b\u043a\u0443 PUSH-\u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439.  DataManager . RunScript ({                     // \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043c \u0437\u0430\u043f\u0443\u0441\u043a \u0441\u043a\u0440\u0438\u043f\u0442\u0430 \u0441 ID 580b386d42d52f1ba275fc24 \n     script    :   580b386d42d52f1ba275fc24 , \n     pool :   { \n         doc :   pool . newDoc                  // \u043f\u0435\u0440\u0435\u0434\u0430\u0434\u0438\u043c \u043d\u043e\u0432\u044b\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \n     }  })", 
            "title": "\u0412\u044b\u0437\u043e\u0432 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0433\u043e \u0441\u043a\u0440\u0438\u043f\u0442\u0430."
        }, 
        {
            "location": "/app/app5/", 
            "text": "General info\n\n\nThe server-side code is Java scripts executed on a server using the Google V8 engine. The developed server code is executed in accordance with a schedule (plan) or only once when called using the API method. To create a new script, click the Create button.\n\n\n\n\n\n\nEnter the server code in the corresponding box. To save the entered description, click Save. To allow the script to be run by an anonymous user (without authentication), check the corresponding field in the ACL tab. To configure a plan to run the server code, go to the Plan running tab. Enable the Timer parameter to execute the created server code in accordance with the schedule. Then, define the schedule and specify the date when it will become effective.\n\n\n\n\nThe following schedule options are available:\n\n\n\n\nOnce\n\n\nRandomly after a set time interval (days, hours, minutes)\n\n\nDaily (on set days of the week and at a set time)\n\n\nMonthly (on set months, days of month and at a set time)\n\n\n\n\n\n\nThe server-side code starts in a separate context and the following objects are available:\n\n\n\n\nscorocode\n \u2013 SDK scorocode, connected to the code using var scorocode = require('scorocode');\n\n\npool\n \u2013 any object transferred when calling the script execution method via API that contains the transferred attributes.\n\n\n\n\nNPM module support\n\n\nTo connect third-party modules to your script, describe all existing dependencies. For this purpose, go to the Application settings section and choose the NPM dependencies item.\n\n\n\n\nIn the dependencies section, describe all modules that you are going to use where the attribute is a module name and the value is the required version (you can leave the version value empty; in this case, the latest module version will be installed).\n\n\nExample:\n\n\n    {\n        \ndependencies\n: {\n            \nscorocode\n: \n\n        }\n    }\n\n\n\n\n\nWhenever you need to use module in your script, you can require it like this: \nvar sc = require('scorocode')", 
            "title": "Serverside code"
        }, 
        {
            "location": "/app/app5/#general-info", 
            "text": "The server-side code is Java scripts executed on a server using the Google V8 engine. The developed server code is executed in accordance with a schedule (plan) or only once when called using the API method. To create a new script, click the Create button.    Enter the server code in the corresponding box. To save the entered description, click Save. To allow the script to be run by an anonymous user (without authentication), check the corresponding field in the ACL tab. To configure a plan to run the server code, go to the Plan running tab. Enable the Timer parameter to execute the created server code in accordance with the schedule. Then, define the schedule and specify the date when it will become effective.   The following schedule options are available:   Once  Randomly after a set time interval (days, hours, minutes)  Daily (on set days of the week and at a set time)  Monthly (on set months, days of month and at a set time)    The server-side code starts in a separate context and the following objects are available:   scorocode  \u2013 SDK scorocode, connected to the code using var scorocode = require('scorocode');  pool  \u2013 any object transferred when calling the script execution method via API that contains the transferred attributes.", 
            "title": "General info"
        }, 
        {
            "location": "/app/app5/#npm-module-support", 
            "text": "To connect third-party modules to your script, describe all existing dependencies. For this purpose, go to the Application settings section and choose the NPM dependencies item.   In the dependencies section, describe all modules that you are going to use where the attribute is a module name and the value is the required version (you can leave the version value empty; in this case, the latest module version will be installed).  Example:      {\n         dependencies : {\n             scorocode :  \n        }\n    }  Whenever you need to use module in your script, you can require it like this:  var sc = require('scorocode')", 
            "title": "NPM module support"
        }, 
        {
            "location": "/app/bots/", 
            "text": "Telegram Bot creation\n\n\nBefore you start developing your new bot, at first you need to register bot in Telegram and receive his unique identifier. On Telegram, open the \n@BotFather\n profile, and start to talk with \u201chim\u201d. Type the command \u201c/newbot\u201d. \n@BotFather\n will ask you for a bot name, which is a free text, and a bot username: it always end by \u201cbot\u201d. After that \n@BotFather\n will give you new bot id, which looks like \n321196098:AAEDbOYD6iLWsHD7w28vqf3a9oBeJAPXXpg\n\n\nSecondly, you need to create server-side script in your Scorocode application that will be associated with the bot to hande all data processing.\n\n\nAfter that you need to create new Scorocode bot. You can do it in the \"Bots\" page by pressing \"Create new bot\" button. This action will show you a form in witch you can specify bot's data:\n\n\n\n\n\n\n\n\nParameter\n\n\nProperties\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nBot name\n\n\nMandatory\n\n\nApplication bot name\n\n\n\n\n\n\nBot identifier\n\n\nMandatory\n\n\nBot's Telegram id , given by '@BotFather'\n\n\n\n\n\n\nScript identifier\n\n\nMandatory\n\n\nChoose script from the list of application server-side scripts\n\n\n\n\n\n\nBot activation flag\n\n\nOptional, \nfalse\n by default\n\n\nSet the flag to activate your bot\n\n\n\n\n\n\n\n\nPress save button to save new bot. At any time you can edit bot's setting by pressing \"edit\" button.\n\n\n\n\nMain principles\n\n\nWhen your bot is activated Scorocode creates the \nwebhook\n to receive Telegram data. This data is available in your server-side script 'pool' object everytime it receives update from Telegram. See \n'getting updates' documentation\n for a complete \nUpdate\n object description.\n\n\n\u041e\u0442\u0432\u0435\u0442\u043d\u044b\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0442 \u0431\u043e\u0442\u0430 \u043f\u0435\u0440\u0435\u0434\u0430\u044e\u0442\u0441\u044f \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 .send(data) \u043a\u043b\u0430\u0441\u0441\u0430 sc.Bot, \u0433\u0434\u0435 data - \u043e\u0431\u044a\u0435\u043a\u0442, \u0438\u043c\u0435\u044e\u0449\u0438\u0439 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443:\n\n\n{\n\n    \nmethod\n:\n \nsendMessage\n,\n                            \n//\n \nTelegram\n \nBot\n \nAPI\n \nmethod\n\n    \nmethod_params\n:\n \n{\n                                  \n//\n \nmethod\n \nparams\n \nto\n \nbe\n \npassed\n\n      \nchat_id\n:\n \npool.message.chat.id.toString(),\n\n      \ntext\n:\n \nHello!\n,\n\n      \nreply_to_message_id\n:\n \npool.message.message_id,\n\n      \nreply_markup\n:\n \nkeyBoard\n\n    \n}\n,\n\n  \n}\n\n\n\n\n\n\nSee \nTelegram Bot API documentation\n for a complete list of available methods and their parameters.\n\n\n\n\nSupported methods\n\n\nAll \nTelegram Bot API\n v 2.3.1 methods are supported, except \nTelegram Bot Games API\n methods.\n\n\n\n\nBot server-side script example:\n\n\nvar\n \nsc\n \n=\n \nrequire\n(\nscorocode\n);\n\n\n\nvar\n \nclient\n \n=\n \nsc\n.\nInit\n({\n\n  \nApplicationID\n:\n \nxxx\n,\n \n// \n- replace xxx with your appId key\n\n  \nJavaScriptKey\n:\n \nxxx\n,\n \n// \n- replace xxx with your JavaScript key\n\n  \nMasterKey\n:\n \nxxx\n      \n// \n- replace xxx with your MasterKey key\n\n\n});\n\n\n\nvar\n \nbot\n \n=\n \nnew\n \nsc\n.\nBot\n(\n321196098:AAEDbOYD6iLWsHD7w28vqf3a9oBeJAPXXpg\n);\n\n\nvar\n \nquerystring\n \n=\n \nrequire\n(\nquerystring\n);\n\n\n\n// Crate new button for ReplyKeyboardMarkup\n\n\nfunction\n \nnewKeyboardButton\n(\ntext\n,\n \nrequest_contact\n,\n \nrequest_location\n)\n \n{\n\n  \nvar\n \nbutton\n \n=\n \n{\n\n    \ntext\n:\n \ntext\n\n  \n}\n\n\n  \nif\n \n(\nrequest_contact\n)\n \n{\n\n    \nbutton\n.\nrequest_contact\n \n=\n \nrequest_contact\n\n  \n}\n\n\n  \nif\n \n(\nrequest_location\n)\n \n{\n\n    \nbutton\n.\nrequest_location\n \n=\n \nrequest_location\n\n  \n}\n\n\n  \nreturn\n \nbutton\n\n\n}\n\n\n\n// Main logic\n\n\n\nconst\n \nsourceMessage\n \n=\n \npool\n.\nmessage\n.\ntext\n.\ntoLowerCase\n()\n\n\nvar\n \nrequest\n \n=\n \nnull\n\n\n\nif\n \n(\nsourceMessage\n \n===\n \n/start\n \n||\n \nsourceMessage\n \n===\n \nHi there\n)\n \n{\n\n\n  \nvar\n \nkeyBoard\n \n=\n \n{\n\n    \nkeyboard\n:\n \n[\n\n      \n[\n \nnewKeyboardButton\n(\nHi there\n)\n \n],\n\n      \n[\n \nnewKeyboardButton\n(\nmy phone number\n,\n \ntrue\n)],\n\n      \n[\n \nnewKeyboardButton\n(\nlogo\n)\n \n]\n\n    \n]\n\n  \n}\n\n\n  \nrequest\n \n=\n \n{\n\n    \nmethod\n:\n \nsendMessage\n,\n\n    \nmethod_params\n:\n \n{\n\n      \nchat_id\n:\n \npool\n.\nmessage\n.\nchat\n.\nid\n.\ntoString\n(),\n\n      \ntext\n:\n \nHello!\n,\n\n      \nreply_to_message_id\n:\n \npool\n.\nmessage\n.\nmessage_id\n,\n\n      \nreply_markup\n:\n \nkeyBoard\n\n    \n},\n\n  \n}\n\n\n\n}\n \nelse\n \nif\n \n(\nsourceMessage\n \n===\n \nlogo\n)\n \n{\n\n\n  \nrequest\n \n=\n \n{\n\n    \nmethod\n:\n \nsendPhoto\n,\n\n    \nmethod_params\n:\n \n{\n\n      \nchat_id\n:\n \npool\n.\nmessage\n.\nchat\n.\nid\n.\ntoString\n(),\n\n      \nphoto\n:\n \nhttps://habrastorage.org/files/aab/c24/364/aabc24364c3b4e109c20ae71da646d91.jpg\n,\n\n    \n},\n\n  \n}\n\n\n\n}\n \nelse\n \n{\n\n  \nreturn\n\n\n}\n\n\n\nbot\n.\nsend\n(\nrequest\n);", 
            "title": "Telegram bots"
        }, 
        {
            "location": "/app/bots/#telegram-bot-creation", 
            "text": "Before you start developing your new bot, at first you need to register bot in Telegram and receive his unique identifier. On Telegram, open the  @BotFather  profile, and start to talk with \u201chim\u201d. Type the command \u201c/newbot\u201d.  @BotFather  will ask you for a bot name, which is a free text, and a bot username: it always end by \u201cbot\u201d. After that  @BotFather  will give you new bot id, which looks like  321196098:AAEDbOYD6iLWsHD7w28vqf3a9oBeJAPXXpg  Secondly, you need to create server-side script in your Scorocode application that will be associated with the bot to hande all data processing.  After that you need to create new Scorocode bot. You can do it in the \"Bots\" page by pressing \"Create new bot\" button. This action will show you a form in witch you can specify bot's data:     Parameter  Properties  Description      Bot name  Mandatory  Application bot name    Bot identifier  Mandatory  Bot's Telegram id , given by '@BotFather'    Script identifier  Mandatory  Choose script from the list of application server-side scripts    Bot activation flag  Optional,  false  by default  Set the flag to activate your bot     Press save button to save new bot. At any time you can edit bot's setting by pressing \"edit\" button.", 
            "title": "Telegram Bot creation"
        }, 
        {
            "location": "/app/bots/#main-principles", 
            "text": "When your bot is activated Scorocode creates the  webhook  to receive Telegram data. This data is available in your server-side script 'pool' object everytime it receives update from Telegram. See  'getting updates' documentation  for a complete  Update  object description.  \u041e\u0442\u0432\u0435\u0442\u043d\u044b\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0442 \u0431\u043e\u0442\u0430 \u043f\u0435\u0440\u0435\u0434\u0430\u044e\u0442\u0441\u044f \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 .send(data) \u043a\u043b\u0430\u0441\u0441\u0430 sc.Bot, \u0433\u0434\u0435 data - \u043e\u0431\u044a\u0435\u043a\u0442, \u0438\u043c\u0435\u044e\u0449\u0438\u0439 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443:  { \n     method :   sendMessage ,                              //   Telegram   Bot   API   method \n     method_params :   {                                    //   method   params   to   be   passed \n       chat_id :   pool.message.chat.id.toString(), \n       text :   Hello! , \n       reply_to_message_id :   pool.message.message_id, \n       reply_markup :   keyBoard \n     } , \n   }   See  Telegram Bot API documentation  for a complete list of available methods and their parameters.   Supported methods  All  Telegram Bot API  v 2.3.1 methods are supported, except  Telegram Bot Games API  methods.", 
            "title": "Main principles"
        }, 
        {
            "location": "/app/bots/#bot-server-side-script-example", 
            "text": "var   sc   =   require ( scorocode );  var   client   =   sc . Init ({ \n   ApplicationID :   xxx ,   //  - replace xxx with your appId key \n   JavaScriptKey :   xxx ,   //  - replace xxx with your JavaScript key \n   MasterKey :   xxx        //  - replace xxx with your MasterKey key  });  var   bot   =   new   sc . Bot ( 321196098:AAEDbOYD6iLWsHD7w28vqf3a9oBeJAPXXpg );  var   querystring   =   require ( querystring );  // Crate new button for ReplyKeyboardMarkup  function   newKeyboardButton ( text ,   request_contact ,   request_location )   { \n   var   button   =   { \n     text :   text \n   } \n\n   if   ( request_contact )   { \n     button . request_contact   =   request_contact \n   } \n\n   if   ( request_location )   { \n     button . request_location   =   request_location \n   } \n\n   return   button  }  // Main logic  const   sourceMessage   =   pool . message . text . toLowerCase ()  var   request   =   null  if   ( sourceMessage   ===   /start   ||   sourceMessage   ===   Hi there )   { \n\n   var   keyBoard   =   { \n     keyboard :   [ \n       [   newKeyboardButton ( Hi there )   ], \n       [   newKeyboardButton ( my phone number ,   true )], \n       [   newKeyboardButton ( logo )   ] \n     ] \n   } \n\n   request   =   { \n     method :   sendMessage , \n     method_params :   { \n       chat_id :   pool . message . chat . id . toString (), \n       text :   Hello! , \n       reply_to_message_id :   pool . message . message_id , \n       reply_markup :   keyBoard \n     }, \n   }  }   else   if   ( sourceMessage   ===   logo )   { \n\n   request   =   { \n     method :   sendPhoto , \n     method_params :   { \n       chat_id :   pool . message . chat . id . toString (), \n       photo :   https://habrastorage.org/files/aab/c24/364/aabc24364c3b4e109c20ae71da646d91.jpg , \n     }, \n   }  }   else   { \n   return  }  bot . send ( request );", 
            "title": "Bot server-side script example:"
        }, 
        {
            "location": "/app/app6/", 
            "text": "To access the application configuration options, go to the Settings functional tab. The following categories of settings are available on the Settings page:\n\n\n\n\nApplication settings\n\n\nPrice plan\n\n\nSecurity\n\n\nDevelopers\n\n\nPush settings\n\n\nApplication user authentication\n\n\n\n\n\n\nPrice plan\n\n\nTo set up a price plan for the application, use the Price plan link. The page that opens, shows information on the current active price plan and its activated options.\n\n\n\n\nBy default, the FREE price plan with the following options is activated:\n\n\n\n\nRequests per second \u2013 20;\n\n\nDisk space \u2013 10 GB;\n\n\nPush notifications \u2013 500,000 (maximum);\n\n\nDevelopers \u2013 1 (including the application owner).\n\n\n\n\nTo acquire additional options, you will need to change your price plan to INDIE. To change the price plan, use the Change link in the line with the same name.\n\n\n\n\nIn the pop-up window, enter how many months are required for the INDIE price plan (by default, 1). The service will calculate the price taking into account any discount. A discount is offered when a price plan/option is purchased for a period of more than 12 months. To confirm the price plan purchase, click the Purchase button.\n\n\nNow you can purchase increases for the price plan option (if necessary). To do this, use the Change link in the line with the name of the required option, for example, Storage.\n\n\nIn the pop-up box, specify the number of months you want to purchase and the additional option size. The service will calculate the price taking into account your discount. To confirm the purchase of the additional price plan option size, click the Purchase button. The list of activated options will display information about all your purchases, with purchase dates and the dates when the settings will be deactivated.\n\n\nWhen the purchased price plan and/or option expire, the existing restrictions will be recalculated based on the deactivation dates of all purchased add-ons to a certain price plan or option.\n\n\nWhen all purchased option add-ons expire, its values are set to default.\n\n\nWhen the INDIE price plan expires, the FREE price plan is activated with its option values.\n\n\nSecurity\n\n\nUse the Security link to configure keys to access the application and public access to the application data.\n\n\n\n\nThe page displays the following keys:\n\n\n\n\nappID \u2013 application identifier;\n\n\nandroid \u2013 Android platform client key;\n\n\njavascript \u2013 JavaScript platform client key;\n\n\niOs \u2013 iOs platform client key;\n\n\nwinphone\u2013 winPhone platform client key;\n\n\nmasterKey \u2013 master key of the application for full access via API;\n\n\nfileKey \u2013 key for access to API functions of the application (files);\n\n\nscriptKey \u2013 key for access to API functions of the application (scripts);\n\n\nmessageKey \u2013 key for access to API functions of the application (messages);\n\n\nwebSocketKey \u2013 key for access to API functions of the application (websocket).\n\n\n\n\nThe Reset button next to each key can be used to reset its value and generate a new key. Access to the corresponding functions using old keys will not be available after that.\n\n\nTo allow or prohibit public (unauthenticated) access to the application data, set ACL options for reading, writing, updating and deleting.\n\n\nDevelopers\n\n\nDevelopers who have access to the application can be added using the Developers link.\n\n\n\n\nApplication developers can be added when the corresponding price plan is purchased, i.e. if an option is selected in the price plan for more than 1 developer.\n\n\nEnter the developer's email address and click Invite. The invitation will be sent to the developer's email address.\n\n\nPush settings\n\n\nThis category of settings is for configuring parameters required for sending Push notifications.\n\n\n\n\niOS Push\n\n\nClick the Load certificate button to load a certificate file to the application which is required for sending PUSH notifications to iOS devices.\n\n\nInformation\n about Apple PUSH notifications.\n\n\nAndroid PUSH\n\n\nEnter data in the GCM Sender ID and API key fields that is required to send PUSH notifications to Android devices.\n\n\nInformation\n about Android PUSH notifications.\n\n\nApplication user authentication\n\n\nUse this configuration section to define a user session duration.\n\n\n\n\nClick the Application user authentication link. On the page that opens, enter the duration in hours of the API session after the user logs into the application. By default, the duration of a user session is 72 hours.\n\n\nYou can also choose if a confirmation email should be sent to the user's email address to complete the registration process. If this option is specified, an email will be sent to the user's address after registration via API with a confirmation link to complete the registration process. Enter the text of the registration confirmation email in the text editor window.\n\n\nTo insert the verification link and username, insert the following values into the email text.\n\n\n\n\n%link%\n - verification link\n\n\n%username%\n - username", 
            "title": "Application settings"
        }, 
        {
            "location": "/app/app6/#price-plan", 
            "text": "To set up a price plan for the application, use the Price plan link. The page that opens, shows information on the current active price plan and its activated options.   By default, the FREE price plan with the following options is activated:   Requests per second \u2013 20;  Disk space \u2013 10 GB;  Push notifications \u2013 500,000 (maximum);  Developers \u2013 1 (including the application owner).   To acquire additional options, you will need to change your price plan to INDIE. To change the price plan, use the Change link in the line with the same name.   In the pop-up window, enter how many months are required for the INDIE price plan (by default, 1). The service will calculate the price taking into account any discount. A discount is offered when a price plan/option is purchased for a period of more than 12 months. To confirm the price plan purchase, click the Purchase button.  Now you can purchase increases for the price plan option (if necessary). To do this, use the Change link in the line with the name of the required option, for example, Storage.  In the pop-up box, specify the number of months you want to purchase and the additional option size. The service will calculate the price taking into account your discount. To confirm the purchase of the additional price plan option size, click the Purchase button. The list of activated options will display information about all your purchases, with purchase dates and the dates when the settings will be deactivated.  When the purchased price plan and/or option expire, the existing restrictions will be recalculated based on the deactivation dates of all purchased add-ons to a certain price plan or option.  When all purchased option add-ons expire, its values are set to default.  When the INDIE price plan expires, the FREE price plan is activated with its option values.", 
            "title": "Price plan"
        }, 
        {
            "location": "/app/app6/#security", 
            "text": "Use the Security link to configure keys to access the application and public access to the application data.   The page displays the following keys:   appID \u2013 application identifier;  android \u2013 Android platform client key;  javascript \u2013 JavaScript platform client key;  iOs \u2013 iOs platform client key;  winphone\u2013 winPhone platform client key;  masterKey \u2013 master key of the application for full access via API;  fileKey \u2013 key for access to API functions of the application (files);  scriptKey \u2013 key for access to API functions of the application (scripts);  messageKey \u2013 key for access to API functions of the application (messages);  webSocketKey \u2013 key for access to API functions of the application (websocket).   The Reset button next to each key can be used to reset its value and generate a new key. Access to the corresponding functions using old keys will not be available after that.  To allow or prohibit public (unauthenticated) access to the application data, set ACL options for reading, writing, updating and deleting.", 
            "title": "Security"
        }, 
        {
            "location": "/app/app6/#developers", 
            "text": "Developers who have access to the application can be added using the Developers link.   Application developers can be added when the corresponding price plan is purchased, i.e. if an option is selected in the price plan for more than 1 developer.  Enter the developer's email address and click Invite. The invitation will be sent to the developer's email address.", 
            "title": "Developers"
        }, 
        {
            "location": "/app/app6/#push-settings", 
            "text": "This category of settings is for configuring parameters required for sending Push notifications.", 
            "title": "Push settings"
        }, 
        {
            "location": "/app/app6/#ios-push", 
            "text": "Click the Load certificate button to load a certificate file to the application which is required for sending PUSH notifications to iOS devices.  Information  about Apple PUSH notifications.", 
            "title": "iOS Push"
        }, 
        {
            "location": "/app/app6/#android-push", 
            "text": "Enter data in the GCM Sender ID and API key fields that is required to send PUSH notifications to Android devices.  Information  about Android PUSH notifications.", 
            "title": "Android PUSH"
        }, 
        {
            "location": "/app/app6/#application-user-authentication", 
            "text": "Use this configuration section to define a user session duration.   Click the Application user authentication link. On the page that opens, enter the duration in hours of the API session after the user logs into the application. By default, the duration of a user session is 72 hours.  You can also choose if a confirmation email should be sent to the user's email address to complete the registration process. If this option is specified, an email will be sent to the user's address after registration via API with a confirmation link to complete the registration process. Enter the text of the registration confirmation email in the text editor window.  To insert the verification link and username, insert the following values into the email text.   %link%  - verification link  %username%  - username", 
            "title": "Application user authentication"
        }, 
        {
            "location": "/httpapi/appapi/", 
            "text": "Get application info\n\n\nhttps://api.scorocode.ru/api/v1/app\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n         : \n, // application identifier, mandatory\n    \ncli\n         : \n, // client key, mandatory\n    \nacc\n         : \n  // access key, mandatory, masterKey only\n}\n\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n  \napp\n: {\n    \n_id\n: \n584e64f8982fd55332741516\n,\n    \nappId\n: \n48f172923acd719b42c73ac3a492cfc8\n,\n    \nname\n: \nHTTPApp\n,\n    \ndescription\n: \n,\n    \nuserId\n: \n5745b2123evlfh062612e3f\n,\n    \nserverId\n: \n5745a5e63ef62fs0626ftgeb\n,\n    \nlimits\n: {\n      \nrps\n: 20,\n      \nstore\n: 10737418240,\n      \npushValue\n: 0,\n      \npushUsed\n: 0,\n      \ndevelopers\n: 1,\n      \nws\n: 200,\n      \nscriptTimeout\n: 3\n    },\n    \nschemas\n: {\n      \ndevices\n: {\n        \nid\n: \n584e64f8982fd55332741515\n,\n        \nname\n: \ndevices\n,\n        \nuseDocsACL\n: false,\n        \nACL\n: {\n          \ncreate\n: [\n            \n*\n\n          ],\n          \nread\n: [\n            \n*\n\n          ],\n          \nremove\n: [\n            \n*\n\n          ],\n          \nupdate\n: [\n            \n*\n\n          ]\n        },\n        \ntriggers\n: {\n          \nafterFind\n: {\n            \ncode\n: \n,\n            \nisActive\n: false\n          },\n          \nafterInsert\n: {\n            \ncode\n: \n,\n            \nisActive\n: false\n          },\n          \nafterRemove\n: {\n            \ncode\n: \n,\n            \nisActive\n: false\n          },\n          \nafterUpdate\n: {\n            \ncode\n: \n,\n            \nisActive\n: false\n          },\n          \nbeforeInsert\n: {\n            \ncode\n: \n,\n            \nisActive\n: false\n          },\n          \nbeforeRemove\n: {\n            \ncode\n: \n,\n            \nisActive\n: false\n          },\n          \nbeforeUpdate\n: {\n            \ncode\n: \n,\n            \nisActive\n: false\n          }\n        },\n        \nfields\n: [\n          {\n            \nname\n: \nreadACL\n,\n            \ntype\n: \nACL\n,\n            \ntarget\n: \n,\n            \nsystem\n: true,\n            \nreadonly\n: false,\n            \nrequired\n: false\n          },\n          {\n            \nname\n: \nupdateACL\n,\n            \ntype\n: \nACL\n,\n            \ntarget\n: \n,\n            \nsystem\n: true,\n            \nreadonly\n: false,\n            \nrequired\n: false\n          },\n          {\n            \nname\n: \nremoveACL\n,\n            \ntype\n: \nACL\n,\n            \ntarget\n: \n,\n            \nsystem\n: true,\n            \nreadonly\n: false,\n            \nrequired\n: false\n          },\n          {\n            \nname\n: \ncreatedAt\n,\n            \ntype\n: \nDate\n,\n            \ntarget\n: \n,\n            \nsystem\n: true,\n            \nreadonly\n: true,\n            \nrequired\n: false\n          },\n          {\n            \nname\n: \nupdatedAt\n,\n            \ntype\n: \nDate\n,\n            \ntarget\n: \n,\n            \nsystem\n: true,\n            \nreadonly\n: true,\n            \nrequired\n: false\n          },\n          {\n            \nname\n: \nuserId\n,\n            \ntype\n: \nString\n,\n            \ntarget\n: \n,\n            \nsystem\n: true,\n            \nreadonly\n: false,\n            \nrequired\n: false\n          },\n          {\n            \nname\n: \ndeviceId\n,\n            \ntype\n: \nString\n,\n            \ntarget\n: \n,\n            \nsystem\n: true,\n            \nreadonly\n: true,\n            \nrequired\n: true\n          },\n          {\n            \nname\n: \ndeviceType\n,\n            \ntype\n: \nString\n,\n            \ntarget\n: \n,\n            \nsystem\n: true,\n            \nreadonly\n: true,\n            \nrequired\n: true\n          }\n        ],\n        \nsystem\n: true,\n        \nindexes\n: []\n      },\n      \nroles\n: {\n        \nid\n: \n584e64f8982fd55332741513\n,\n        \nname\n: \nroles\n,\n        \nuseDocsACL\n: false,\n        \nACL\n: {\n          \ncreate\n: [\n            \n*\n\n          ],\n          \nread\n: [\n            \n*\n\n          ],\n          \nremove\n: [\n            \n*\n\n          ],\n          \nupdate\n: [\n            \n*\n\n          ]\n        },\n        \ntriggers\n: {\n          \nafterFind\n: {\n            \ncode\n: \n,\n            \nisActive\n: false\n          },\n          \nafterInsert\n: {\n            \ncode\n: \n,\n            \nisActive\n: false\n          },\n          \nafterRemove\n: {\n            \ncode\n: \n,\n            \nisActive\n: false\n          },\n          \nafterUpdate\n: {\n            \ncode\n: \n,\n            \nisActive\n: false\n          },\n          \nbeforeInsert\n: {\n            \ncode\n: \n,\n            \nisActive\n: false\n          },\n          \nbeforeRemove\n: {\n            \ncode\n: \n,\n            \nisActive\n: false\n          },\n          \nbeforeUpdate\n: {\n            \ncode\n: \n,\n            \nisActive\n: false\n          }\n        },\n        \nfields\n: [\n          {\n            \nname\n: \nname\n,\n            \ntype\n: \nString\n,\n            \ntarget\n: \n,\n            \nsystem\n: true,\n            \nreadonly\n: false,\n            \nrequired\n: true\n          },\n          {\n            \nname\n: \nreadACL\n,\n            \ntype\n: \nACL\n,\n            \ntarget\n: \n,\n            \nsystem\n: true,\n            \nreadonly\n: false,\n            \nrequired\n: false\n          },\n          {\n            \nname\n: \nupdateACL\n,\n            \ntype\n: \nACL\n,\n            \ntarget\n: \n,\n            \nsystem\n: true,\n            \nreadonly\n: false,\n            \nrequired\n: false\n          },\n          {\n            \nname\n: \nremoveACL\n,\n            \ntype\n: \nACL\n,\n            \ntarget\n: \n,\n            \nsystem\n: true,\n            \nreadonly\n: false,\n            \nrequired\n: false\n          },\n          {\n            \nname\n: \ncreatedAt\n,\n            \ntype\n: \nDate\n,\n            \ntarget\n: \n,\n            \nsystem\n: true,\n            \nreadonly\n: true,\n            \nrequired\n: false\n          },\n          {\n            \nname\n: \nupdatedAt\n,\n            \ntype\n: \nDate\n,\n            \ntarget\n: \n,\n            \nsystem\n: true,\n            \nreadonly\n: true,\n            \nrequired\n: false\n          }\n        ],\n        \nsystem\n: true,\n        \nindexes\n: []\n      },\n      \nusers\n: {\n        \nid\n: \n584e64f8982fd55332741514\n,\n        \nname\n: \nusers\n,\n        \nuseDocsACL\n: false,\n        \nACL\n: {\n          \ncreate\n: [\n            \n*\n\n          ],\n          \nread\n: [\n            \n*\n\n          ],\n          \nremove\n: [\n            \n*\n\n          ],\n          \nupdate\n: [\n            \n*\n\n          ]\n        },\n        \ntriggers\n: {\n          \nafterFind\n: {\n            \ncode\n: \n,\n            \nisActive\n: false\n          },\n          \nafterInsert\n: {\n            \ncode\n: \n,\n            \nisActive\n: false\n          },\n          \nafterRemove\n: {\n            \ncode\n: \n,\n            \nisActive\n: false\n          },\n          \nafterUpdate\n: {\n            \ncode\n: \n,\n            \nisActive\n: false\n          },\n          \nbeforeInsert\n: {\n            \ncode\n: \n,\n            \nisActive\n: false\n          },\n          \nbeforeRemove\n: {\n            \ncode\n: \n,\n            \nisActive\n: false\n          },\n          \nbeforeUpdate\n: {\n            \ncode\n: \n,\n            \nisActive\n: false\n          }\n        },\n        \nfields\n: [\n          {\n            \nname\n: \nemail\n,\n            \ntype\n: \nString\n,\n            \ntarget\n: \n,\n            \nsystem\n: true,\n            \nreadonly\n: true,\n            \nrequired\n: true\n          },\n          {\n            \nname\n: \nphone\n,\n            \ntype\n: \nString\n,\n            \ntarget\n: \n,\n            \nsystem\n: true,\n            \nreadonly\n: false,\n            \nrequired\n: false\n          },\n          {\n            \nname\n: \nreadACL\n,\n            \ntype\n: \nACL\n,\n            \ntarget\n: \n,\n            \nsystem\n: true,\n            \nreadonly\n: false,\n            \nrequired\n: false\n          },\n          {\n            \nname\n: \nupdateACL\n,\n            \ntype\n: \nACL\n,\n            \ntarget\n: \n,\n            \nsystem\n: true,\n            \nreadonly\n: false,\n            \nrequired\n: false\n          },\n          {\n            \nname\n: \nremoveACL\n,\n            \ntype\n: \nACL\n,\n            \ntarget\n: \n,\n            \nsystem\n: true,\n            \nreadonly\n: false,\n            \nrequired\n: false\n          },\n          {\n            \nname\n: \ncreatedAt\n,\n            \ntype\n: \nDate\n,\n            \ntarget\n: \n,\n            \nsystem\n: true,\n            \nreadonly\n: true,\n            \nrequired\n: false\n          },\n          {\n            \nname\n: \nupdatedAt\n,\n            \ntype\n: \nDate\n,\n            \ntarget\n: \n,\n            \nsystem\n: true,\n            \nreadonly\n: true,\n            \nrequired\n: false\n          },\n          {\n            \nname\n: \nusername\n,\n            \ntype\n: \nString\n,\n            \ntarget\n: \n,\n            \nsystem\n: true,\n            \nreadonly\n: false,\n            \nrequired\n: true\n          },\n          {\n            \nname\n: \npassword\n,\n            \ntype\n: \nPassword\n,\n            \ntarget\n: \n,\n            \nsystem\n: true,\n            \nreadonly\n: false,\n            \nrequired\n: true\n          },\n          {\n            \nname\n: \nemailVerified\n,\n            \ntype\n: \nBoolean\n,\n            \ntarget\n: \n,\n            \nsystem\n: true,\n            \nreadonly\n: true,\n            \nrequired\n: false\n          },\n          {\n            \nname\n: \nroles\n,\n            \ntype\n: \nArray\n,\n            \ntarget\n: \n,\n            \nsystem\n: true,\n            \nreadonly\n: false,\n            \nrequired\n: false\n          },\n          {\n            \nname\n: \ntoken\n,\n            \ntype\n: \nString\n,\n            \ntarget\n: \n,\n            \nsystem\n: true,\n            \nreadonly\n: true,\n            \nrequired\n: false\n          }\n        ],\n        \nsystem\n: true,\n        \nindexes\n: []\n      }\n    },\n    \naccessKeys\n: {\n      \nfileKey\n: \n31adc32bac245299cfad0d7b1912bc2a\n,\n      \nmasterKey\n: \nffe86fefg25fbklacsdee8cd4c59644a\n,\n      \nmessageKey\n: \n605a1248a2d27424ec43f6bdf435b0a7\n,\n      \nscriptKey\n: \n333efb738b82c3096a3fgdbabd27f702\n,\n      \nwebsocketKey\n: \n9627612736b1129d2ea9d615fb482a41\n\n    },\n    \nclientKeys\n: {\n      \nandroid\n: \ndb993776551ed6267fbe256ef0296cb8\n,\n      \nios\n: \n840ff61458ec11bf411859dbbf46d46a\n,\n      \njavascript\n: \nd6859f41223c9997ff78c6b4vb3a96bb\n,\n      \nwinphone\n: \n3fbce82fafba9dccc60036f92b971654\n\n    },\n    \nreadonly\n: true,\n    \nACLPublic\n: {\n      \ncreate\n: false,\n      \nread\n: false,\n      \nremove\n: false,\n      \nupdate\n: false\n    },\n    \nsettings\n: {\n      \nemailVerified\n: false,\n      \nsessionTimeout\n: 72,\n      \nandroidApiKey\n: \n,\n      \ngcmSenderId\n: \n,\n      \nmailTemplates\n: {\n        \nforgot\n: {\n          \nsubject\n: \n,\n          \nbody\n: \n\n        },\n        \nreg\n: {\n          \nsubject\n: \n,\n          \nbody\n: \n\n        }\n      },\n      \nsmtp\n: null\n    },\n    \nstorage\n: {\n      \nuser\n: \n,\n      \npassword\n: \n\n    },\n    \nnpm\n: \n{\\\ndependencies\\\n:{}}\n,\n    \nstringId\n: \n584e64f8982fd55332741516\n\n  },\n  \nerror\n: false\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n        \nacc\n: \nffe86fefg25fbklacsdee8cd4c59644a\n,\n        \napp\n: \n48f172923acd719b42c73ac3a492cfc8\n,\n        \ncli\n: \nd6859f41223c9997ff78c6b4vb3a96bb\n\n}\n \nhttps://api.scorocode.ru/api/v1/app\n\n\n\n\n\n\n\n\nRetrieve list of collections and their settings\n\n\nhttps://api.scorocode.ru/api/v1/app/collections\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n         : \n, // application identifier, mandatory\n    \ncli\n         : \n, // client key, mandatory\n    \nacc\n         : \n  // access key, mandatory, masterKey only\n}\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n  \ncollections\n: {\n    \ndevices\n: {\n      \nid\n: \n584e64f8982fd55332741515\n,\n      \nname\n: \ndevices\n,\n      \nuseDocsACL\n: false,\n      \nACL\n: {\n        \ncreate\n: [\n          \n*\n\n        ],\n        \nread\n: [\n          \n*\n\n        ],\n        \nremove\n: [\n          \n*\n\n        ],\n        \nupdate\n: [\n          \n*\n\n        ]\n      },\n      \ntriggers\n: {\n        \nafterFind\n: {\n          \ncode\n: \n,\n          \nisActive\n: false\n        },\n        \nafterInsert\n: {\n          \ncode\n: \n,\n          \nisActive\n: false\n        },\n        \nafterRemove\n: {\n          \ncode\n: \n,\n          \nisActive\n: false\n        },\n        \nafterUpdate\n: {\n          \ncode\n: \n,\n          \nisActive\n: false\n        },\n        \nbeforeInsert\n: {\n          \ncode\n: \n,\n          \nisActive\n: false\n        },\n        \nbeforeRemove\n: {\n          \ncode\n: \n,\n          \nisActive\n: false\n        },\n        \nbeforeUpdate\n: {\n          \ncode\n: \n,\n          \nisActive\n: false\n        }\n      },\n      \nfields\n: [\n        {\n          \nname\n: \nreadACL\n,\n          \ntype\n: \nACL\n,\n          \ntarget\n: \n,\n          \nsystem\n: true,\n          \nreadonly\n: false,\n          \nrequired\n: false\n        },\n        {\n          \nname\n: \nupdateACL\n,\n          \ntype\n: \nACL\n,\n          \ntarget\n: \n,\n          \nsystem\n: true,\n          \nreadonly\n: false,\n          \nrequired\n: false\n        },\n        {\n          \nname\n: \nremoveACL\n,\n          \ntype\n: \nACL\n,\n          \ntarget\n: \n,\n          \nsystem\n: true,\n          \nreadonly\n: false,\n          \nrequired\n: false\n        },\n        {\n          \nname\n: \ncreatedAt\n,\n          \ntype\n: \nDate\n,\n          \ntarget\n: \n,\n          \nsystem\n: true,\n          \nreadonly\n: true,\n          \nrequired\n: false\n        },\n        {\n          \nname\n: \nupdatedAt\n,\n          \ntype\n: \nDate\n,\n          \ntarget\n: \n,\n          \nsystem\n: true,\n          \nreadonly\n: true,\n          \nrequired\n: false\n        },\n        {\n          \nname\n: \nuserId\n,\n          \ntype\n: \nString\n,\n          \ntarget\n: \n,\n          \nsystem\n: true,\n          \nreadonly\n: false,\n          \nrequired\n: false\n        },\n        {\n          \nname\n: \ndeviceId\n,\n          \ntype\n: \nString\n,\n          \ntarget\n: \n,\n          \nsystem\n: true,\n          \nreadonly\n: true,\n          \nrequired\n: true\n        },\n        {\n          \nname\n: \ndeviceType\n,\n          \ntype\n: \nString\n,\n          \ntarget\n: \n,\n          \nsystem\n: true,\n          \nreadonly\n: true,\n          \nrequired\n: true\n        }\n      ],\n      \nsystem\n: true,\n      \nindexes\n: []\n    },\n    \nroles\n: {\n      \nid\n: \n584e64f8982fd55332741513\n,\n      \nname\n: \nroles\n,\n      \nuseDocsACL\n: false,\n      \nACL\n: {\n        \ncreate\n: [\n          \n*\n\n        ],\n        \nread\n: [\n          \n*\n\n        ],\n        \nremove\n: [\n          \n*\n\n        ],\n        \nupdate\n: [\n          \n*\n\n        ]\n      },\n      \ntriggers\n: {\n        \nafterFind\n: {\n          \ncode\n: \n,\n          \nisActive\n: false\n        },\n        \nafterInsert\n: {\n          \ncode\n: \n,\n          \nisActive\n: false\n        },\n        \nafterRemove\n: {\n          \ncode\n: \n,\n          \nisActive\n: false\n        },\n        \nafterUpdate\n: {\n          \ncode\n: \n,\n          \nisActive\n: false\n        },\n        \nbeforeInsert\n: {\n          \ncode\n: \n,\n          \nisActive\n: false\n        },\n        \nbeforeRemove\n: {\n          \ncode\n: \n,\n          \nisActive\n: false\n        },\n        \nbeforeUpdate\n: {\n          \ncode\n: \n,\n          \nisActive\n: false\n        }\n      },\n      \nfields\n: [\n        {\n          \nname\n: \nname\n,\n          \ntype\n: \nString\n,\n          \ntarget\n: \n,\n          \nsystem\n: true,\n          \nreadonly\n: false,\n          \nrequired\n: true\n        },\n        {\n          \nname\n: \nreadACL\n,\n          \ntype\n: \nACL\n,\n          \ntarget\n: \n,\n          \nsystem\n: true,\n          \nreadonly\n: false,\n          \nrequired\n: false\n        },\n        {\n          \nname\n: \nupdateACL\n,\n          \ntype\n: \nACL\n,\n          \ntarget\n: \n,\n          \nsystem\n: true,\n          \nreadonly\n: false,\n          \nrequired\n: false\n        },\n        {\n          \nname\n: \nremoveACL\n,\n          \ntype\n: \nACL\n,\n          \ntarget\n: \n,\n          \nsystem\n: true,\n          \nreadonly\n: false,\n          \nrequired\n: false\n        },\n        {\n          \nname\n: \ncreatedAt\n,\n          \ntype\n: \nDate\n,\n          \ntarget\n: \n,\n          \nsystem\n: true,\n          \nreadonly\n: true,\n          \nrequired\n: false\n        },\n        {\n          \nname\n: \nupdatedAt\n,\n          \ntype\n: \nDate\n,\n          \ntarget\n: \n,\n          \nsystem\n: true,\n          \nreadonly\n: true,\n          \nrequired\n: false\n        }\n      ],\n      \nsystem\n: true,\n      \nindexes\n: []\n    },\n    \nusers\n: {\n      \nid\n: \n584e64f8982fd55332741514\n,\n      \nname\n: \nusers\n,\n      \nuseDocsACL\n: false,\n      \nACL\n: {\n        \ncreate\n: [\n          \n*\n\n        ],\n        \nread\n: [\n          \n*\n\n        ],\n        \nremove\n: [\n          \n*\n\n        ],\n        \nupdate\n: [\n          \n*\n\n        ]\n      },\n      \ntriggers\n: {\n        \nafterFind\n: {\n          \ncode\n: \n,\n          \nisActive\n: false\n        },\n        \nafterInsert\n: {\n          \ncode\n: \n,\n          \nisActive\n: false\n        },\n        \nafterRemove\n: {\n          \ncode\n: \n,\n          \nisActive\n: false\n        },\n        \nafterUpdate\n: {\n          \ncode\n: \n,\n          \nisActive\n: false\n        },\n        \nbeforeInsert\n: {\n          \ncode\n: \n,\n          \nisActive\n: false\n        },\n        \nbeforeRemove\n: {\n          \ncode\n: \n,\n          \nisActive\n: false\n        },\n        \nbeforeUpdate\n: {\n          \ncode\n: \n,\n          \nisActive\n: false\n        }\n      },\n      \nfields\n: [\n        {\n          \nname\n: \nemail\n,\n          \ntype\n: \nString\n,\n          \ntarget\n: \n,\n          \nsystem\n: true,\n          \nreadonly\n: true,\n          \nrequired\n: true\n        },\n        {\n          \nname\n: \nphone\n,\n          \ntype\n: \nString\n,\n          \ntarget\n: \n,\n          \nsystem\n: true,\n          \nreadonly\n: false,\n          \nrequired\n: false\n        },\n        {\n          \nname\n: \nreadACL\n,\n          \ntype\n: \nACL\n,\n          \ntarget\n: \n,\n          \nsystem\n: true,\n          \nreadonly\n: false,\n          \nrequired\n: false\n        },\n        {\n          \nname\n: \nupdateACL\n,\n          \ntype\n: \nACL\n,\n          \ntarget\n: \n,\n          \nsystem\n: true,\n          \nreadonly\n: false,\n          \nrequired\n: false\n        },\n        {\n          \nname\n: \nremoveACL\n,\n          \ntype\n: \nACL\n,\n          \ntarget\n: \n,\n          \nsystem\n: true,\n          \nreadonly\n: false,\n          \nrequired\n: false\n        },\n        {\n          \nname\n: \ncreatedAt\n,\n          \ntype\n: \nDate\n,\n          \ntarget\n: \n,\n          \nsystem\n: true,\n          \nreadonly\n: true,\n          \nrequired\n: false\n        },\n        {\n          \nname\n: \nupdatedAt\n,\n          \ntype\n: \nDate\n,\n          \ntarget\n: \n,\n          \nsystem\n: true,\n          \nreadonly\n: true,\n          \nrequired\n: false\n        },\n        {\n          \nname\n: \nusername\n,\n          \ntype\n: \nString\n,\n          \ntarget\n: \n,\n          \nsystem\n: true,\n          \nreadonly\n: false,\n          \nrequired\n: true\n        },\n        {\n          \nname\n: \npassword\n,\n          \ntype\n: \nPassword\n,\n          \ntarget\n: \n,\n          \nsystem\n: true,\n          \nreadonly\n: false,\n          \nrequired\n: true\n        },\n        {\n          \nname\n: \nemailVerified\n,\n          \ntype\n: \nBoolean\n,\n          \ntarget\n: \n,\n          \nsystem\n: true,\n          \nreadonly\n: true,\n          \nrequired\n: false\n        },\n        {\n          \nname\n: \nroles\n,\n          \ntype\n: \nArray\n,\n          \ntarget\n: \n,\n          \nsystem\n: true,\n          \nreadonly\n: false,\n          \nrequired\n: false\n        },\n        {\n          \nname\n: \ntoken\n,\n          \ntype\n: \nString\n,\n          \ntarget\n: \n,\n          \nsystem\n: true,\n          \nreadonly\n: true,\n          \nrequired\n: false\n        }\n      ],\n      \nsystem\n: true,\n      \nindexes\n: []\n    }\n  },\n  \nerror\n: false\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n        \nacc\n: \nffe86fefg25fbklacsdee8cd4c59644a\n,\n        \napp\n: \n48f172923acd719b42c73ac3a492cfc8\n,\n        \ncli\n: \nd6859f41223c9997ff78c6b4vb3a96bb\n\n}\n \nhttps://api.scorocode.ru/api/v1/app/collections\n\n\n\n\n\n\n\n\nRetrieve collection info.\n\n\nhttps://api.scorocode.ru/api/v1/app/collections/get\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n         : \n, // application identifier, mandatory\n    \ncli\n         : \n, // client key, mandatory\n    \nacc\n         : \n, // access key, mandatory, masterKey only\n    \ncoll\n        : \n  // collection name, mandatory\n}\n\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n  \ncollection\n: {\n    \nid\n: \n584e64f8982fd55332741515\n,\n    \nname\n: \ndevices\n,\n    \nuseDocsACL\n: false,\n    \nACL\n: {\n      \ncreate\n: [\n        \n*\n\n      ],\n      \nread\n: [\n        \n*\n\n      ],\n      \nremove\n: [\n        \n*\n\n      ],\n      \nupdate\n: [\n        \n*\n\n      ]\n    },\n    \ntriggers\n: {\n      \nafterFind\n: {\n        \ncode\n: \n,\n        \nisActive\n: false\n      },\n      \nafterInsert\n: {\n        \ncode\n: \n,\n        \nisActive\n: false\n      },\n      \nafterRemove\n: {\n        \ncode\n: \n,\n        \nisActive\n: false\n      },\n      \nafterUpdate\n: {\n        \ncode\n: \n,\n        \nisActive\n: false\n      },\n      \nbeforeInsert\n: {\n        \ncode\n: \n,\n        \nisActive\n: false\n      },\n      \nbeforeRemove\n: {\n        \ncode\n: \n,\n        \nisActive\n: false\n      },\n      \nbeforeUpdate\n: {\n        \ncode\n: \n,\n        \nisActive\n: false\n      }\n    },\n    \nfields\n: [\n      {\n        \nname\n: \nreadACL\n,\n        \ntype\n: \nACL\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: false,\n        \nrequired\n: false\n      },\n      {\n        \nname\n: \nupdateACL\n,\n        \ntype\n: \nACL\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: false,\n        \nrequired\n: false\n      },\n      {\n        \nname\n: \nremoveACL\n,\n        \ntype\n: \nACL\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: false,\n        \nrequired\n: false\n      },\n      {\n        \nname\n: \ncreatedAt\n,\n        \ntype\n: \nDate\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: true,\n        \nrequired\n: false\n      },\n      {\n        \nname\n: \nupdatedAt\n,\n        \ntype\n: \nDate\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: true,\n        \nrequired\n: false\n      },\n      {\n        \nname\n: \nuserId\n,\n        \ntype\n: \nString\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: false,\n        \nrequired\n: false\n      },\n      {\n        \nname\n: \ndeviceId\n,\n        \ntype\n: \nString\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: true,\n        \nrequired\n: true\n      },\n      {\n        \nname\n: \ndeviceType\n,\n        \ntype\n: \nString\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: true,\n        \nrequired\n: true\n      }\n    ],\n    \nsystem\n: true,\n    \nindexes\n: []\n  },\n  \nerror\n: false\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n        \nacc\n: \nffe86fefg25fbklacsdee8cd4c59644a\n,\n        \napp\n: \n48f172923acd719b42c73ac3a492cfc8\n,\n        \ncli\n: \nd6859f41223c9997ff78c6b4vb3a96bb\n,\n        \ncoll\n: \ndevices\n\n}\n \nhttps://api.scorocode.ru/api/v1/app/collections/get\n\n\n\n\n\n\n\n\nCreate new collection\n\n\nhttps://api.scorocode.ru/api/v1/app/collections/create\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n: \n,               // application identifier, mandatory\n    \ncli\n: \n,               // client key, mandatory\n    \nacc\n: \n,               // access key, mandatory, masterKey only\n    \ncollection\n: {          \n        \nname\n: \n,          // collection name, mandatory  \n        \nuseDocsACL\n: bool,  // \nuse documents ACL\n flag, optional\n        \nACL\n: {}            // ACL settings, optional\n    }\n}\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n  \ncollection\n: {\n    \nid\n: \n584e849e7e0b4e222480a282\n,\n    \nname\n: \napicoll\n,\n    \nuseDocsACL\n: false,\n    \nACL\n: {\n        \ncreate\n: [\n            \nR5VGMes94p\n\n        ],\n        \nread\n: [\n            \n*\n,\n            \nR5VGMes94p\n\n        ],\n        \nremove\n: [\n            \nR5VGMes94p\n\n        ],\n        \nupdate\n: [\n            \nR5VGMes94p\n\n        ]\n    },\n    \ntriggers\n: {\n      \nafterInsert\n: {\n        \ncode\n: \n,\n        \nisActive\n: false\n      },\n      \nafterRemove\n: {\n        \ncode\n: \n,\n        \nisActive\n: false\n      },\n      \nafterUpdate\n: {\n        \ncode\n: \n,\n        \nisActive\n: false\n      },\n      \nbeforeInsert\n: {\n        \ncode\n: \n,\n        \nisActive\n: false\n      },\n      \nbeforeRemove\n: {\n        \ncode\n: \n,\n        \nisActive\n: false\n      },\n      \nbeforeUpdate\n: {\n        \ncode\n: \n,\n        \nisActive\n: false\n      }\n    },\n    \nfields\n: [\n      {\n        \nname\n: \nreadACL\n,\n        \ntype\n: \nACL\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: false,\n        \nrequired\n: false\n      },\n      {\n        \nname\n: \nupdateACL\n,\n        \ntype\n: \nACL\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: false,\n        \nrequired\n: false\n      },\n      {\n        \nname\n: \nremoveACL\n,\n        \ntype\n: \nACL\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: false,\n        \nrequired\n: false\n      },\n      {\n        \nname\n: \ncreatedAt\n,\n        \ntype\n: \nDate\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: true,\n        \nrequired\n: false\n      },\n      {\n        \nname\n: \nupdatedAt\n,\n        \ntype\n: \nDate\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: true,\n        \nrequired\n: false\n      }\n    ],\n    \nsystem\n: false,\n    \nindexes\n: []\n  },\n  \nerror\n: false\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n        \nacc\n: \nffe86fefg25fbklacsdee8cd4c59644a\n,\n        \napp\n: \n48f172923acd719b42c73ac3a492cfc8\n,\n        \ncli\n: \nd6859f41223c9997ff78c6b4vb3a96bb\n,\n        \ncollection\n: {\n            \nname\n: \napicoll\n,\n            \nuseDocsACL\n: false,\n            \nACL\n: {\n                \ncreate\n: [\n                    \nR5VGMes94p\n\n                ],\n                \nread\n: [\n                    \n*\n,\n                    \nR5VGMes94p\n\n                ],\n                \nremove\n: [\n                    \nR5VGMes94p\n\n                ],\n                \nupdate\n: [\n                    \nR5VGMes94p\n\n                ]\n            }\n        }\n}\n \nhttps://api.scorocode.ru/api/v1/app/collections/create\n\n\n\n\n\n\n\n\nUpdate collection settings\n\n\nhttps://api.scorocode.ru/api/v1/app/collections/update\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n: \n,               // application identifier, mandatory\n    \ncli\n: \n,               // client key, mandatory\n    \nacc\n: \n,               // access key, mandatory, masterKey only\n    \ncollection\n: {\n        \nid\n: \n,            // collection identifier, mandatory           \n        \nname\n: \n,          // collection name, optional  \n        \nuseDocsACL\n: bool,  // \nuse documents ACL\n flag, optional\n        \nACL\n: {}            // ACL settings, optional\n    }\n}\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n  \ncollection\n: {\n    \nid\n: \n584e849e7e0b4e222480a282\n,\n    \nname\n: \napicoll\n,\n    \nuseDocsACL\n: true,\n    \nACL\n: {\n        \ncreate\n: [\n            \nR5VGMes94p\n\n        ],\n        \nread\n: [\n            \n*\n,\n            \nR5VGMes94p\n\n        ],\n        \nremove\n: [\n            \nR5VGMes94p\n\n        ],\n        \nupdate\n: [\n            \nR5VGMes94p\n\n        ]\n    },\n    \ntriggers\n: {\n      \nafterInsert\n: {\n        \ncode\n: \n,\n        \nisActive\n: false\n      },\n      \nafterRemove\n: {\n        \ncode\n: \n,\n        \nisActive\n: false\n      },\n      \nafterUpdate\n: {\n        \ncode\n: \n,\n        \nisActive\n: false\n      },\n      \nbeforeInsert\n: {\n        \ncode\n: \n,\n        \nisActive\n: false\n      },\n      \nbeforeRemove\n: {\n        \ncode\n: \n,\n        \nisActive\n: false\n      },\n      \nbeforeUpdate\n: {\n        \ncode\n: \n,\n        \nisActive\n: false\n      }\n    },\n    \nfields\n: [\n      {\n        \nname\n: \nreadACL\n,\n        \ntype\n: \nACL\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: false,\n        \nrequired\n: false\n      },\n      {\n        \nname\n: \nupdateACL\n,\n        \ntype\n: \nACL\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: false,\n        \nrequired\n: false\n      },\n      {\n        \nname\n: \nremoveACL\n,\n        \ntype\n: \nACL\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: false,\n        \nrequired\n: false\n      },\n      {\n        \nname\n: \ncreatedAt\n,\n        \ntype\n: \nDate\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: true,\n        \nrequired\n: false\n      },\n      {\n        \nname\n: \nupdatedAt\n,\n        \ntype\n: \nDate\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: true,\n        \nrequired\n: false\n      }\n    ],\n    \nsystem\n: false,\n    \nindexes\n: []\n  },\n  \nerror\n: false\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n        \nacc\n: \nffe86fefg25fbklacsdee8cd4c59644a\n,\n        \napp\n: \n48f172923acd719b42c73ac3a492cfc8\n,\n        \ncli\n: \nd6859f41223c9997ff78c6b4vb3a96bb\n,\n        \ncollection\n: {\n            \nid\n: \n584e849e7e0b4e222480a282\n,\n            \nuseDocsACL\n: true\n}\n \nhttps://api.scorocode.ru/api/v1/app/collections/create\n\n\n\n\n\n\n\n\nDelete collection\n\n\nhttps://api.scorocode.ru/api/v1/app/collections/delete\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n: \n,               // application identifier, mandatory\n    \ncli\n: \n,               // client key, mandatory\n    \nacc\n: \n,               // access key, mandatory, masterKey only\n    \ncollection\n: {\n        \nid\n: \n             // collection identifier, mandatory           \n    }\n}\n\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n  \nerror\n: false\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n        \nacc\n: \nffe86fefg25fbklacsdee8cd4c59644a\n,\n        \napp\n: \n48f172923acd719b42c73ac3a492cfc8\n,\n        \ncli\n: \nd6859f41223c9997ff78c6b4vb3a96bb\n,\n        \ncollection\n: {\n            \nid\n: \n584e849e7e0b4e222480a282\n,\n}\n \nhttps://api.scorocode.ru/api/v1/app/collections/delete\n\n\n\n\n\n\n\n\nClone collection\n\n\nhttps://api.scorocode.ru/api/v1/app/collections/clone\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n: \n,               // application identifier, mandatory\n    \ncli\n: \n,               // client key, mandatory\n    \nacc\n: \n,               // access key, mandatory, masterKey only\n    \ncollection\n: {\n        \nid\n: \n             // collection identifier, mandatory           \n        \nname\n: \n           // new collection name, mandatory\n    }\n}\n\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n  \ncollection\n: {\n    \nid\n: \n584e91e70c62722cf9fe2191\n,\n    \nname\n: \nclonedcoll\n,\n    \nuseDocsACL\n: false,\n    \nACL\n: {},\n    \ntriggers\n: {\n      \nafterInsert\n: {\n        \ncode\n: \n,\n        \nisActive\n: false\n      },\n      \nafterRemove\n: {\n        \ncode\n: \n,\n        \nisActive\n: false\n      },\n      \nafterUpdate\n: {\n        \ncode\n: \n,\n        \nisActive\n: false\n      },\n      \nbeforeInsert\n: {\n        \ncode\n: \n,\n        \nisActive\n: false\n      },\n      \nbeforeRemove\n: {\n        \ncode\n: \n,\n        \nisActive\n: false\n      },\n      \nbeforeUpdate\n: {\n        \ncode\n: \n,\n        \nisActive\n: false\n      }\n    },\n    \nfields\n: [\n      {\n        \nname\n: \nreadACL\n,\n        \ntype\n: \nACL\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: false,\n        \nrequired\n: false\n      },\n      {\n        \nname\n: \nupdateACL\n,\n        \ntype\n: \nACL\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: false,\n        \nrequired\n: false\n      },\n      {\n        \nname\n: \nremoveACL\n,\n        \ntype\n: \nACL\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: false,\n        \nrequired\n: false\n      },\n      {\n        \nname\n: \ncreatedAt\n,\n        \ntype\n: \nDate\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: true,\n        \nrequired\n: false\n      },\n      {\n        \nname\n: \nupdatedAt\n,\n        \ntype\n: \nDate\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: true,\n        \nrequired\n: false\n      }\n    ],\n    \nsystem\n: false,\n    \nindexes\n: []\n  },\n  \nerror\n: false\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n        \nacc\n: \nffe86fefg25fbklacsdee8cd4c59644a\n,\n        \napp\n: \n48f172923acd719b42c73ac3a492cfc8\n,\n        \ncli\n: \nd6859f41223c9997ff78c6b4vb3a96bb\n,\n        \ncollection\n: {\n            \nid\n: \n584e91b77e0b4e222480a316\n,\n            \nname\n: \nclonedcoll\n           \n        }\n}\n \nhttps://api.scorocode.ru/api/v1/app/collections/clone\n\n\n\n\n\n\n\n\nCreate new collection's index\n\n\nhttps://api.scorocode.ru/api/v1/app/collections/index/create\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n: \n,               // application identifier, mandatory\n    \ncli\n: \n,               // client key, mandatory\n    \nacc\n: \n,               // access key, mandatory, masterKey only\n    \ncoll\n: \n,              // collection name, mandatory\n    \nindex\n: {\n        \nname\n: \n,                    // index name, mandatory\n        \nfields\n: [\n            {\n                \nname\n: \n,            // field name, mandatory\n                \norder\n: 1 || -1       // sorting order, mandatory\n            }\n        ]\n    }\n}\n\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n  \nerror\n: false\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n        \nacc\n: \nffe86fefg25fbklacsdee8cd4c59644a\n,\n        \napp\n: \n48f172923acd719b42c73ac3a492cfc8\n,\n        \ncli\n: \nd6859f41223c9997ff78c6b4vb3a96bb\n,\n        \ncoll\n: \nusers\n,\n        \nindex\n: {\n            \nname\n: \nemailIndex\n,                    \n            \nfields\n: [\n                {\n                    \nname\n: \nemail\n,            \n                    \norder\n: 1       \n                }\n            ]\n        }\n}\n \nhttps://api.scorocode.ru/api/v1/app/collections/index/create\n\n\n\n\n\n\n\n\nDelete collection's index\n\n\nhttps://api.scorocode.ru/api/v1/app/collections/index/delete\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n: \n,               // application identifier, mandatory\n    \ncli\n: \n,               // client key, mandatory\n    \nacc\n: \n,               // access key, mandatory, masterKey only\n    \ncoll\n: \n,              // collection name, mandatory\n    \nindex\n: {\n        \nname\n: \n           // index name, mandatory\n    }\n}\n\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n  \nerror\n: false\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n        \nacc\n: \nffe86fefg25fbklacsdee8cd4c59644a\n,\n        \napp\n: \n48f172923acd719b42c73ac3a492cfc8\n,\n        \ncli\n: \nd6859f41223c9997ff78c6b4vb3a96bb\n,\n        \ncoll\n: \nusers\n,\n        \nindex\n: {\n            \nname\n: \nemailIndex\n                    \n        }\n}\n \nhttps://api.scorocode.ru/api/v1/app/collections/index/delete\n\n\n\n\n\n\n\n\nCreate new collection's field\n\n\nhttps://api.scorocode.ru/api/v1/app/collections/fields/create\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n: \n,               // application identifier, mandatory\n    \ncli\n: \n,               // client key, mandatory\n    \nacc\n: \n,               // access key, mandatory, masterKey only\n    \ncoll\n: \n,              // collection name, mandatory\n    \ncollField\n: {     \n        \nname\n: \n,          // field name, mandatory\n        \ntype\n: \n,          // field data type, mandatory\n        \ntarget\n: \n         // target collection name, mandatory for Pointer || Relation data type fields\n    }\n}\n\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n  \nerror\n: false,\n  \nfield\n: {\n    \nname\n: \npointer\n,\n    \ntype\n: \nPointer\n,\n    \ntarget\n: \ndevices\n,\n    \nsystem\n: false,\n    \nreadonly\n: false,\n    \nrequired\n: false\n  }\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n    \nacc\n: \nffe86fefg25fbklacsdee8cd4c59644a\n,\n    \napp\n: \n48f172923acd719b42c73ac3a492cfc8\n,\n    \ncli\n: \nd6859f41223c9997ff78c6b4vb3a96bb\n,\n    \ncoll\n: \nusers\n,                       \n    \ncollField\n: {\n        \nname\n: \npointer\n,         \n        \ntype\n: \nPointer\n,         \n        \ntarget\n: \ndevices\n          \n    }\n}\n \nhttps://api.scorocode.ru/api/v1/app/collections/fields/create\n\n\n\n\n\n\n\n\nDelete collection's field\n\n\nhttps://api.scorocode.ru/api/v1/app/collections/fields/delete\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n: \n,               // application identifier, mandatory\n    \ncli\n: \n,               // client key, mandatory\n    \nacc\n: \n,               // access key, mandatory, masterKey only\n    \ncoll\n: \n,              // collection name, mandatory\n    \ncollField\n: {   \n        \nname\n: \n           // field name, mandatory\n    }\n}\n\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n  \ncollection\n: {\n    \nid\n: \n584e64f8982fd55332741514\n,\n    \nname\n: \nusers\n,\n    \nuseDocsACL\n: false,\n    \nACL\n: {\n      \ncreate\n: [\n        \n*\n\n      ],\n      \nread\n: [\n        \n*\n\n      ],\n      \nremove\n: [\n        \n*\n\n      ],\n      \nupdate\n: [\n        \n*\n\n      ]\n    },\n    \ntriggers\n: {\n      \nafterFind\n: {\n        \ncode\n: \n,\n        \nisActive\n: false\n      },\n      \nafterInsert\n: {\n        \ncode\n: \n,\n        \nisActive\n: false\n      },\n      \nafterRemove\n: {\n        \ncode\n: \n,\n        \nisActive\n: false\n      },\n      \nafterUpdate\n: {\n        \ncode\n: \n,\n        \nisActive\n: false\n      },\n      \nbeforeInsert\n: {\n        \ncode\n: \n,\n        \nisActive\n: false\n      },\n      \nbeforeRemove\n: {\n        \ncode\n: \n,\n        \nisActive\n: false\n      },\n      \nbeforeUpdate\n: {\n        \ncode\n: \n,\n        \nisActive\n: false\n      }\n    },\n    \nfields\n: [\n      {\n        \nname\n: \nemail\n,\n        \ntype\n: \nString\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: true,\n        \nrequired\n: true\n      },\n      {\n        \nname\n: \nphone\n,\n        \ntype\n: \nString\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: false,\n        \nrequired\n: false\n      },\n      {\n        \nname\n: \nreadACL\n,\n        \ntype\n: \nACL\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: false,\n        \nrequired\n: false\n      },\n      {\n        \nname\n: \nupdateACL\n,\n        \ntype\n: \nACL\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: false,\n        \nrequired\n: false\n      },\n      {\n        \nname\n: \nremoveACL\n,\n        \ntype\n: \nACL\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: false,\n        \nrequired\n: false\n      },\n      {\n        \nname\n: \ncreatedAt\n,\n        \ntype\n: \nDate\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: true,\n        \nrequired\n: false\n      },\n      {\n        \nname\n: \nupdatedAt\n,\n        \ntype\n: \nDate\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: true,\n        \nrequired\n: false\n      },\n      {\n        \nname\n: \nusername\n,\n        \ntype\n: \nString\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: false,\n        \nrequired\n: true\n      },\n      {\n        \nname\n: \npassword\n,\n        \ntype\n: \nPassword\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: false,\n        \nrequired\n: true\n      },\n      {\n        \nname\n: \nemailVerified\n,\n        \ntype\n: \nBoolean\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: true,\n        \nrequired\n: false\n      },\n      {\n        \nname\n: \nroles\n,\n        \ntype\n: \nArray\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: false,\n        \nrequired\n: false\n      },\n      {\n        \nname\n: \ntoken\n,\n        \ntype\n: \nString\n,\n        \ntarget\n: \n,\n        \nsystem\n: true,\n        \nreadonly\n: true,\n        \nrequired\n: false\n      }\n    ],\n    \nsystem\n: true,\n    \nindexes\n: []\n  },\n  \nerror\n: false\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n    \nacc\n: \nffe86fefg25fbklacsdee8cd4c59644a\n,\n    \napp\n: \n48f172923acd719b42c73ac3a492cfc8\n,\n    \ncli\n: \nd6859f41223c9997ff78c6b4vb3a96bb\n,\n    \ncoll\n: \nusers\n,                       \n    \ncollField\n: {\n        \nname\n: \npointer\n\n    }\n}\n \nhttps://api.scorocode.ru/api/v1/app/collections/fields/delete\n\n\n\n\n\n\n\n\nUpdate collection's triggers\n\n\nhttps://api.scorocode.ru/api/v1/app/collections/triggers\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n: \n,               // application identifier, mandatory\n    \ncli\n: \n,               // client key, mandatory\n    \nacc\n: \n,               // access key, mandatory, masterKey only\n    \ncoll\n: \n,              // collection name, mandatory\n    \ntriggers\n: {\n        \nbeforeInsert\n: {      \n            \ncode\n: \n,       // trigger code, optional\n            \nisActive\n: bool  // trigger activation flag, optional\n        },\n        \nafterInsert\n: {\n            \ncode\n: \n,       // trigger code, optional\n            \nisActive\n: bool  // trigger activation flag, optional\n        },\n        \nbeforeUpdate\n: {\n            \ncode\n: \n,       // trigger code, optional\n            \nisActive\n: bool  // trigger activation flag, optional\n        },\n        \nafterUpdate\n: {\n            \ncode\n: \n,       // trigger code, optional\n            \nisActive\n: bool  // trigger activation flag, optional\n        },\n        \nbeforeRemove\n: {\n            \ncode\n: \n,       // trigger code, optional\n            \nisActive\n: bool  // trigger activation flag, optional\n        },\n        \nafterRemove\n: {\n            \ncode\n: \n,       // trigger code, optional\n            \nisActive\n: bool  // trigger activation flag, optional\n        }\n    }\n}\n\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n  \nerror\n: false,\n  \ntriggers\n: {\n    \nafterFind\n: {\n      \ncode\n: \n,\n      \nisActive\n: false\n    },\n    \nafterInsert\n: {\n      \ncode\n: \nDataManager.Insert({\\n  coll:\nlogs\n, \\n  doc: {\\n    \ndocId\n: pool.newDoc._id,\\n    \ncollection\n: \nusers\n,\\n    \noperation\n: \nregister\n,\\n    \ndata\n: pool.newDoc\\n    }\\n  });\n,\n      \nisActive\n: true\n    },\n    \nafterRemove\n: {\n      \ncode\n: \n,\n      \nisActive\n: false\n    },\n    \nafterUpdate\n: {\n      \ncode\n: \n,\n      \nisActive\n: false\n    },\n    \nbeforeInsert\n: {\n      \ncode\n: \n,\n      \nisActive\n: false\n    },\n    \nbeforeRemove\n: {\n      \ncode\n: \n,\n      \nisActive\n: false\n    },\n    \nbeforeUpdate\n: {\n      \ncode\n: \n,\n      \nisActive\n: false\n    }\n  }\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n    \nacc\n: \nffe86fefg25fbklacsdee8cd4c59644a\n,\n    \napp\n: \n48f172923acd719b42c73ac3a492cfc8\n,\n    \ncli\n: \nd6859f41223c9997ff78c6b4vb3a96bb\n,\n    \ncoll\n: \nusers\n,                       \n    \ntriggers\n: {\n         \nafterInsert\n: {\n            \ncode\n: \nDataManager.Insert({\\n  coll:\nlogs\n, \\n  doc: {\\n    \ndocId\n: pool.newDoc._id,\\n    \ncollection\n: \nusers\n,\\n    \noperation\n: \nregister\n,\\n    \ndata\n: pool.newDoc\\n    }\\n  });\n,       \n            \nisActive\n: true\n        }\n    }\n}\n\n \nhttps://api.scorocode.ru/api/v1/app/collections/triggers\n\n\n\n\n\n\n\n\nRetreive folders and scripts list\n\n\nhttps://api.scorocode.ru/api/v1/app/scripts/folders\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n: \n,               // application identifier, mandatory\n    \ncli\n: \n,               // client key, mandatory\n    \nacc\n: \n,               // access key, mandatory, masterKey only\n    \npath\n: \n               // full path to directory, mandatory\n}\n\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n  \nerror\n: false,\n  \nitems\n: [\n    {\n      \n_id\n: \n,\n      \nname\n: \nfolder1\n,\n      \npath\n: \n/folder1\n,\n      \nisScript\n: false\n    },\n    {\n      \n_id\n: \n,\n      \nname\n: \nfolder2\n,\n      \npath\n: \n/folder2\n,\n      \nisScript\n: false\n    },\n    {\n      \n_id\n: \n584eb26a42d52f1ba275fdb2\n,\n      \nname\n: \nsomescript.js\n,\n      \npath\n: \n/somescript.js\n,\n      \nisScript\n: true\n    }\n  ]\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n    \nacc\n: \nffe86fefg25fbklacsdee8cd4c59644a\n,\n    \napp\n: \n48f172923acd719b42c73ac3a492cfc8\n,\n    \ncli\n: \nd6859f41223c9997ff78c6b4vb3a96bb\n,\n    \npath\n: \n/\n\n}\n \nhttps://api.scorocode.ru/api/v1/app/scripts/folders\n\n\n\n\n\n\n\n\nCreate new folder\n\n\nhttps://api.scorocode.ru/api/v1/app/scripts/folders/create\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n: \n,               // application identifier, mandatory\n    \ncli\n: \n,               // client key, mandatory\n    \nacc\n: \n,               // access key, mandatory, masterKey only\n    \npath\n: \n               // full path to directory, mandatory\n}\n\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n  \nerror\n: false\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n    \nacc\n: \nffe86fefg25fbklacsdee8cd4c59644a\n,\n    \napp\n: \n48f172923acd719b42c73ac3a492cfc8\n,\n    \ncli\n: \nd6859f41223c9997ff78c6b4vb3a96bb\n,\n    \npath\n: \n/folder1/newfolder\n\n}\n \nhttps://api.scorocode.ru/api/v1/app/scripts/folders/create\n\n\n\n\n\n\n\n\nDelete folder\n\n\nhttps://api.scorocode.ru/api/v1/app/scripts/folders/delete\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n: \n,               // application identifier, mandatory\n    \ncli\n: \n,               // client key, mandatory\n    \nacc\n: \n,               // access key, mandatory, masterKey only\n    \npath\n: \n               // full path to directory, mandatory\n}\n\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n  \nerror\n: false\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n    \nacc\n: \nffe86fefg25fbklacsdee8cd4c59644a\n,\n    \napp\n: \n48f172923acd719b42c73ac3a492cfc8\n,\n    \ncli\n: \nd6859f41223c9997ff78c6b4vb3a96bb\n,\n    \npath\n: \n/folder1/newfolder\n\n}\n \nhttps://api.scorocode.ru/api/v1/app/scripts/folders/delete\n\n\n\n\n\n\n\n\nRetreive server-side script\n\n\nhttps://api.scorocode.ru/api/v1/app/scripts/get\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n: \n,               // application identifier, mandatory\n    \ncli\n: \n,               // client key, mandatory\n    \nacc\n: \n,               // access key, mandatory, masterKey only\n    \nscript\n: \n             // server-side script identifier, mandatory\n}\n\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n  \nerror\n: false,\n  \nscript\n: {\n    \n_id\n: \n584eb54142d52f1ba275fdb3\n,\n    \nappId\n: \n584e64f8982fd55332741516\n,\n    \nname\n: \nAYBABTU.js\n,\n    \npath\n: \n/AYBABTU.js\n,\n    \ndescription\n: \n,\n    \ncode\n: \nconsole.log(\\\nQWxsIHlvdXIgYmFzZSBhcmUgYmVsb25nIHRvIHVz\\\n);\n,\n    \njobStartAt\n: \n2016-12-12T17:33:00+03:00\n,\n    \nisActiveJob\n: false,\n    \njobType\n: \nonce\n,\n    \nrepeat\n: {\n      \ncustom\n: {\n        \ndays\n: 0,\n        \nhours\n: 0,\n        \nminutes\n: 0\n      },\n      \ndaily\n: {\n        \non\n: [],\n        \nhours\n: 0,\n        \nminutes\n: 0\n      },\n      \nmonthly\n: {\n        \non\n: [],\n        \ndays\n: [],\n        \nlastDate\n: false,\n        \nhours\n: 0,\n        \nminutes\n: 0\n      }\n    },\n    \nnextRun\n: \n2016-12-12T17:33:00+03:00\n,\n    \nACL\n: [\n      \n*\n\n    ]\n  }\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n    \nacc\n: \nffe86fefg25fbklacsdee8cd4c59644a\n,\n    \napp\n: \n48f172923acd719b42c73ac3a492cfc8\n,\n    \ncli\n: \nd6859f41223c9997ff78c6b4vb3a96bb\n,\n    \nscript\n: \n584eb54142d52f1ba275fdb3\n\n}\n \nhttps://api.scorocode.ru/api/v1/app/scripts/get\n\n\n\n\n\n\n\n\nCreate new server-side script\n\n\nhttps://api.scorocode.ru/api/v1/app/scripts/create\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n: \n,               // application identifier, mandatory\n    \ncli\n: \n,               // client key, mandatory\n    \nacc\n: \n,               // access key, mandatory, masterKey only\n    \ncloudCode\n: {\n        \npath\n: \n                // full path and script name, mandatory\n        \ndescription\n: \n,        // description, optional\n        \ncode\n: \n,               // server-side script code, optional\n        \njobStartAt\n: \ndatetime\n, // timer start datetime, optional\n        \nisActiveJob\n: bool,      // timer activation flag, optional\n        \njobType\n: \n,            // timer type, optional, custom || daily || monthly\n        \nrepeat\n: {               // timer repeat settings, optional\n            \ncustom\n: {\n                \ndays\n: int,\n                \nhours\n: int,\n                \nminutes\n: int\n            },\n            \ndaily\n: {\n                \non\n: [int],\n                \nhours\n: int,\n                \nminutes\n: int\n            }\n            \nmonthly\n: {\n                \non\n: [int],\n                \ndays\n: [int],\n                \nlastDate\n: bool,\n                \nhours\n: int,\n                \nminutes\n: int\n            }\n        }\n        \nACL\n: []                 // server-side script ACL settings, optional, array of user ids and/or \n*\n for anonymous access\n    }\n}\n\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n  \nerror\n: false,\n  \nscript\n: {\n    \n_id\n: \n584fad1422a5482feb5b31ab\n,\n    \nappId\n: \n584e64f8982fd55332741516\n,\n    \nname\n: \nAYBABTU.js\n,\n    \npath\n: \n/AYBABTU.js\n,\n    \ndescription\n: \nAll your base\n,\n    \ncode\n: \nconsole.log(\\\nQWxsIHlvdXIgYmFzZSBhcmUgYmVsb25nIHRvIHVz\\\n);\n,\n    \njobStartAt\n: \n2016-12-13T17:33:00+03:00\n,\n    \nisActiveJob\n: false,\n    \njobType\n: \ncustom\n,\n    \nrepeat\n: {\n      \ncustom\n: {\n        \ndays\n: 0,\n        \nhours\n: 0,\n        \nminutes\n: 5\n      },\n      \ndaily\n: null,\n      \nmonthly\n: null\n    },\n    \nnextRun\n: \n0001-01-01T00:00:00Z\n,\n    \nACL\n: [\n      \n*\n\n    ]\n  }\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n    \nacc\n: \nffe86fefg25fbklacsdee8cd4c59644a\n,\n    \napp\n: \n48f172923acd719b42c73ac3a492cfc8\n,\n    \ncli\n: \nd6859f41223c9997ff78c6b4vb3a96bb\n,\n    \ncloudCode\n: {\n        \npath\n: \n/AYBABTU.js\n,\n        \ndescription\n: \nAll your base\n,      \n        \ncode\n: \nconsole.log(\\\nQWxsIHlvdXIgYmFzZSBhcmUgYmVsb25nIHRvIHVz\\\n);\n,             \n        \njobStartAt\n: \n2016-12-13T17:33:00+03:00\n, \n        \nisActiveJob\n: false,    \n        \njobType\n: \ncustom\n,           \n        \nrepeat\n: {             \n            \ncustom\n: {\n                \ndays\n: 0,\n                \nhours\n: 0,\n                \nminutes\n: 5\n            }\n        },\n        \nACL\n: [\n*\n]\n    }\n}\n \nhttps://api.scorocode.ru/api/v1/app/scripts/create\n\n\n\n\n\n\n\n\nUpdate server-side script\n\n\nhttps://api.scorocode.ru/api/v1/app/scripts/update\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n\n    {\n    \napp\n: \n,               // application identifier, mandatory\n    \ncli\n: \n,               // client key, mandatory\n    \nacc\n: \n,               // access key, mandatory, masterKey only\n    \nscript\n: \n             // server-side script identifier, mandatory\n    \ncloudCode\n: {\n        \npath\n: \n                // full path and script name, mandatory\n        \ndescription\n: \n,        // description, optional\n        \ncode\n: \n,               // server-side script code, optional\n        \njobStartAt\n: \ndatetime\n, // timer start datetime, optional\n        \nisActiveJob\n: bool,      // timer activation flag, optional\n        \njobType\n: \n,            // timer type, optional, custom || daily || monthly\n        \nrepeat\n: {               // timer repeat settings, optional\n            \ncustom\n: {\n                \ndays\n: int,\n                \nhours\n: int,\n                \nminutes\n: int\n            },\n            \ndaily\n: {\n                \non\n: [int],\n                \nhours\n: int,\n                \nminutes\n: int\n            }\n            \nmonthly\n: {\n                \non\n: [int],\n                \ndays\n: [int],\n                \nlastDate\n: bool,\n                \nhours\n: int,\n                \nminutes\n: int\n            }\n        },\n        \nACL\n: []                 // server-side script ACL settings, optional, array of user ids and/or \n*\n for anonymous access\n    }\n}\n\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n  \nerror\n: false,\n  \nscript\n: {\n    \n_id\n: \n584fad1422a5482feb5b31ab\n,\n    \nappId\n: \n584e64f8982fd55332741516\n,\n    \nname\n: \nAYBABTU.js\n,\n    \npath\n: \n/AYBABTU.js\n,\n    \ndescription\n: \nAll your base\n,\n    \ncode\n: \nconsole.log(\\\nQWxsIHlvdXIgYmFzZSBhcmUgYmVsb25nIHRvIHVz\\\n);\n,\n    \njobStartAt\n: \n2016-12-13T17:33:00+03:00\n,\n    \nisActiveJob\n: true,\n    \njobType\n: \ncustom\n,\n    \nrepeat\n: {\n      \ncustom\n: {\n        \ndays\n: 0,\n        \nhours\n: 0,\n        \nminutes\n: 5\n      },\n      \ndaily\n: null,\n      \nmonthly\n: null\n    },\n    \nnextRun\n: \n0001-01-01T00:00:00Z\n,\n    \nACL\n: [\n      \n*\n\n    ]\n  }\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n    \nacc\n: \nffe86fefg25fbklacsdee8cd4c59644a\n,\n    \napp\n: \n48f172923acd719b42c73ac3a492cfc8\n,\n    \ncli\n: \nd6859f41223c9997ff78c6b4vb3a96bb\n,\n    \nscript\n: \n584fad1422a5482feb5b31ab\n,\n    \ncloudCode\n: {\n        \nisActiveJob\n: true    \n    }\n}\n \nhttps://api.scorocode.ru/api/v1/app/scripts/update\n\n\n\n\n\n\n\n\nDelete server-side script\n\n\nhttps://api.scorocode.ru/api/v1/app/scripts/delete\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n: \n,               // application identifier, mandatory\n    \ncli\n: \n,               // client key, mandatory\n    \nacc\n: \n,               // access key, mandatory, masterKey only\n    \nscript\n: \n             // server-side script identifier, mandatory\n}\n\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n  \nerror\n: false\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n    \nacc\n: \nffe86fefg25fbklacsdee8cd4c59644a\n,\n    \napp\n: \n48f172923acd719b42c73ac3a492cfc8\n,\n    \ncli\n: \nd6859f41223c9997ff78c6b4vb3a96bb\n,\n    \nscript\n: \n584fad1422a5482feb5b31ab\n\n}\n \nhttps://api.scorocode.ru/api/v1/app/scripts/delete\n\n\n\n\n\n\n\n\nRetreive bots list\n\n\nhttps://api.scorocode.ru/api/v1/bots\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n: \n,               // application identifier, mandatory\n    \ncli\n: \n,               // client key, mandatory\n    \nacc\n: \n                // access key, mandatory, masterKey only\n}\n\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n  \nerror\n: false,\n  \nitems\n: [\n    {\n      \n_id\n: \n584fb8710c62722cf9fe2617\n,\n      \nname\n: \nbotobot\n,\n      \nbotId\n: \n123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11\n,\n      \nappId\n: \n584e64f8982fd55332741516\n,\n      \nscriptId\n: \n584fb52f0c62722cf9fe2604\n,\n      \nisActive\n: false\n    }\n  ]\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n    \nacc\n: \nffe86fefg25fbklacsdee8cd4c59644a\n,\n    \napp\n: \n48f172923acd719b42c73ac3a492cfc8\n,\n    \ncli\n: \nd6859f41223c9997ff78c6b4vb3a96bb\n\n}\n \nhttps://api.scorocode.ru/api/v1/bots\n\n\n\n\n\n\n\n\nCreate new bot\n\n\nhttps://api.scorocode.ru/api/v1/bots/create\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n: \n,               // application identifier, mandatory\n    \ncli\n: \n,               // client key, mandatory\n    \nacc\n: \n,               // access key, mandatory, masterKey only\n    \nbot\n: {\n        \nname\n: \n,          // bot name, mandatory\n        \nbotId\n: \n,         // telegram token you received from @BotFather, mandatory \n        \nscriptId\n: \n,      // server-side script identifier, mandatory\n        \nisActive\n: bool     // bot activation flag, optional\n    }\n}\n\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n  \nbot\n: {\n    \n_id\n: \n584fb8710c62722cf9fe2617\n,\n    \nname\n: \nbotobot\n,\n    \nbotId\n: \n123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11\n,\n    \nappId\n: \n584e64f8982fd55332741516\n,\n    \nscriptId\n: \n584fb52f0c62722cf9fe2604\n,\n    \nisActive\n: false\n  },\n  \nerror\n: false\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n    \nacc\n: \nffe86fefg25fbklacsdee8cd4c59644a\n,\n    \napp\n: \n48f172923acd719b42c73ac3a492cfc8\n,\n    \ncli\n: \nd6859f41223c9997ff78c6b4vb3a96bb\n,\n    \nbot\n:{\n        \nname\n:\nbotobot\n,\n        \nisActive\n:false,\n        \nbotId\n:\n123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11\n,\n        \nscriptId\n:\n584fb52f0c62722cf9fe2604\n\n    }\n}\n \nhttps://api.scorocode.ru/api/v1/bots/create\n\n\n\n\n\n\n\n\nUpdate bot\n\n\nhttps://api.scorocode.ru/api/v1/bots/update\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n: \n,               // application identifier, mandatory\n    \ncli\n: \n,               // client key, mandatory\n    \nacc\n: \n,               // access key, mandatory, masterKey only\n    \nbot\n: {\n        \n_id\n: \n,           // bot identifier, mandatory\n        \nname\n: \n,          // bot name, optional\n        \nbotId\n: \n,         // telegram token you received from @BotFather, optional \n        \nscriptId\n: \n,      // server-side script identifier, optional\n        \nisActive\n: bool     // bot activation flag, optional\n    }\n}\n\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n  \nbot\n: {\n    \n_id\n: \n584fbd067e0b4e222480a7e4\n,\n    \nname\n: \nbotobot\n,\n    \nbotId\n: \n123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew12\n,\n    \nappId\n: \n584e64f8982fd55332741516\n,\n    \nscriptId\n: \n584fb52f0c62722cf9fe2604\n,\n    \nisActive\n: false\n  },\n  \nerror\n: false\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n    \nacc\n: \nffe86fefg25fbklacsdee8cd4c59644a\n,\n    \napp\n: \n48f172923acd719b42c73ac3a492cfc8\n,\n    \ncli\n: \nd6859f41223c9997ff78c6b4vb3a96bb\n,\n    \nbot\n: {\n        \n_id\n: \n584fbd067e0b4e222480a7e4\n,\n        \nname\n: \nbotobot\n,\n        \nbotId\n: \n123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew12\n,\n        \nappId\n: \n584e64f8982fd55332741516\n,\n        \nscriptId\n: \n584fb52f0c62722cf9fe2604\n,\n        \nisActive\n: false\n    }\n}\n \nhttps://api.scorocode.ru/api/v1/bots/update\n\n\n\n\n\n\n\n\nDelete bot\n\n\nhttps://api.scorocode.ru/api/v1/bots/delete\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n: \n,               // application identifier, mandatory\n    \ncli\n: \n,               // client key, mandatory\n    \nacc\n: \n,               // access key, mandatory, masterKey only\n    \nbot\n: {\n        \n_id\n: \n            // bot identifier, mandatory\n    }\n}\n\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n  \nerror\n: false\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n    \nacc\n: \nffe86fefg25fbklacsdee8cd4c59644a\n,\n    \napp\n: \n48f172923acd719b42c73ac3a492cfc8\n,\n    \ncli\n: \nd6859f41223c9997ff78c6b4vb3a96bb\n,\n    \nbot\n: {\n        \n_id\n: \n584fbd067e0b4e222480a7e4\n\n    }\n}\n \nhttps://api.scorocode.ru/api/v1/bots/delete", 
            "title": "Working with application"
        }, 
        {
            "location": "/httpapi/appapi/#get-application-info", 
            "text": "https://api.scorocode.ru/api/v1/app  Method:  POST  Headers:  Content-Type: application/json  {\n     app          :  , // application identifier, mandatory\n     cli          :  , // client key, mandatory\n     acc          :    // access key, mandatory, masterKey only\n}  Responses:  Success  {\n   app : {\n     _id :  584e64f8982fd55332741516 ,\n     appId :  48f172923acd719b42c73ac3a492cfc8 ,\n     name :  HTTPApp ,\n     description :  ,\n     userId :  5745b2123evlfh062612e3f ,\n     serverId :  5745a5e63ef62fs0626ftgeb ,\n     limits : {\n       rps : 20,\n       store : 10737418240,\n       pushValue : 0,\n       pushUsed : 0,\n       developers : 1,\n       ws : 200,\n       scriptTimeout : 3\n    },\n     schemas : {\n       devices : {\n         id :  584e64f8982fd55332741515 ,\n         name :  devices ,\n         useDocsACL : false,\n         ACL : {\n           create : [\n             * \n          ],\n           read : [\n             * \n          ],\n           remove : [\n             * \n          ],\n           update : [\n             * \n          ]\n        },\n         triggers : {\n           afterFind : {\n             code :  ,\n             isActive : false\n          },\n           afterInsert : {\n             code :  ,\n             isActive : false\n          },\n           afterRemove : {\n             code :  ,\n             isActive : false\n          },\n           afterUpdate : {\n             code :  ,\n             isActive : false\n          },\n           beforeInsert : {\n             code :  ,\n             isActive : false\n          },\n           beforeRemove : {\n             code :  ,\n             isActive : false\n          },\n           beforeUpdate : {\n             code :  ,\n             isActive : false\n          }\n        },\n         fields : [\n          {\n             name :  readACL ,\n             type :  ACL ,\n             target :  ,\n             system : true,\n             readonly : false,\n             required : false\n          },\n          {\n             name :  updateACL ,\n             type :  ACL ,\n             target :  ,\n             system : true,\n             readonly : false,\n             required : false\n          },\n          {\n             name :  removeACL ,\n             type :  ACL ,\n             target :  ,\n             system : true,\n             readonly : false,\n             required : false\n          },\n          {\n             name :  createdAt ,\n             type :  Date ,\n             target :  ,\n             system : true,\n             readonly : true,\n             required : false\n          },\n          {\n             name :  updatedAt ,\n             type :  Date ,\n             target :  ,\n             system : true,\n             readonly : true,\n             required : false\n          },\n          {\n             name :  userId ,\n             type :  String ,\n             target :  ,\n             system : true,\n             readonly : false,\n             required : false\n          },\n          {\n             name :  deviceId ,\n             type :  String ,\n             target :  ,\n             system : true,\n             readonly : true,\n             required : true\n          },\n          {\n             name :  deviceType ,\n             type :  String ,\n             target :  ,\n             system : true,\n             readonly : true,\n             required : true\n          }\n        ],\n         system : true,\n         indexes : []\n      },\n       roles : {\n         id :  584e64f8982fd55332741513 ,\n         name :  roles ,\n         useDocsACL : false,\n         ACL : {\n           create : [\n             * \n          ],\n           read : [\n             * \n          ],\n           remove : [\n             * \n          ],\n           update : [\n             * \n          ]\n        },\n         triggers : {\n           afterFind : {\n             code :  ,\n             isActive : false\n          },\n           afterInsert : {\n             code :  ,\n             isActive : false\n          },\n           afterRemove : {\n             code :  ,\n             isActive : false\n          },\n           afterUpdate : {\n             code :  ,\n             isActive : false\n          },\n           beforeInsert : {\n             code :  ,\n             isActive : false\n          },\n           beforeRemove : {\n             code :  ,\n             isActive : false\n          },\n           beforeUpdate : {\n             code :  ,\n             isActive : false\n          }\n        },\n         fields : [\n          {\n             name :  name ,\n             type :  String ,\n             target :  ,\n             system : true,\n             readonly : false,\n             required : true\n          },\n          {\n             name :  readACL ,\n             type :  ACL ,\n             target :  ,\n             system : true,\n             readonly : false,\n             required : false\n          },\n          {\n             name :  updateACL ,\n             type :  ACL ,\n             target :  ,\n             system : true,\n             readonly : false,\n             required : false\n          },\n          {\n             name :  removeACL ,\n             type :  ACL ,\n             target :  ,\n             system : true,\n             readonly : false,\n             required : false\n          },\n          {\n             name :  createdAt ,\n             type :  Date ,\n             target :  ,\n             system : true,\n             readonly : true,\n             required : false\n          },\n          {\n             name :  updatedAt ,\n             type :  Date ,\n             target :  ,\n             system : true,\n             readonly : true,\n             required : false\n          }\n        ],\n         system : true,\n         indexes : []\n      },\n       users : {\n         id :  584e64f8982fd55332741514 ,\n         name :  users ,\n         useDocsACL : false,\n         ACL : {\n           create : [\n             * \n          ],\n           read : [\n             * \n          ],\n           remove : [\n             * \n          ],\n           update : [\n             * \n          ]\n        },\n         triggers : {\n           afterFind : {\n             code :  ,\n             isActive : false\n          },\n           afterInsert : {\n             code :  ,\n             isActive : false\n          },\n           afterRemove : {\n             code :  ,\n             isActive : false\n          },\n           afterUpdate : {\n             code :  ,\n             isActive : false\n          },\n           beforeInsert : {\n             code :  ,\n             isActive : false\n          },\n           beforeRemove : {\n             code :  ,\n             isActive : false\n          },\n           beforeUpdate : {\n             code :  ,\n             isActive : false\n          }\n        },\n         fields : [\n          {\n             name :  email ,\n             type :  String ,\n             target :  ,\n             system : true,\n             readonly : true,\n             required : true\n          },\n          {\n             name :  phone ,\n             type :  String ,\n             target :  ,\n             system : true,\n             readonly : false,\n             required : false\n          },\n          {\n             name :  readACL ,\n             type :  ACL ,\n             target :  ,\n             system : true,\n             readonly : false,\n             required : false\n          },\n          {\n             name :  updateACL ,\n             type :  ACL ,\n             target :  ,\n             system : true,\n             readonly : false,\n             required : false\n          },\n          {\n             name :  removeACL ,\n             type :  ACL ,\n             target :  ,\n             system : true,\n             readonly : false,\n             required : false\n          },\n          {\n             name :  createdAt ,\n             type :  Date ,\n             target :  ,\n             system : true,\n             readonly : true,\n             required : false\n          },\n          {\n             name :  updatedAt ,\n             type :  Date ,\n             target :  ,\n             system : true,\n             readonly : true,\n             required : false\n          },\n          {\n             name :  username ,\n             type :  String ,\n             target :  ,\n             system : true,\n             readonly : false,\n             required : true\n          },\n          {\n             name :  password ,\n             type :  Password ,\n             target :  ,\n             system : true,\n             readonly : false,\n             required : true\n          },\n          {\n             name :  emailVerified ,\n             type :  Boolean ,\n             target :  ,\n             system : true,\n             readonly : true,\n             required : false\n          },\n          {\n             name :  roles ,\n             type :  Array ,\n             target :  ,\n             system : true,\n             readonly : false,\n             required : false\n          },\n          {\n             name :  token ,\n             type :  String ,\n             target :  ,\n             system : true,\n             readonly : true,\n             required : false\n          }\n        ],\n         system : true,\n         indexes : []\n      }\n    },\n     accessKeys : {\n       fileKey :  31adc32bac245299cfad0d7b1912bc2a ,\n       masterKey :  ffe86fefg25fbklacsdee8cd4c59644a ,\n       messageKey :  605a1248a2d27424ec43f6bdf435b0a7 ,\n       scriptKey :  333efb738b82c3096a3fgdbabd27f702 ,\n       websocketKey :  9627612736b1129d2ea9d615fb482a41 \n    },\n     clientKeys : {\n       android :  db993776551ed6267fbe256ef0296cb8 ,\n       ios :  840ff61458ec11bf411859dbbf46d46a ,\n       javascript :  d6859f41223c9997ff78c6b4vb3a96bb ,\n       winphone :  3fbce82fafba9dccc60036f92b971654 \n    },\n     readonly : true,\n     ACLPublic : {\n       create : false,\n       read : false,\n       remove : false,\n       update : false\n    },\n     settings : {\n       emailVerified : false,\n       sessionTimeout : 72,\n       androidApiKey :  ,\n       gcmSenderId :  ,\n       mailTemplates : {\n         forgot : {\n           subject :  ,\n           body :  \n        },\n         reg : {\n           subject :  ,\n           body :  \n        }\n      },\n       smtp : null\n    },\n     storage : {\n       user :  ,\n       password :  \n    },\n     npm :  {\\ dependencies\\ :{}} ,\n     stringId :  584e64f8982fd55332741516 \n  },\n   error : false\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n         acc :  ffe86fefg25fbklacsdee8cd4c59644a ,\n         app :  48f172923acd719b42c73ac3a492cfc8 ,\n         cli :  d6859f41223c9997ff78c6b4vb3a96bb \n}   https://api.scorocode.ru/api/v1/app", 
            "title": "Get application info"
        }, 
        {
            "location": "/httpapi/appapi/#retrieve-list-of-collections-and-their-settings", 
            "text": "https://api.scorocode.ru/api/v1/app/collections  Method:  POST  Headers:  Content-Type: application/json  {\n     app          :  , // application identifier, mandatory\n     cli          :  , // client key, mandatory\n     acc          :    // access key, mandatory, masterKey only\n}  Responses:  Success  {\n   collections : {\n     devices : {\n       id :  584e64f8982fd55332741515 ,\n       name :  devices ,\n       useDocsACL : false,\n       ACL : {\n         create : [\n           * \n        ],\n         read : [\n           * \n        ],\n         remove : [\n           * \n        ],\n         update : [\n           * \n        ]\n      },\n       triggers : {\n         afterFind : {\n           code :  ,\n           isActive : false\n        },\n         afterInsert : {\n           code :  ,\n           isActive : false\n        },\n         afterRemove : {\n           code :  ,\n           isActive : false\n        },\n         afterUpdate : {\n           code :  ,\n           isActive : false\n        },\n         beforeInsert : {\n           code :  ,\n           isActive : false\n        },\n         beforeRemove : {\n           code :  ,\n           isActive : false\n        },\n         beforeUpdate : {\n           code :  ,\n           isActive : false\n        }\n      },\n       fields : [\n        {\n           name :  readACL ,\n           type :  ACL ,\n           target :  ,\n           system : true,\n           readonly : false,\n           required : false\n        },\n        {\n           name :  updateACL ,\n           type :  ACL ,\n           target :  ,\n           system : true,\n           readonly : false,\n           required : false\n        },\n        {\n           name :  removeACL ,\n           type :  ACL ,\n           target :  ,\n           system : true,\n           readonly : false,\n           required : false\n        },\n        {\n           name :  createdAt ,\n           type :  Date ,\n           target :  ,\n           system : true,\n           readonly : true,\n           required : false\n        },\n        {\n           name :  updatedAt ,\n           type :  Date ,\n           target :  ,\n           system : true,\n           readonly : true,\n           required : false\n        },\n        {\n           name :  userId ,\n           type :  String ,\n           target :  ,\n           system : true,\n           readonly : false,\n           required : false\n        },\n        {\n           name :  deviceId ,\n           type :  String ,\n           target :  ,\n           system : true,\n           readonly : true,\n           required : true\n        },\n        {\n           name :  deviceType ,\n           type :  String ,\n           target :  ,\n           system : true,\n           readonly : true,\n           required : true\n        }\n      ],\n       system : true,\n       indexes : []\n    },\n     roles : {\n       id :  584e64f8982fd55332741513 ,\n       name :  roles ,\n       useDocsACL : false,\n       ACL : {\n         create : [\n           * \n        ],\n         read : [\n           * \n        ],\n         remove : [\n           * \n        ],\n         update : [\n           * \n        ]\n      },\n       triggers : {\n         afterFind : {\n           code :  ,\n           isActive : false\n        },\n         afterInsert : {\n           code :  ,\n           isActive : false\n        },\n         afterRemove : {\n           code :  ,\n           isActive : false\n        },\n         afterUpdate : {\n           code :  ,\n           isActive : false\n        },\n         beforeInsert : {\n           code :  ,\n           isActive : false\n        },\n         beforeRemove : {\n           code :  ,\n           isActive : false\n        },\n         beforeUpdate : {\n           code :  ,\n           isActive : false\n        }\n      },\n       fields : [\n        {\n           name :  name ,\n           type :  String ,\n           target :  ,\n           system : true,\n           readonly : false,\n           required : true\n        },\n        {\n           name :  readACL ,\n           type :  ACL ,\n           target :  ,\n           system : true,\n           readonly : false,\n           required : false\n        },\n        {\n           name :  updateACL ,\n           type :  ACL ,\n           target :  ,\n           system : true,\n           readonly : false,\n           required : false\n        },\n        {\n           name :  removeACL ,\n           type :  ACL ,\n           target :  ,\n           system : true,\n           readonly : false,\n           required : false\n        },\n        {\n           name :  createdAt ,\n           type :  Date ,\n           target :  ,\n           system : true,\n           readonly : true,\n           required : false\n        },\n        {\n           name :  updatedAt ,\n           type :  Date ,\n           target :  ,\n           system : true,\n           readonly : true,\n           required : false\n        }\n      ],\n       system : true,\n       indexes : []\n    },\n     users : {\n       id :  584e64f8982fd55332741514 ,\n       name :  users ,\n       useDocsACL : false,\n       ACL : {\n         create : [\n           * \n        ],\n         read : [\n           * \n        ],\n         remove : [\n           * \n        ],\n         update : [\n           * \n        ]\n      },\n       triggers : {\n         afterFind : {\n           code :  ,\n           isActive : false\n        },\n         afterInsert : {\n           code :  ,\n           isActive : false\n        },\n         afterRemove : {\n           code :  ,\n           isActive : false\n        },\n         afterUpdate : {\n           code :  ,\n           isActive : false\n        },\n         beforeInsert : {\n           code :  ,\n           isActive : false\n        },\n         beforeRemove : {\n           code :  ,\n           isActive : false\n        },\n         beforeUpdate : {\n           code :  ,\n           isActive : false\n        }\n      },\n       fields : [\n        {\n           name :  email ,\n           type :  String ,\n           target :  ,\n           system : true,\n           readonly : true,\n           required : true\n        },\n        {\n           name :  phone ,\n           type :  String ,\n           target :  ,\n           system : true,\n           readonly : false,\n           required : false\n        },\n        {\n           name :  readACL ,\n           type :  ACL ,\n           target :  ,\n           system : true,\n           readonly : false,\n           required : false\n        },\n        {\n           name :  updateACL ,\n           type :  ACL ,\n           target :  ,\n           system : true,\n           readonly : false,\n           required : false\n        },\n        {\n           name :  removeACL ,\n           type :  ACL ,\n           target :  ,\n           system : true,\n           readonly : false,\n           required : false\n        },\n        {\n           name :  createdAt ,\n           type :  Date ,\n           target :  ,\n           system : true,\n           readonly : true,\n           required : false\n        },\n        {\n           name :  updatedAt ,\n           type :  Date ,\n           target :  ,\n           system : true,\n           readonly : true,\n           required : false\n        },\n        {\n           name :  username ,\n           type :  String ,\n           target :  ,\n           system : true,\n           readonly : false,\n           required : true\n        },\n        {\n           name :  password ,\n           type :  Password ,\n           target :  ,\n           system : true,\n           readonly : false,\n           required : true\n        },\n        {\n           name :  emailVerified ,\n           type :  Boolean ,\n           target :  ,\n           system : true,\n           readonly : true,\n           required : false\n        },\n        {\n           name :  roles ,\n           type :  Array ,\n           target :  ,\n           system : true,\n           readonly : false,\n           required : false\n        },\n        {\n           name :  token ,\n           type :  String ,\n           target :  ,\n           system : true,\n           readonly : true,\n           required : false\n        }\n      ],\n       system : true,\n       indexes : []\n    }\n  },\n   error : false\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n         acc :  ffe86fefg25fbklacsdee8cd4c59644a ,\n         app :  48f172923acd719b42c73ac3a492cfc8 ,\n         cli :  d6859f41223c9997ff78c6b4vb3a96bb \n}   https://api.scorocode.ru/api/v1/app/collections", 
            "title": "Retrieve list of collections and their settings"
        }, 
        {
            "location": "/httpapi/appapi/#retrieve-collection-info", 
            "text": "https://api.scorocode.ru/api/v1/app/collections/get  Method:  POST  Headers:  Content-Type: application/json  {\n     app          :  , // application identifier, mandatory\n     cli          :  , // client key, mandatory\n     acc          :  , // access key, mandatory, masterKey only\n     coll         :    // collection name, mandatory\n}  Responses:  Success  {\n   collection : {\n     id :  584e64f8982fd55332741515 ,\n     name :  devices ,\n     useDocsACL : false,\n     ACL : {\n       create : [\n         * \n      ],\n       read : [\n         * \n      ],\n       remove : [\n         * \n      ],\n       update : [\n         * \n      ]\n    },\n     triggers : {\n       afterFind : {\n         code :  ,\n         isActive : false\n      },\n       afterInsert : {\n         code :  ,\n         isActive : false\n      },\n       afterRemove : {\n         code :  ,\n         isActive : false\n      },\n       afterUpdate : {\n         code :  ,\n         isActive : false\n      },\n       beforeInsert : {\n         code :  ,\n         isActive : false\n      },\n       beforeRemove : {\n         code :  ,\n         isActive : false\n      },\n       beforeUpdate : {\n         code :  ,\n         isActive : false\n      }\n    },\n     fields : [\n      {\n         name :  readACL ,\n         type :  ACL ,\n         target :  ,\n         system : true,\n         readonly : false,\n         required : false\n      },\n      {\n         name :  updateACL ,\n         type :  ACL ,\n         target :  ,\n         system : true,\n         readonly : false,\n         required : false\n      },\n      {\n         name :  removeACL ,\n         type :  ACL ,\n         target :  ,\n         system : true,\n         readonly : false,\n         required : false\n      },\n      {\n         name :  createdAt ,\n         type :  Date ,\n         target :  ,\n         system : true,\n         readonly : true,\n         required : false\n      },\n      {\n         name :  updatedAt ,\n         type :  Date ,\n         target :  ,\n         system : true,\n         readonly : true,\n         required : false\n      },\n      {\n         name :  userId ,\n         type :  String ,\n         target :  ,\n         system : true,\n         readonly : false,\n         required : false\n      },\n      {\n         name :  deviceId ,\n         type :  String ,\n         target :  ,\n         system : true,\n         readonly : true,\n         required : true\n      },\n      {\n         name :  deviceType ,\n         type :  String ,\n         target :  ,\n         system : true,\n         readonly : true,\n         required : true\n      }\n    ],\n     system : true,\n     indexes : []\n  },\n   error : false\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n         acc :  ffe86fefg25fbklacsdee8cd4c59644a ,\n         app :  48f172923acd719b42c73ac3a492cfc8 ,\n         cli :  d6859f41223c9997ff78c6b4vb3a96bb ,\n         coll :  devices \n}   https://api.scorocode.ru/api/v1/app/collections/get", 
            "title": "Retrieve collection info."
        }, 
        {
            "location": "/httpapi/appapi/#create-new-collection", 
            "text": "https://api.scorocode.ru/api/v1/app/collections/create  Method:  POST  Headers:  Content-Type: application/json  {\n     app :  ,               // application identifier, mandatory\n     cli :  ,               // client key, mandatory\n     acc :  ,               // access key, mandatory, masterKey only\n     collection : {          \n         name :  ,          // collection name, mandatory  \n         useDocsACL : bool,  //  use documents ACL  flag, optional\n         ACL : {}            // ACL settings, optional\n    }\n}  Responses:  Success  {\n   collection : {\n     id :  584e849e7e0b4e222480a282 ,\n     name :  apicoll ,\n     useDocsACL : false,\n     ACL : {\n         create : [\n             R5VGMes94p \n        ],\n         read : [\n             * ,\n             R5VGMes94p \n        ],\n         remove : [\n             R5VGMes94p \n        ],\n         update : [\n             R5VGMes94p \n        ]\n    },\n     triggers : {\n       afterInsert : {\n         code :  ,\n         isActive : false\n      },\n       afterRemove : {\n         code :  ,\n         isActive : false\n      },\n       afterUpdate : {\n         code :  ,\n         isActive : false\n      },\n       beforeInsert : {\n         code :  ,\n         isActive : false\n      },\n       beforeRemove : {\n         code :  ,\n         isActive : false\n      },\n       beforeUpdate : {\n         code :  ,\n         isActive : false\n      }\n    },\n     fields : [\n      {\n         name :  readACL ,\n         type :  ACL ,\n         target :  ,\n         system : true,\n         readonly : false,\n         required : false\n      },\n      {\n         name :  updateACL ,\n         type :  ACL ,\n         target :  ,\n         system : true,\n         readonly : false,\n         required : false\n      },\n      {\n         name :  removeACL ,\n         type :  ACL ,\n         target :  ,\n         system : true,\n         readonly : false,\n         required : false\n      },\n      {\n         name :  createdAt ,\n         type :  Date ,\n         target :  ,\n         system : true,\n         readonly : true,\n         required : false\n      },\n      {\n         name :  updatedAt ,\n         type :  Date ,\n         target :  ,\n         system : true,\n         readonly : true,\n         required : false\n      }\n    ],\n     system : false,\n     indexes : []\n  },\n   error : false\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n         acc :  ffe86fefg25fbklacsdee8cd4c59644a ,\n         app :  48f172923acd719b42c73ac3a492cfc8 ,\n         cli :  d6859f41223c9997ff78c6b4vb3a96bb ,\n         collection : {\n             name :  apicoll ,\n             useDocsACL : false,\n             ACL : {\n                 create : [\n                     R5VGMes94p \n                ],\n                 read : [\n                     * ,\n                     R5VGMes94p \n                ],\n                 remove : [\n                     R5VGMes94p \n                ],\n                 update : [\n                     R5VGMes94p \n                ]\n            }\n        }\n}   https://api.scorocode.ru/api/v1/app/collections/create", 
            "title": "Create new collection"
        }, 
        {
            "location": "/httpapi/appapi/#update-collection-settings", 
            "text": "https://api.scorocode.ru/api/v1/app/collections/update  Method:  POST  Headers:  Content-Type: application/json  {\n     app :  ,               // application identifier, mandatory\n     cli :  ,               // client key, mandatory\n     acc :  ,               // access key, mandatory, masterKey only\n     collection : {\n         id :  ,            // collection identifier, mandatory           \n         name :  ,          // collection name, optional  \n         useDocsACL : bool,  //  use documents ACL  flag, optional\n         ACL : {}            // ACL settings, optional\n    }\n}  Responses:  Success  {\n   collection : {\n     id :  584e849e7e0b4e222480a282 ,\n     name :  apicoll ,\n     useDocsACL : true,\n     ACL : {\n         create : [\n             R5VGMes94p \n        ],\n         read : [\n             * ,\n             R5VGMes94p \n        ],\n         remove : [\n             R5VGMes94p \n        ],\n         update : [\n             R5VGMes94p \n        ]\n    },\n     triggers : {\n       afterInsert : {\n         code :  ,\n         isActive : false\n      },\n       afterRemove : {\n         code :  ,\n         isActive : false\n      },\n       afterUpdate : {\n         code :  ,\n         isActive : false\n      },\n       beforeInsert : {\n         code :  ,\n         isActive : false\n      },\n       beforeRemove : {\n         code :  ,\n         isActive : false\n      },\n       beforeUpdate : {\n         code :  ,\n         isActive : false\n      }\n    },\n     fields : [\n      {\n         name :  readACL ,\n         type :  ACL ,\n         target :  ,\n         system : true,\n         readonly : false,\n         required : false\n      },\n      {\n         name :  updateACL ,\n         type :  ACL ,\n         target :  ,\n         system : true,\n         readonly : false,\n         required : false\n      },\n      {\n         name :  removeACL ,\n         type :  ACL ,\n         target :  ,\n         system : true,\n         readonly : false,\n         required : false\n      },\n      {\n         name :  createdAt ,\n         type :  Date ,\n         target :  ,\n         system : true,\n         readonly : true,\n         required : false\n      },\n      {\n         name :  updatedAt ,\n         type :  Date ,\n         target :  ,\n         system : true,\n         readonly : true,\n         required : false\n      }\n    ],\n     system : false,\n     indexes : []\n  },\n   error : false\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n         acc :  ffe86fefg25fbklacsdee8cd4c59644a ,\n         app :  48f172923acd719b42c73ac3a492cfc8 ,\n         cli :  d6859f41223c9997ff78c6b4vb3a96bb ,\n         collection : {\n             id :  584e849e7e0b4e222480a282 ,\n             useDocsACL : true\n}   https://api.scorocode.ru/api/v1/app/collections/create", 
            "title": "Update collection settings"
        }, 
        {
            "location": "/httpapi/appapi/#delete-collection", 
            "text": "https://api.scorocode.ru/api/v1/app/collections/delete  Method:  POST  Headers:  Content-Type: application/json  {\n     app :  ,               // application identifier, mandatory\n     cli :  ,               // client key, mandatory\n     acc :  ,               // access key, mandatory, masterKey only\n     collection : {\n         id :               // collection identifier, mandatory           \n    }\n}  Responses:  Success  {\n   error : false\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n         acc :  ffe86fefg25fbklacsdee8cd4c59644a ,\n         app :  48f172923acd719b42c73ac3a492cfc8 ,\n         cli :  d6859f41223c9997ff78c6b4vb3a96bb ,\n         collection : {\n             id :  584e849e7e0b4e222480a282 ,\n}   https://api.scorocode.ru/api/v1/app/collections/delete", 
            "title": "Delete collection"
        }, 
        {
            "location": "/httpapi/appapi/#clone-collection", 
            "text": "https://api.scorocode.ru/api/v1/app/collections/clone  Method:  POST  Headers:  Content-Type: application/json  {\n     app :  ,               // application identifier, mandatory\n     cli :  ,               // client key, mandatory\n     acc :  ,               // access key, mandatory, masterKey only\n     collection : {\n         id :               // collection identifier, mandatory           \n         name :             // new collection name, mandatory\n    }\n}  Responses:  Success  {\n   collection : {\n     id :  584e91e70c62722cf9fe2191 ,\n     name :  clonedcoll ,\n     useDocsACL : false,\n     ACL : {},\n     triggers : {\n       afterInsert : {\n         code :  ,\n         isActive : false\n      },\n       afterRemove : {\n         code :  ,\n         isActive : false\n      },\n       afterUpdate : {\n         code :  ,\n         isActive : false\n      },\n       beforeInsert : {\n         code :  ,\n         isActive : false\n      },\n       beforeRemove : {\n         code :  ,\n         isActive : false\n      },\n       beforeUpdate : {\n         code :  ,\n         isActive : false\n      }\n    },\n     fields : [\n      {\n         name :  readACL ,\n         type :  ACL ,\n         target :  ,\n         system : true,\n         readonly : false,\n         required : false\n      },\n      {\n         name :  updateACL ,\n         type :  ACL ,\n         target :  ,\n         system : true,\n         readonly : false,\n         required : false\n      },\n      {\n         name :  removeACL ,\n         type :  ACL ,\n         target :  ,\n         system : true,\n         readonly : false,\n         required : false\n      },\n      {\n         name :  createdAt ,\n         type :  Date ,\n         target :  ,\n         system : true,\n         readonly : true,\n         required : false\n      },\n      {\n         name :  updatedAt ,\n         type :  Date ,\n         target :  ,\n         system : true,\n         readonly : true,\n         required : false\n      }\n    ],\n     system : false,\n     indexes : []\n  },\n   error : false\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n         acc :  ffe86fefg25fbklacsdee8cd4c59644a ,\n         app :  48f172923acd719b42c73ac3a492cfc8 ,\n         cli :  d6859f41223c9997ff78c6b4vb3a96bb ,\n         collection : {\n             id :  584e91b77e0b4e222480a316 ,\n             name :  clonedcoll            \n        }\n}   https://api.scorocode.ru/api/v1/app/collections/clone", 
            "title": "Clone collection"
        }, 
        {
            "location": "/httpapi/appapi/#create-new-collections-index", 
            "text": "https://api.scorocode.ru/api/v1/app/collections/index/create  Method:  POST  Headers:  Content-Type: application/json  {\n     app :  ,               // application identifier, mandatory\n     cli :  ,               // client key, mandatory\n     acc :  ,               // access key, mandatory, masterKey only\n     coll :  ,              // collection name, mandatory\n     index : {\n         name :  ,                    // index name, mandatory\n         fields : [\n            {\n                 name :  ,            // field name, mandatory\n                 order : 1 || -1       // sorting order, mandatory\n            }\n        ]\n    }\n}  Responses:  Success  {\n   error : false\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n         acc :  ffe86fefg25fbklacsdee8cd4c59644a ,\n         app :  48f172923acd719b42c73ac3a492cfc8 ,\n         cli :  d6859f41223c9997ff78c6b4vb3a96bb ,\n         coll :  users ,\n         index : {\n             name :  emailIndex ,                    \n             fields : [\n                {\n                     name :  email ,            \n                     order : 1       \n                }\n            ]\n        }\n}   https://api.scorocode.ru/api/v1/app/collections/index/create", 
            "title": "Create new collection's index"
        }, 
        {
            "location": "/httpapi/appapi/#delete-collections-index", 
            "text": "https://api.scorocode.ru/api/v1/app/collections/index/delete  Method:  POST  Headers:  Content-Type: application/json  {\n     app :  ,               // application identifier, mandatory\n     cli :  ,               // client key, mandatory\n     acc :  ,               // access key, mandatory, masterKey only\n     coll :  ,              // collection name, mandatory\n     index : {\n         name :             // index name, mandatory\n    }\n}  Responses:  Success  {\n   error : false\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n         acc :  ffe86fefg25fbklacsdee8cd4c59644a ,\n         app :  48f172923acd719b42c73ac3a492cfc8 ,\n         cli :  d6859f41223c9997ff78c6b4vb3a96bb ,\n         coll :  users ,\n         index : {\n             name :  emailIndex                     \n        }\n}   https://api.scorocode.ru/api/v1/app/collections/index/delete", 
            "title": "Delete collection's index"
        }, 
        {
            "location": "/httpapi/appapi/#create-new-collections-field", 
            "text": "https://api.scorocode.ru/api/v1/app/collections/fields/create  Method:  POST  Headers:  Content-Type: application/json  {\n     app :  ,               // application identifier, mandatory\n     cli :  ,               // client key, mandatory\n     acc :  ,               // access key, mandatory, masterKey only\n     coll :  ,              // collection name, mandatory\n     collField : {     \n         name :  ,          // field name, mandatory\n         type :  ,          // field data type, mandatory\n         target :           // target collection name, mandatory for Pointer || Relation data type fields\n    }\n}  Responses:  Success  {\n   error : false,\n   field : {\n     name :  pointer ,\n     type :  Pointer ,\n     target :  devices ,\n     system : false,\n     readonly : false,\n     required : false\n  }\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n     acc :  ffe86fefg25fbklacsdee8cd4c59644a ,\n     app :  48f172923acd719b42c73ac3a492cfc8 ,\n     cli :  d6859f41223c9997ff78c6b4vb3a96bb ,\n     coll :  users ,                       \n     collField : {\n         name :  pointer ,         \n         type :  Pointer ,         \n         target :  devices           \n    }\n}   https://api.scorocode.ru/api/v1/app/collections/fields/create", 
            "title": "Create new collection's field"
        }, 
        {
            "location": "/httpapi/appapi/#delete-collections-field", 
            "text": "https://api.scorocode.ru/api/v1/app/collections/fields/delete  Method:  POST  Headers:  Content-Type: application/json  {\n     app :  ,               // application identifier, mandatory\n     cli :  ,               // client key, mandatory\n     acc :  ,               // access key, mandatory, masterKey only\n     coll :  ,              // collection name, mandatory\n     collField : {   \n         name :             // field name, mandatory\n    }\n}  Responses:  Success  {\n   collection : {\n     id :  584e64f8982fd55332741514 ,\n     name :  users ,\n     useDocsACL : false,\n     ACL : {\n       create : [\n         * \n      ],\n       read : [\n         * \n      ],\n       remove : [\n         * \n      ],\n       update : [\n         * \n      ]\n    },\n     triggers : {\n       afterFind : {\n         code :  ,\n         isActive : false\n      },\n       afterInsert : {\n         code :  ,\n         isActive : false\n      },\n       afterRemove : {\n         code :  ,\n         isActive : false\n      },\n       afterUpdate : {\n         code :  ,\n         isActive : false\n      },\n       beforeInsert : {\n         code :  ,\n         isActive : false\n      },\n       beforeRemove : {\n         code :  ,\n         isActive : false\n      },\n       beforeUpdate : {\n         code :  ,\n         isActive : false\n      }\n    },\n     fields : [\n      {\n         name :  email ,\n         type :  String ,\n         target :  ,\n         system : true,\n         readonly : true,\n         required : true\n      },\n      {\n         name :  phone ,\n         type :  String ,\n         target :  ,\n         system : true,\n         readonly : false,\n         required : false\n      },\n      {\n         name :  readACL ,\n         type :  ACL ,\n         target :  ,\n         system : true,\n         readonly : false,\n         required : false\n      },\n      {\n         name :  updateACL ,\n         type :  ACL ,\n         target :  ,\n         system : true,\n         readonly : false,\n         required : false\n      },\n      {\n         name :  removeACL ,\n         type :  ACL ,\n         target :  ,\n         system : true,\n         readonly : false,\n         required : false\n      },\n      {\n         name :  createdAt ,\n         type :  Date ,\n         target :  ,\n         system : true,\n         readonly : true,\n         required : false\n      },\n      {\n         name :  updatedAt ,\n         type :  Date ,\n         target :  ,\n         system : true,\n         readonly : true,\n         required : false\n      },\n      {\n         name :  username ,\n         type :  String ,\n         target :  ,\n         system : true,\n         readonly : false,\n         required : true\n      },\n      {\n         name :  password ,\n         type :  Password ,\n         target :  ,\n         system : true,\n         readonly : false,\n         required : true\n      },\n      {\n         name :  emailVerified ,\n         type :  Boolean ,\n         target :  ,\n         system : true,\n         readonly : true,\n         required : false\n      },\n      {\n         name :  roles ,\n         type :  Array ,\n         target :  ,\n         system : true,\n         readonly : false,\n         required : false\n      },\n      {\n         name :  token ,\n         type :  String ,\n         target :  ,\n         system : true,\n         readonly : true,\n         required : false\n      }\n    ],\n     system : true,\n     indexes : []\n  },\n   error : false\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n     acc :  ffe86fefg25fbklacsdee8cd4c59644a ,\n     app :  48f172923acd719b42c73ac3a492cfc8 ,\n     cli :  d6859f41223c9997ff78c6b4vb3a96bb ,\n     coll :  users ,                       \n     collField : {\n         name :  pointer \n    }\n}   https://api.scorocode.ru/api/v1/app/collections/fields/delete", 
            "title": "Delete collection's field"
        }, 
        {
            "location": "/httpapi/appapi/#update-collections-triggers", 
            "text": "https://api.scorocode.ru/api/v1/app/collections/triggers  Method:  POST  Headers:  Content-Type: application/json  {\n     app :  ,               // application identifier, mandatory\n     cli :  ,               // client key, mandatory\n     acc :  ,               // access key, mandatory, masterKey only\n     coll :  ,              // collection name, mandatory\n     triggers : {\n         beforeInsert : {      \n             code :  ,       // trigger code, optional\n             isActive : bool  // trigger activation flag, optional\n        },\n         afterInsert : {\n             code :  ,       // trigger code, optional\n             isActive : bool  // trigger activation flag, optional\n        },\n         beforeUpdate : {\n             code :  ,       // trigger code, optional\n             isActive : bool  // trigger activation flag, optional\n        },\n         afterUpdate : {\n             code :  ,       // trigger code, optional\n             isActive : bool  // trigger activation flag, optional\n        },\n         beforeRemove : {\n             code :  ,       // trigger code, optional\n             isActive : bool  // trigger activation flag, optional\n        },\n         afterRemove : {\n             code :  ,       // trigger code, optional\n             isActive : bool  // trigger activation flag, optional\n        }\n    }\n}  Responses:  Success  {\n   error : false,\n   triggers : {\n     afterFind : {\n       code :  ,\n       isActive : false\n    },\n     afterInsert : {\n       code :  DataManager.Insert({\\n  coll: logs , \\n  doc: {\\n     docId : pool.newDoc._id,\\n     collection :  users ,\\n     operation :  register ,\\n     data : pool.newDoc\\n    }\\n  }); ,\n       isActive : true\n    },\n     afterRemove : {\n       code :  ,\n       isActive : false\n    },\n     afterUpdate : {\n       code :  ,\n       isActive : false\n    },\n     beforeInsert : {\n       code :  ,\n       isActive : false\n    },\n     beforeRemove : {\n       code :  ,\n       isActive : false\n    },\n     beforeUpdate : {\n       code :  ,\n       isActive : false\n    }\n  }\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n     acc :  ffe86fefg25fbklacsdee8cd4c59644a ,\n     app :  48f172923acd719b42c73ac3a492cfc8 ,\n     cli :  d6859f41223c9997ff78c6b4vb3a96bb ,\n     coll :  users ,                       \n     triggers : {\n          afterInsert : {\n             code :  DataManager.Insert({\\n  coll: logs , \\n  doc: {\\n     docId : pool.newDoc._id,\\n     collection :  users ,\\n     operation :  register ,\\n     data : pool.newDoc\\n    }\\n  }); ,       \n             isActive : true\n        }\n    }\n}   https://api.scorocode.ru/api/v1/app/collections/triggers", 
            "title": "Update collection's triggers"
        }, 
        {
            "location": "/httpapi/appapi/#retreive-folders-and-scripts-list", 
            "text": "https://api.scorocode.ru/api/v1/app/scripts/folders  Method:  POST  Headers:  Content-Type: application/json  {\n     app :  ,               // application identifier, mandatory\n     cli :  ,               // client key, mandatory\n     acc :  ,               // access key, mandatory, masterKey only\n     path :                 // full path to directory, mandatory\n}  Responses:  Success  {\n   error : false,\n   items : [\n    {\n       _id :  ,\n       name :  folder1 ,\n       path :  /folder1 ,\n       isScript : false\n    },\n    {\n       _id :  ,\n       name :  folder2 ,\n       path :  /folder2 ,\n       isScript : false\n    },\n    {\n       _id :  584eb26a42d52f1ba275fdb2 ,\n       name :  somescript.js ,\n       path :  /somescript.js ,\n       isScript : true\n    }\n  ]\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n     acc :  ffe86fefg25fbklacsdee8cd4c59644a ,\n     app :  48f172923acd719b42c73ac3a492cfc8 ,\n     cli :  d6859f41223c9997ff78c6b4vb3a96bb ,\n     path :  / \n}   https://api.scorocode.ru/api/v1/app/scripts/folders", 
            "title": "Retreive folders and scripts list"
        }, 
        {
            "location": "/httpapi/appapi/#create-new-folder", 
            "text": "https://api.scorocode.ru/api/v1/app/scripts/folders/create  Method:  POST  Headers:  Content-Type: application/json  {\n     app :  ,               // application identifier, mandatory\n     cli :  ,               // client key, mandatory\n     acc :  ,               // access key, mandatory, masterKey only\n     path :                 // full path to directory, mandatory\n}  Responses:  Success  {\n   error : false\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n     acc :  ffe86fefg25fbklacsdee8cd4c59644a ,\n     app :  48f172923acd719b42c73ac3a492cfc8 ,\n     cli :  d6859f41223c9997ff78c6b4vb3a96bb ,\n     path :  /folder1/newfolder \n}   https://api.scorocode.ru/api/v1/app/scripts/folders/create", 
            "title": "Create new folder"
        }, 
        {
            "location": "/httpapi/appapi/#delete-folder", 
            "text": "https://api.scorocode.ru/api/v1/app/scripts/folders/delete  Method:  POST  Headers:  Content-Type: application/json  {\n     app :  ,               // application identifier, mandatory\n     cli :  ,               // client key, mandatory\n     acc :  ,               // access key, mandatory, masterKey only\n     path :                 // full path to directory, mandatory\n}  Responses:  Success  {\n   error : false\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n     acc :  ffe86fefg25fbklacsdee8cd4c59644a ,\n     app :  48f172923acd719b42c73ac3a492cfc8 ,\n     cli :  d6859f41223c9997ff78c6b4vb3a96bb ,\n     path :  /folder1/newfolder \n}   https://api.scorocode.ru/api/v1/app/scripts/folders/delete", 
            "title": "Delete folder"
        }, 
        {
            "location": "/httpapi/appapi/#retreive-server-side-script", 
            "text": "https://api.scorocode.ru/api/v1/app/scripts/get  Method:  POST  Headers:  Content-Type: application/json  {\n     app :  ,               // application identifier, mandatory\n     cli :  ,               // client key, mandatory\n     acc :  ,               // access key, mandatory, masterKey only\n     script :               // server-side script identifier, mandatory\n}  Responses:  Success  {\n   error : false,\n   script : {\n     _id :  584eb54142d52f1ba275fdb3 ,\n     appId :  584e64f8982fd55332741516 ,\n     name :  AYBABTU.js ,\n     path :  /AYBABTU.js ,\n     description :  ,\n     code :  console.log(\\ QWxsIHlvdXIgYmFzZSBhcmUgYmVsb25nIHRvIHVz\\ ); ,\n     jobStartAt :  2016-12-12T17:33:00+03:00 ,\n     isActiveJob : false,\n     jobType :  once ,\n     repeat : {\n       custom : {\n         days : 0,\n         hours : 0,\n         minutes : 0\n      },\n       daily : {\n         on : [],\n         hours : 0,\n         minutes : 0\n      },\n       monthly : {\n         on : [],\n         days : [],\n         lastDate : false,\n         hours : 0,\n         minutes : 0\n      }\n    },\n     nextRun :  2016-12-12T17:33:00+03:00 ,\n     ACL : [\n       * \n    ]\n  }\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n     acc :  ffe86fefg25fbklacsdee8cd4c59644a ,\n     app :  48f172923acd719b42c73ac3a492cfc8 ,\n     cli :  d6859f41223c9997ff78c6b4vb3a96bb ,\n     script :  584eb54142d52f1ba275fdb3 \n}   https://api.scorocode.ru/api/v1/app/scripts/get", 
            "title": "Retreive server-side script"
        }, 
        {
            "location": "/httpapi/appapi/#create-new-server-side-script", 
            "text": "https://api.scorocode.ru/api/v1/app/scripts/create  Method:  POST  Headers:  Content-Type: application/json  {\n     app :  ,               // application identifier, mandatory\n     cli :  ,               // client key, mandatory\n     acc :  ,               // access key, mandatory, masterKey only\n     cloudCode : {\n         path :                  // full path and script name, mandatory\n         description :  ,        // description, optional\n         code :  ,               // server-side script code, optional\n         jobStartAt :  datetime , // timer start datetime, optional\n         isActiveJob : bool,      // timer activation flag, optional\n         jobType :  ,            // timer type, optional, custom || daily || monthly\n         repeat : {               // timer repeat settings, optional\n             custom : {\n                 days : int,\n                 hours : int,\n                 minutes : int\n            },\n             daily : {\n                 on : [int],\n                 hours : int,\n                 minutes : int\n            }\n             monthly : {\n                 on : [int],\n                 days : [int],\n                 lastDate : bool,\n                 hours : int,\n                 minutes : int\n            }\n        }\n         ACL : []                 // server-side script ACL settings, optional, array of user ids and/or  *  for anonymous access\n    }\n}  Responses:  Success  {\n   error : false,\n   script : {\n     _id :  584fad1422a5482feb5b31ab ,\n     appId :  584e64f8982fd55332741516 ,\n     name :  AYBABTU.js ,\n     path :  /AYBABTU.js ,\n     description :  All your base ,\n     code :  console.log(\\ QWxsIHlvdXIgYmFzZSBhcmUgYmVsb25nIHRvIHVz\\ ); ,\n     jobStartAt :  2016-12-13T17:33:00+03:00 ,\n     isActiveJob : false,\n     jobType :  custom ,\n     repeat : {\n       custom : {\n         days : 0,\n         hours : 0,\n         minutes : 5\n      },\n       daily : null,\n       monthly : null\n    },\n     nextRun :  0001-01-01T00:00:00Z ,\n     ACL : [\n       * \n    ]\n  }\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n     acc :  ffe86fefg25fbklacsdee8cd4c59644a ,\n     app :  48f172923acd719b42c73ac3a492cfc8 ,\n     cli :  d6859f41223c9997ff78c6b4vb3a96bb ,\n     cloudCode : {\n         path :  /AYBABTU.js ,\n         description :  All your base ,      \n         code :  console.log(\\ QWxsIHlvdXIgYmFzZSBhcmUgYmVsb25nIHRvIHVz\\ ); ,             \n         jobStartAt :  2016-12-13T17:33:00+03:00 , \n         isActiveJob : false,    \n         jobType :  custom ,           \n         repeat : {             \n             custom : {\n                 days : 0,\n                 hours : 0,\n                 minutes : 5\n            }\n        },\n         ACL : [ * ]\n    }\n}   https://api.scorocode.ru/api/v1/app/scripts/create", 
            "title": "Create new server-side script"
        }, 
        {
            "location": "/httpapi/appapi/#update-server-side-script", 
            "text": "https://api.scorocode.ru/api/v1/app/scripts/update  Method:  POST  Headers:  Content-Type: application/json  {\n\n    {\n     app :  ,               // application identifier, mandatory\n     cli :  ,               // client key, mandatory\n     acc :  ,               // access key, mandatory, masterKey only\n     script :               // server-side script identifier, mandatory\n     cloudCode : {\n         path :                  // full path and script name, mandatory\n         description :  ,        // description, optional\n         code :  ,               // server-side script code, optional\n         jobStartAt :  datetime , // timer start datetime, optional\n         isActiveJob : bool,      // timer activation flag, optional\n         jobType :  ,            // timer type, optional, custom || daily || monthly\n         repeat : {               // timer repeat settings, optional\n             custom : {\n                 days : int,\n                 hours : int,\n                 minutes : int\n            },\n             daily : {\n                 on : [int],\n                 hours : int,\n                 minutes : int\n            }\n             monthly : {\n                 on : [int],\n                 days : [int],\n                 lastDate : bool,\n                 hours : int,\n                 minutes : int\n            }\n        },\n         ACL : []                 // server-side script ACL settings, optional, array of user ids and/or  *  for anonymous access\n    }\n}  Responses:  Success  {\n   error : false,\n   script : {\n     _id :  584fad1422a5482feb5b31ab ,\n     appId :  584e64f8982fd55332741516 ,\n     name :  AYBABTU.js ,\n     path :  /AYBABTU.js ,\n     description :  All your base ,\n     code :  console.log(\\ QWxsIHlvdXIgYmFzZSBhcmUgYmVsb25nIHRvIHVz\\ ); ,\n     jobStartAt :  2016-12-13T17:33:00+03:00 ,\n     isActiveJob : true,\n     jobType :  custom ,\n     repeat : {\n       custom : {\n         days : 0,\n         hours : 0,\n         minutes : 5\n      },\n       daily : null,\n       monthly : null\n    },\n     nextRun :  0001-01-01T00:00:00Z ,\n     ACL : [\n       * \n    ]\n  }\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n     acc :  ffe86fefg25fbklacsdee8cd4c59644a ,\n     app :  48f172923acd719b42c73ac3a492cfc8 ,\n     cli :  d6859f41223c9997ff78c6b4vb3a96bb ,\n     script :  584fad1422a5482feb5b31ab ,\n     cloudCode : {\n         isActiveJob : true    \n    }\n}   https://api.scorocode.ru/api/v1/app/scripts/update", 
            "title": "Update server-side script"
        }, 
        {
            "location": "/httpapi/appapi/#delete-server-side-script", 
            "text": "https://api.scorocode.ru/api/v1/app/scripts/delete  Method:  POST  Headers:  Content-Type: application/json  {\n     app :  ,               // application identifier, mandatory\n     cli :  ,               // client key, mandatory\n     acc :  ,               // access key, mandatory, masterKey only\n     script :               // server-side script identifier, mandatory\n}  Responses:  Success  {\n   error : false\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n     acc :  ffe86fefg25fbklacsdee8cd4c59644a ,\n     app :  48f172923acd719b42c73ac3a492cfc8 ,\n     cli :  d6859f41223c9997ff78c6b4vb3a96bb ,\n     script :  584fad1422a5482feb5b31ab \n}   https://api.scorocode.ru/api/v1/app/scripts/delete", 
            "title": "Delete server-side script"
        }, 
        {
            "location": "/httpapi/appapi/#retreive-bots-list", 
            "text": "https://api.scorocode.ru/api/v1/bots  Method:  POST  Headers:  Content-Type: application/json  {\n     app :  ,               // application identifier, mandatory\n     cli :  ,               // client key, mandatory\n     acc :                  // access key, mandatory, masterKey only\n}  Responses:  Success  {\n   error : false,\n   items : [\n    {\n       _id :  584fb8710c62722cf9fe2617 ,\n       name :  botobot ,\n       botId :  123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11 ,\n       appId :  584e64f8982fd55332741516 ,\n       scriptId :  584fb52f0c62722cf9fe2604 ,\n       isActive : false\n    }\n  ]\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n     acc :  ffe86fefg25fbklacsdee8cd4c59644a ,\n     app :  48f172923acd719b42c73ac3a492cfc8 ,\n     cli :  d6859f41223c9997ff78c6b4vb3a96bb \n}   https://api.scorocode.ru/api/v1/bots", 
            "title": "Retreive bots list"
        }, 
        {
            "location": "/httpapi/appapi/#create-new-bot", 
            "text": "https://api.scorocode.ru/api/v1/bots/create  Method:  POST  Headers:  Content-Type: application/json  {\n     app :  ,               // application identifier, mandatory\n     cli :  ,               // client key, mandatory\n     acc :  ,               // access key, mandatory, masterKey only\n     bot : {\n         name :  ,          // bot name, mandatory\n         botId :  ,         // telegram token you received from @BotFather, mandatory \n         scriptId :  ,      // server-side script identifier, mandatory\n         isActive : bool     // bot activation flag, optional\n    }\n}  Responses:  Success  {\n   bot : {\n     _id :  584fb8710c62722cf9fe2617 ,\n     name :  botobot ,\n     botId :  123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11 ,\n     appId :  584e64f8982fd55332741516 ,\n     scriptId :  584fb52f0c62722cf9fe2604 ,\n     isActive : false\n  },\n   error : false\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n     acc :  ffe86fefg25fbklacsdee8cd4c59644a ,\n     app :  48f172923acd719b42c73ac3a492cfc8 ,\n     cli :  d6859f41223c9997ff78c6b4vb3a96bb ,\n     bot :{\n         name : botobot ,\n         isActive :false,\n         botId : 123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11 ,\n         scriptId : 584fb52f0c62722cf9fe2604 \n    }\n}   https://api.scorocode.ru/api/v1/bots/create", 
            "title": "Create new bot"
        }, 
        {
            "location": "/httpapi/appapi/#update-bot", 
            "text": "https://api.scorocode.ru/api/v1/bots/update  Method:  POST  Headers:  Content-Type: application/json  {\n     app :  ,               // application identifier, mandatory\n     cli :  ,               // client key, mandatory\n     acc :  ,               // access key, mandatory, masterKey only\n     bot : {\n         _id :  ,           // bot identifier, mandatory\n         name :  ,          // bot name, optional\n         botId :  ,         // telegram token you received from @BotFather, optional \n         scriptId :  ,      // server-side script identifier, optional\n         isActive : bool     // bot activation flag, optional\n    }\n}  Responses:  Success  {\n   bot : {\n     _id :  584fbd067e0b4e222480a7e4 ,\n     name :  botobot ,\n     botId :  123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew12 ,\n     appId :  584e64f8982fd55332741516 ,\n     scriptId :  584fb52f0c62722cf9fe2604 ,\n     isActive : false\n  },\n   error : false\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n     acc :  ffe86fefg25fbklacsdee8cd4c59644a ,\n     app :  48f172923acd719b42c73ac3a492cfc8 ,\n     cli :  d6859f41223c9997ff78c6b4vb3a96bb ,\n     bot : {\n         _id :  584fbd067e0b4e222480a7e4 ,\n         name :  botobot ,\n         botId :  123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew12 ,\n         appId :  584e64f8982fd55332741516 ,\n         scriptId :  584fb52f0c62722cf9fe2604 ,\n         isActive : false\n    }\n}   https://api.scorocode.ru/api/v1/bots/update", 
            "title": "Update bot"
        }, 
        {
            "location": "/httpapi/appapi/#delete-bot", 
            "text": "https://api.scorocode.ru/api/v1/bots/delete  Method:  POST  Headers:  Content-Type: application/json  {\n     app :  ,               // application identifier, mandatory\n     cli :  ,               // client key, mandatory\n     acc :  ,               // access key, mandatory, masterKey only\n     bot : {\n         _id :              // bot identifier, mandatory\n    }\n}  Responses:  Success  {\n   error : false\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n     acc :  ffe86fefg25fbklacsdee8cd4c59644a ,\n     app :  48f172923acd719b42c73ac3a492cfc8 ,\n     cli :  d6859f41223c9997ff78c6b4vb3a96bb ,\n     bot : {\n         _id :  584fbd067e0b4e222480a7e4 \n    }\n}   https://api.scorocode.ru/api/v1/bots/delete", 
            "title": "Delete bot"
        }, 
        {
            "location": "/httpapi/httpapi1/", 
            "text": "New user registration.\n\n\nhttps://api.scorocode.ru/api/v1/register\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n         : \n, // application identifier, mandatory\n    \ncli\n         : \n, // client key, mandatory\n    \nusername\n    : \n, // username, mandatory, 5 characters minimum\n    \nemail\n       : \n, // email, mandatory\n    \npassword\n    : \n, // password, mandatory, 6 characters minimum\n    \ndoc\n         : { } // user field values in the \nusers\n collection, optional\n}\n\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n    \nerror\n       : false\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n    \napp\n: \ndb8a1b41b8543397a798a181d9891b4c\n,\n    \ncli\n: \nad6a8fe72ef7dfb9c46958aacb15196a\n,\n    \nusername\n: \nusername\n,\n    \nemail\n: \nuseremail@domain.zone\n,\n    \npassword\n: \nCorrectHorseStapleButton\n,\n    \ndoc\n: {\n        \nexampleField\n: \nToday is June, 18. It\ns Muriel\ns birthday! Muriel is now 20 years old. Happy Birthday, Muriel!\n,\n        \nanotherExampleField\n: \nI don\nt know what to say. I used to want to be an astrophysicist. Unfortunately, this is true.\n\n    }\n}\n\n \nhttps://api.scorocode.ru/api/v1/register\n\n\n\n\n\n\nUser authentication\n\n\nhttps://api.scorocode.ru/api/v1/login\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n         : \n, // application identifier, mandatory\n    \ncli\n         : \n, // client key, mandatory\n    \nemail\n       : \n, // email, mandatory\n    \npassword\n    : \n, // password, mandatory\n}\n\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n    \nerror\n       : false,\n    \nresult\n      : {\n        \nsessionId\n     : \n, // session ID\n        \nuser\n          : {}  // Document containing the user\n    }\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n    \napp\n: \ndb8a1b41b8543397a798a181d9891b4c\n,\n    \ncli\n: \nad6a8fe72ef7dfb9c46958aacb15196a\n,\n    \nemail\n: \nuseremail@domain.zone\n,\n    \npassword\n: \nCorrectHorseStapleButton\n\n}\n \nhttps://api.scorocode.ru/api/v1/login\n\n\n\n\n\n\nUser deauthentication\n\n\nhttps://api.scorocode.ru/api/v1/logout\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n         : \n, // application identifier, mandatory\n    \ncli\n         : \n, // client key, mandatory\n    \nsess\n        : \n  // session ID, mandatory\n}\n\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n    \nerror\n       : false\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n    \napp\n: \ndb8a1b41b8543397a798a181d9891b4c\n,\n    \ncli\n: \nad6a8fe72ef7dfb9c46958aacb15196a\n,\n    \nsess\n: \n6rnbKKGvLLdU9Sl9\n\n}\n \nhttps://api.scorocode.ru/api/v1/logout", 
            "title": "Users"
        }, 
        {
            "location": "/httpapi/httpapi1/#new-user-registration", 
            "text": "https://api.scorocode.ru/api/v1/register  Method:  POST  Headers:  Content-Type: application/json  {\n     app          :  , // application identifier, mandatory\n     cli          :  , // client key, mandatory\n     username     :  , // username, mandatory, 5 characters minimum\n     email        :  , // email, mandatory\n     password     :  , // password, mandatory, 6 characters minimum\n     doc          : { } // user field values in the  users  collection, optional\n}  Responses:  Success  {\n     error        : false\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n     app :  db8a1b41b8543397a798a181d9891b4c ,\n     cli :  ad6a8fe72ef7dfb9c46958aacb15196a ,\n     username :  username ,\n     email :  useremail@domain.zone ,\n     password :  CorrectHorseStapleButton ,\n     doc : {\n         exampleField :  Today is June, 18. It s Muriel s birthday! Muriel is now 20 years old. Happy Birthday, Muriel! ,\n         anotherExampleField :  I don t know what to say. I used to want to be an astrophysicist. Unfortunately, this is true. \n    }\n}   https://api.scorocode.ru/api/v1/register", 
            "title": "New user registration."
        }, 
        {
            "location": "/httpapi/httpapi1/#user-authentication", 
            "text": "https://api.scorocode.ru/api/v1/login  Method:  POST  Headers:  Content-Type: application/json  {\n     app          :  , // application identifier, mandatory\n     cli          :  , // client key, mandatory\n     email        :  , // email, mandatory\n     password     :  , // password, mandatory\n}  Responses:  Success  {\n     error        : false,\n     result       : {\n         sessionId      :  , // session ID\n         user           : {}  // Document containing the user\n    }\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n     app :  db8a1b41b8543397a798a181d9891b4c ,\n     cli :  ad6a8fe72ef7dfb9c46958aacb15196a ,\n     email :  useremail@domain.zone ,\n     password :  CorrectHorseStapleButton \n}   https://api.scorocode.ru/api/v1/login", 
            "title": "User authentication"
        }, 
        {
            "location": "/httpapi/httpapi1/#user-deauthentication", 
            "text": "https://api.scorocode.ru/api/v1/logout  Method:  POST  Headers:  Content-Type: application/json  {\n     app          :  , // application identifier, mandatory\n     cli          :  , // client key, mandatory\n     sess         :    // session ID, mandatory\n}  Responses:  Success  {\n     error        : false\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n     app :  db8a1b41b8543397a798a181d9891b4c ,\n     cli :  ad6a8fe72ef7dfb9c46958aacb15196a ,\n     sess :  6rnbKKGvLLdU9Sl9 \n}   https://api.scorocode.ru/api/v1/logout", 
            "title": "User deauthentication"
        }, 
        {
            "location": "/httpapi/httpapi2/", 
            "text": "\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0432 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438.\n\n\nhttps://api.scorocode.ru/api/v1/data/insert\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n         : \n, // \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n    \ncli\n         : \n, // \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0439 \u043a\u043b\u044e\u0447, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n    \nacc\n         : \n, // \u043a\u043b\u044e\u0447 \u0434\u043e\u0441\u0442\u0443\u043f\u0430, \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439, \u0434\u043b\u044f \u043f\u043e\u043b\u043d\u043e\u0433\u043e \u0434\u043e\u0441\u0442\u0443\u043f\u0430 masterKey\n    \nsess\n        : \n, // ID \u0441\u0435\u0441\u0441\u0438\u0438, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439, \u0435\u0441\u043b\u0438 ACLPublic \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043d\u0430 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e == false \u0438 acc != masterKey\n    \ncoll\n        : \n, // \u0438\u043c\u044f \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n    \ndoc\n         : {}, // \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0441 \u043f\u0430\u0440\u0430\u043c\u0438 \u0438\u043c\u044f_\u043f\u043e\u043b\u044f:\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n}\n\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n    \nerror\n       : false\n    \nresult\n      : {} // \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n    \napp\n: \ndb8a1b41b8543397a798a181d9891b4c\n,\n    \ncli\n: \nad6a8fe72ef7dfb9c46958aacb15196a\n,\n    \nacc\n: \n,\n    \nsess\n: \nrYgRe6xL2y8VccMJ\n,\n    \ncoll\n: \nitems\n,\n    \ndoc\n: {\n        \nexampleField\n: \n\u0421\u0435\u0433\u043e\u0434\u043d\u044f 18 \u0438\u044e\u043d\u044f, \u0438 \u044d\u0442\u043e \u0434\u0435\u043d\u044c \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u041c\u044e\u0440\u0438\u044d\u043b! \u041c\u044e\u0440\u0438\u044d\u043b \u0441\u0435\u0439\u0447\u0430\u0441 20. \u0421 \u0434\u043d\u0451\u043c \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f, \u041c\u044e\u0440\u0438\u044d\u043b!\n,\n        \nanotherExampleField\n: \n\u041d\u0435 \u0437\u043d\u0430\u044e, \u0447\u0442\u043e \u0438 \u0441\u043a\u0430\u0437\u0430\u0442\u044c. \u041a\u043e\u0433\u0434\u0430-\u0442\u043e \u044f \u0445\u043e\u0442\u0435\u043b \u0431\u044b\u0442\u044c \u0430\u0441\u0442\u0440\u043e\u0444\u0438\u0437\u0438\u043a\u043e\u043c. \u041a \u0441\u043e\u0436\u0430\u043b\u0435\u043d\u0438\u044e, \u044d\u0442\u043e \u043f\u0440\u0430\u0432\u0434\u0430.\n\n    }\n}\n \nhttps://api.scorocode.ru/api/v1/data/insert\n\n\n\n\n\n\n\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0438\u0437 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438.\n\n\nhttps://api.scorocode.ru/api/v1/data/remove\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n         : \n, // \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n    \ncli\n         : \n, // \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0439 \u043a\u043b\u044e\u0447, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n    \nacc\n         : \n, // \u043a\u043b\u044e\u0447 \u0434\u043e\u0441\u0442\u0443\u043f\u0430, \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439, \u0434\u043b\u044f \u043f\u043e\u043b\u043d\u043e\u0433\u043e \u0434\u043e\u0441\u0442\u0443\u043f\u0430 masterKey\n    \nsess\n        : \n, // ID \u0441\u0435\u0441\u0441\u0438\u0438, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439, \u0435\u0441\u043b\u0438 ACLPublic \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043d\u0430 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e == false \u0438 acc != masterKey\n    \ncoll\n        : \n, // \u0438\u043c\u044f \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n    \nquery\n       : {}, // \u0437\u0430\u043f\u0440\u043e\u0441 \u0441 \u043f\u0430\u0440\u0430\u043c\u0438 \u0438\u043c\u044f_\u043f\u043e\u043b\u044f/\u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440:\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n    \nlimit\n       : int // \u043b\u0438\u043c\u0438\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0443\u0434\u0430\u043b\u044f\u0435\u043c\u044b\u0445 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432, \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439, \u0435\u0441\u043b\u0438 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d, \u0442\u043e \u0443\u0434\u0430\u043b\u044f\u0442\u0441\u044f \u043f\u0435\u0440\u0432\u044b\u0435 1000 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432\n}\n\n\n\n\n\n\n\n\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f\n\n\n\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u043d\u0435 \u0431\u043e\u043b\u0435\u0435 1000 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n    \nerror\n       : false\n    \nresult\n      : {\n        \ncount\n       : int, // \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u0434\u0430\u043b\u0435\u043d\u043d\u044b\u0445 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432\n        \ndocs\n        : [] // \u043c\u0430\u0441\u0441\u0438\u0432 ID \u0443\u0434\u0430\u043b\u0435\u043d\u043d\u044b\u0445 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432\n    }\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n    \napp\n: \ndb8a1b41b8543397a798a181d9891b4c\n,\n    \ncli\n: \nad6a8fe72ef7dfb9c46958aacb15196a\n,\n    \nacc\n: \n,\n    \nsess\n: \nrYgRe6xL2y8VccMJ\n,\n    \ncoll\n: \nitems\n,\n    \nquery\n: {\n        \nexampleField\n: { \n            \n$eq\n: \n\u0421\u0435\u0433\u043e\u0434\u043d\u044f 18 \u0438\u044e\u043d\u044f, \u0438 \u044d\u0442\u043e \u0434\u0435\u043d\u044c \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u041c\u044e\u0440\u0438\u044d\u043b! \u041c\u044e\u0440\u0438\u044d\u043b \u0441\u0435\u0439\u0447\u0430\u0441 20. \u0421 \u0434\u043d\u0451\u043c \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f, \u041c\u044e\u0440\u0438\u044d\u043b!\n\n        }\n    }\n}\n \nhttps://api.scorocode.ru/api/v1/data/remove\n\n\n\n\n\n\n\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u0432 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438.\n\n\nhttps://api.scorocode.ru/api/v1/data/update\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n         : \n, // \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n    \ncli\n         : \n, // \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0439 \u043a\u043b\u044e\u0447, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n    \nacc\n         : \n, // \u043a\u043b\u044e\u0447 \u0434\u043e\u0441\u0442\u0443\u043f\u0430, \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439, \u0434\u043b\u044f \u043f\u043e\u043b\u043d\u043e\u0433\u043e \u0434\u043e\u0441\u0442\u0443\u043f\u0430 masterKey\n    \nsess\n        : \n, // ID \u0441\u0435\u0441\u0441\u0438\u0438, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439, \u0435\u0441\u043b\u0438 ACLPublic \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043d\u0430 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e == false \u0438 acc != masterKey\n    \ncoll\n        : \n, // \u0438\u043c\u044f \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n    \nquery\n       : {}, // \u0437\u0430\u043f\u0440\u043e\u0441 \u0441 \u043f\u0430\u0440\u0430\u043c\u0438 \u0438\u043c\u044f_\u043f\u043e\u043b\u044f/\u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440:\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n    \ndoc\n         : {}, // \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0441 \u043f\u0430\u0440\u0430\u043c\u0438 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440:\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n    \nlimit\n       : int // \u043b\u0438\u043c\u0438\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c\u044b\u0445 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432, \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439, \u0435\u0441\u043b\u0438 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d, \u0442\u043e \u043e\u0431\u043d\u043e\u0432\u044f\u0442\u0441\u044f \u043f\u0435\u0440\u0432\u044b\u0435 1000 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432\n}\n\n\n\n\n\n\n\n\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f\n\n\n\u0418\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u043d\u0435 \u0431\u043e\u043b\u0435\u0435 1000 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n    \nerror\n       : false\n    \nresult\n      : {\n        \ncount\n       : int, // \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u043d\u044b\u0445 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432\n        \ndocs\n        : [] // \u043c\u0430\u0441\u0441\u0438\u0432 ID \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u043d\u044b\u0445 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432\n    }\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n    \napp\n: \ndb8a1b41b8543397a798a181d9891b4c\n,\n    \ncli\n: \nad6a8fe72ef7dfb9c46958aacb15196a\n,\n    \nacc\n: \n,\n    \nsess\n: \nrYgRe6xL2y8VccMJ\n,\n    \ncoll\n: \nitems\n,\n    \nquery\n: {\n        \nexampleField\n: { \n            \n$eq\n: \n\u0421\u0435\u0433\u043e\u0434\u043d\u044f 18 \u0438\u044e\u043d\u044f, \u0438 \u044d\u0442\u043e \u0434\u0435\u043d\u044c \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u041c\u044e\u0440\u0438\u044d\u043b! \u041c\u044e\u0440\u0438\u044d\u043b \u0441\u0435\u0439\u0447\u0430\u0441 20. \u0421 \u0434\u043d\u0451\u043c \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f, \u041c\u044e\u0440\u0438\u044d\u043b!\n\n        }\n    },\n     \ndoc\n: {\n        \n$set\n: {\n            \nexampleField\n: \n\u0421\u0435\u0433\u043e\u0434\u043d\u044f 18 \u0438\u044e\u043d\u044f, \u0438 \u044d\u0442\u043e \u0434\u0435\u043d\u044c \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u041c\u044e\u0440\u0438\u044d\u043b! \u041c\u044e\u0440\u0438\u044d\u043b \u0441\u0435\u0439\u0447\u0430\u0441 21. \u0421 \u0434\u043d\u0451\u043c \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f, \u041c\u044e\u0440\u0438\u044d\u043b!\n\n        }\n    },\n    \nlimit\n: 1\n}\n \nhttps://api.scorocode.ru/api/v1/data/update\n\n\n\n\n\n\n\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043e\u0434\u043d\u043e\u0433\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0432 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u043f\u043e \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0443.\n\n\nhttps://api.scorocode.ru/api/v1/data/updatebyid\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n         : \n, // \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n    \ncli\n         : \n, // \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0439 \u043a\u043b\u044e\u0447, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n    \nacc\n         : \n, // \u043a\u043b\u044e\u0447 \u0434\u043e\u0441\u0442\u0443\u043f\u0430, \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439, \u0434\u043b\u044f \u043f\u043e\u043b\u043d\u043e\u0433\u043e \u0434\u043e\u0441\u0442\u0443\u043f\u0430 masterKey\n    \nsess\n        : \n, // ID \u0441\u0435\u0441\u0441\u0438\u0438, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439, \u0435\u0441\u043b\u0438 ACLPublic \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043d\u0430 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e == false \u0438 acc != masterKey\n    \ncoll\n        : \n, // \u0438\u043c\u044f \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n    \nquery\n       : {}, // \u0437\u0430\u043f\u0440\u043e\u0441 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 \n_id\n : \nlt\u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\ngt\n, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n    \ndoc\n         : {}, // \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0441 \u043f\u0430\u0440\u0430\u043c\u0438 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440:\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n}\n\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n    \nerror\n       : false\n    \nresult\n      : {} // \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n    \napp\n: \ndb8a1b41b8543397a798a181d9891b4c\n,\n    \ncli\n: \nad6a8fe72ef7dfb9c46958aacb15196a\n,\n    \nacc\n: \n,\n    \nsess\n: \nrYgRe6xL2y8VccMJ\n,\n    \ncoll\n: \nitems\n,\n    \nquery\n: {\n        \n_id\n : \njQ4ZwEbBUj\n\n    },\n     \ndoc\n: {\n        \n$set\n: {\n            \nexampleField\n: \n\u0421\u0435\u0433\u043e\u0434\u043d\u044f 18 \u0438\u044e\u043d\u044f, \u0438 \u044d\u0442\u043e \u0434\u0435\u043d\u044c \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u041c\u044e\u0440\u0438\u044d\u043b! \u041c\u044e\u0440\u0438\u044d\u043b \u0441\u0435\u0439\u0447\u0430\u0441 21. \u0421 \u0434\u043d\u0451\u043c \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f, \u041c\u044e\u0440\u0438\u044d\u043b!\n\n        }\n    }\n}\n \nhttps://api.scorocode.ru/api/v1/data/updatebyid\n\n\n\n\n\n\n\u0417\u0430\u043f\u0440\u043e\u0441 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u0438\u0437 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438.\n\n\nhttps://api.scorocode.ru/api/v1/data/find\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n\n\n\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f\n\n\n\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u0435 \u0431\u043e\u043b\u0435\u0435 100 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432\n\n\n\n\n\n\nBSON\n\n\n\u0414\u043b\u044f \u043f\u043e\u0432\u044b\u0448\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0441\u0435\u0440\u0432\u0438\u0441\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 \nfind\n \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 \nbson\n. \u0412\u0441\u0435 SDK \u0441\u0430\u043c\u043e\u0441\u0442\u043e\u044f\u0442\u0435\u043b\u044c\u043d\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u044e\u0442 \u0434\u0435\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 bson \u0432 json.\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n    \nerror\n       : false\n    \nresult\n      : string // bson \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0437\u0430\u043f\u0440\u043e\u0441\u0430, \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0432 base64\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n    \napp\n: \ndb8a1b41b8543397a798a181d9891b4c\n,\n    \ncli\n: \nad6a8fe72ef7dfb9c46958aacb15196a\n,\n    \nacc\n: \n,\n    \nsess\n: \nrYgRe6xL2y8VccMJ\n,\n    \ncoll\n: \nitems\n,\n    \nquery\n: {\n        \nexampleField\n: { \n            \n$eq\n: \n\u0421\u0435\u0433\u043e\u0434\u043d\u044f 18 \u0438\u044e\u043d\u044f, \u0438 \u044d\u0442\u043e \u0434\u0435\u043d\u044c \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u041c\u044e\u0440\u0438\u044d\u043b! \u041c\u044e\u0440\u0438\u044d\u043b \u0441\u0435\u0439\u0447\u0430\u0441 20. \u0421 \u0434\u043d\u0451\u043c \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f, \u041c\u044e\u0440\u0438\u044d\u043b!\n\n        }\n    },\n    \nsort\n: {\n        \nupdatedAt\n: 1\n    }, \n    \nfields\n: [\nupdatedAt\n, \nexampleField\n, \nanotherExampleField\n],\n    \nlimit\n: 10,\n    \nskip\n: 20\n}\n \nhttps://api.scorocode.ru/api/v1/data/find\n\n\n\n\n\n\n\u0417\u0430\u043f\u0440\u043e\u0441 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u0438\u0437 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438.\n\n\nhttps://api.scorocode.ru/api/v1/data/count\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n         : \n, // \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n    \ncli\n         : \n, // \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0439 \u043a\u043b\u044e\u0447, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n    \nacc\n         : \n, // \u043a\u043b\u044e\u0447 \u0434\u043e\u0441\u0442\u0443\u043f\u0430, \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439, \u0434\u043b\u044f \u043f\u043e\u043b\u043d\u043e\u0433\u043e \u0434\u043e\u0441\u0442\u0443\u043f\u0430 masterKey\n    \nsess\n        : \n, // ID \u0441\u0435\u0441\u0441\u0438\u0438, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439, \u0435\u0441\u043b\u0438 ACLPublic \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043d\u0430 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e == false \u0438 acc != masterKey\n    \ncoll\n        : \n, // \u0438\u043c\u044f \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n    \nquery\n       : {}, // \u0437\u0430\u043f\u0440\u043e\u0441 \u0441 \u043f\u0430\u0440\u0430\u043c\u0438 \u0438\u043c\u044f_\u043f\u043e\u043b\u044f/\u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440:\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n}\n\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n    \nerror\n       : false\n    \nresult\n      : int // \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n    \napp\n: \ndb8a1b41b8543397a798a181d9891b4c\n,\n    \ncli\n: \nad6a8fe72ef7dfb9c46958aacb15196a\n,\n    \nacc\n: \n,\n    \nsess\n: \nrYgRe6xL2y8VccMJ\n,\n    \ncoll\n: \nitems\n,\n    \nquery\n: {\n        \nexampleField\n: { \n            \n$eq\n: \n\u0421\u0435\u0433\u043e\u0434\u043d\u044f 18 \u0438\u044e\u043d\u044f, \u0438 \u044d\u0442\u043e \u0434\u0435\u043d\u044c \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u041c\u044e\u0440\u0438\u044d\u043b! \u041c\u044e\u0440\u0438\u044d\u043b \u0441\u0435\u0439\u0447\u0430\u0441 20. \u0421 \u0434\u043d\u0451\u043c \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f, \u041c\u044e\u0440\u0438\u044d\u043b!\n\n        }\n    }\n}\n \nhttps://api.scorocode.ru/api/v1/data/count", 
            "title": "Data"
        }, 
        {
            "location": "/httpapi/httpapi2/#_1", 
            "text": "https://api.scorocode.ru/api/v1/data/insert  Method:  POST  Headers:  Content-Type: application/json  {\n     app          :  , // \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n     cli          :  , // \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0439 \u043a\u043b\u044e\u0447, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n     acc          :  , // \u043a\u043b\u044e\u0447 \u0434\u043e\u0441\u0442\u0443\u043f\u0430, \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439, \u0434\u043b\u044f \u043f\u043e\u043b\u043d\u043e\u0433\u043e \u0434\u043e\u0441\u0442\u0443\u043f\u0430 masterKey\n     sess         :  , // ID \u0441\u0435\u0441\u0441\u0438\u0438, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439, \u0435\u0441\u043b\u0438 ACLPublic \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043d\u0430 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e == false \u0438 acc != masterKey\n     coll         :  , // \u0438\u043c\u044f \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n     doc          : {}, // \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0441 \u043f\u0430\u0440\u0430\u043c\u0438 \u0438\u043c\u044f_\u043f\u043e\u043b\u044f:\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n}  Responses:  Success  {\n     error        : false\n     result       : {} // \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n     app :  db8a1b41b8543397a798a181d9891b4c ,\n     cli :  ad6a8fe72ef7dfb9c46958aacb15196a ,\n     acc :  ,\n     sess :  rYgRe6xL2y8VccMJ ,\n     coll :  items ,\n     doc : {\n         exampleField :  \u0421\u0435\u0433\u043e\u0434\u043d\u044f 18 \u0438\u044e\u043d\u044f, \u0438 \u044d\u0442\u043e \u0434\u0435\u043d\u044c \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u041c\u044e\u0440\u0438\u044d\u043b! \u041c\u044e\u0440\u0438\u044d\u043b \u0441\u0435\u0439\u0447\u0430\u0441 20. \u0421 \u0434\u043d\u0451\u043c \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f, \u041c\u044e\u0440\u0438\u044d\u043b! ,\n         anotherExampleField :  \u041d\u0435 \u0437\u043d\u0430\u044e, \u0447\u0442\u043e \u0438 \u0441\u043a\u0430\u0437\u0430\u0442\u044c. \u041a\u043e\u0433\u0434\u0430-\u0442\u043e \u044f \u0445\u043e\u0442\u0435\u043b \u0431\u044b\u0442\u044c \u0430\u0441\u0442\u0440\u043e\u0444\u0438\u0437\u0438\u043a\u043e\u043c. \u041a \u0441\u043e\u0436\u0430\u043b\u0435\u043d\u0438\u044e, \u044d\u0442\u043e \u043f\u0440\u0430\u0432\u0434\u0430. \n    }\n}   https://api.scorocode.ru/api/v1/data/insert", 
            "title": "\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0432 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438."
        }, 
        {
            "location": "/httpapi/httpapi2/#_2", 
            "text": "https://api.scorocode.ru/api/v1/data/remove  Method:  POST  Headers:  Content-Type: application/json  {\n     app          :  , // \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n     cli          :  , // \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0439 \u043a\u043b\u044e\u0447, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n     acc          :  , // \u043a\u043b\u044e\u0447 \u0434\u043e\u0441\u0442\u0443\u043f\u0430, \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439, \u0434\u043b\u044f \u043f\u043e\u043b\u043d\u043e\u0433\u043e \u0434\u043e\u0441\u0442\u0443\u043f\u0430 masterKey\n     sess         :  , // ID \u0441\u0435\u0441\u0441\u0438\u0438, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439, \u0435\u0441\u043b\u0438 ACLPublic \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043d\u0430 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e == false \u0438 acc != masterKey\n     coll         :  , // \u0438\u043c\u044f \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n     query        : {}, // \u0437\u0430\u043f\u0440\u043e\u0441 \u0441 \u043f\u0430\u0440\u0430\u043c\u0438 \u0438\u043c\u044f_\u043f\u043e\u043b\u044f/\u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440:\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n     limit        : int // \u043b\u0438\u043c\u0438\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0443\u0434\u0430\u043b\u044f\u0435\u043c\u044b\u0445 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432, \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439, \u0435\u0441\u043b\u0438 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d, \u0442\u043e \u0443\u0434\u0430\u043b\u044f\u0442\u0441\u044f \u043f\u0435\u0440\u0432\u044b\u0435 1000 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432\n}   \u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f  \u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u043d\u0435 \u0431\u043e\u043b\u0435\u0435 1000 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432   Responses:  Success  {\n     error        : false\n     result       : {\n         count        : int, // \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u0434\u0430\u043b\u0435\u043d\u043d\u044b\u0445 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432\n         docs         : [] // \u043c\u0430\u0441\u0441\u0438\u0432 ID \u0443\u0434\u0430\u043b\u0435\u043d\u043d\u044b\u0445 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432\n    }\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n     app :  db8a1b41b8543397a798a181d9891b4c ,\n     cli :  ad6a8fe72ef7dfb9c46958aacb15196a ,\n     acc :  ,\n     sess :  rYgRe6xL2y8VccMJ ,\n     coll :  items ,\n     query : {\n         exampleField : { \n             $eq :  \u0421\u0435\u0433\u043e\u0434\u043d\u044f 18 \u0438\u044e\u043d\u044f, \u0438 \u044d\u0442\u043e \u0434\u0435\u043d\u044c \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u041c\u044e\u0440\u0438\u044d\u043b! \u041c\u044e\u0440\u0438\u044d\u043b \u0441\u0435\u0439\u0447\u0430\u0441 20. \u0421 \u0434\u043d\u0451\u043c \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f, \u041c\u044e\u0440\u0438\u044d\u043b! \n        }\n    }\n}   https://api.scorocode.ru/api/v1/data/remove", 
            "title": "\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0438\u0437 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438."
        }, 
        {
            "location": "/httpapi/httpapi2/#_3", 
            "text": "https://api.scorocode.ru/api/v1/data/update  Method:  POST  Headers:  Content-Type: application/json  {\n     app          :  , // \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n     cli          :  , // \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0439 \u043a\u043b\u044e\u0447, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n     acc          :  , // \u043a\u043b\u044e\u0447 \u0434\u043e\u0441\u0442\u0443\u043f\u0430, \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439, \u0434\u043b\u044f \u043f\u043e\u043b\u043d\u043e\u0433\u043e \u0434\u043e\u0441\u0442\u0443\u043f\u0430 masterKey\n     sess         :  , // ID \u0441\u0435\u0441\u0441\u0438\u0438, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439, \u0435\u0441\u043b\u0438 ACLPublic \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043d\u0430 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e == false \u0438 acc != masterKey\n     coll         :  , // \u0438\u043c\u044f \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n     query        : {}, // \u0437\u0430\u043f\u0440\u043e\u0441 \u0441 \u043f\u0430\u0440\u0430\u043c\u0438 \u0438\u043c\u044f_\u043f\u043e\u043b\u044f/\u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440:\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n     doc          : {}, // \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0441 \u043f\u0430\u0440\u0430\u043c\u0438 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440:\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n     limit        : int // \u043b\u0438\u043c\u0438\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c\u044b\u0445 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432, \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439, \u0435\u0441\u043b\u0438 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d, \u0442\u043e \u043e\u0431\u043d\u043e\u0432\u044f\u0442\u0441\u044f \u043f\u0435\u0440\u0432\u044b\u0435 1000 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432\n}   \u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f  \u0418\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u043d\u0435 \u0431\u043e\u043b\u0435\u0435 1000 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432   Responses:  Success  {\n     error        : false\n     result       : {\n         count        : int, // \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u043d\u044b\u0445 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432\n         docs         : [] // \u043c\u0430\u0441\u0441\u0438\u0432 ID \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u043d\u044b\u0445 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432\n    }\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n     app :  db8a1b41b8543397a798a181d9891b4c ,\n     cli :  ad6a8fe72ef7dfb9c46958aacb15196a ,\n     acc :  ,\n     sess :  rYgRe6xL2y8VccMJ ,\n     coll :  items ,\n     query : {\n         exampleField : { \n             $eq :  \u0421\u0435\u0433\u043e\u0434\u043d\u044f 18 \u0438\u044e\u043d\u044f, \u0438 \u044d\u0442\u043e \u0434\u0435\u043d\u044c \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u041c\u044e\u0440\u0438\u044d\u043b! \u041c\u044e\u0440\u0438\u044d\u043b \u0441\u0435\u0439\u0447\u0430\u0441 20. \u0421 \u0434\u043d\u0451\u043c \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f, \u041c\u044e\u0440\u0438\u044d\u043b! \n        }\n    },\n      doc : {\n         $set : {\n             exampleField :  \u0421\u0435\u0433\u043e\u0434\u043d\u044f 18 \u0438\u044e\u043d\u044f, \u0438 \u044d\u0442\u043e \u0434\u0435\u043d\u044c \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u041c\u044e\u0440\u0438\u044d\u043b! \u041c\u044e\u0440\u0438\u044d\u043b \u0441\u0435\u0439\u0447\u0430\u0441 21. \u0421 \u0434\u043d\u0451\u043c \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f, \u041c\u044e\u0440\u0438\u044d\u043b! \n        }\n    },\n     limit : 1\n}   https://api.scorocode.ru/api/v1/data/update", 
            "title": "\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u0432 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438."
        }, 
        {
            "location": "/httpapi/httpapi2/#_4", 
            "text": "https://api.scorocode.ru/api/v1/data/updatebyid  Method:  POST  Headers:  Content-Type: application/json  {\n     app          :  , // \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n     cli          :  , // \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0439 \u043a\u043b\u044e\u0447, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n     acc          :  , // \u043a\u043b\u044e\u0447 \u0434\u043e\u0441\u0442\u0443\u043f\u0430, \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439, \u0434\u043b\u044f \u043f\u043e\u043b\u043d\u043e\u0433\u043e \u0434\u043e\u0441\u0442\u0443\u043f\u0430 masterKey\n     sess         :  , // ID \u0441\u0435\u0441\u0441\u0438\u0438, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439, \u0435\u0441\u043b\u0438 ACLPublic \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043d\u0430 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e == false \u0438 acc != masterKey\n     coll         :  , // \u0438\u043c\u044f \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n     query        : {}, // \u0437\u0430\u043f\u0440\u043e\u0441 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435  _id  :  lt\u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 gt , \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n     doc          : {}, // \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0441 \u043f\u0430\u0440\u0430\u043c\u0438 \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440:\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n}  Responses:  Success  {\n     error        : false\n     result       : {} // \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n     app :  db8a1b41b8543397a798a181d9891b4c ,\n     cli :  ad6a8fe72ef7dfb9c46958aacb15196a ,\n     acc :  ,\n     sess :  rYgRe6xL2y8VccMJ ,\n     coll :  items ,\n     query : {\n         _id  :  jQ4ZwEbBUj \n    },\n      doc : {\n         $set : {\n             exampleField :  \u0421\u0435\u0433\u043e\u0434\u043d\u044f 18 \u0438\u044e\u043d\u044f, \u0438 \u044d\u0442\u043e \u0434\u0435\u043d\u044c \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u041c\u044e\u0440\u0438\u044d\u043b! \u041c\u044e\u0440\u0438\u044d\u043b \u0441\u0435\u0439\u0447\u0430\u0441 21. \u0421 \u0434\u043d\u0451\u043c \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f, \u041c\u044e\u0440\u0438\u044d\u043b! \n        }\n    }\n}   https://api.scorocode.ru/api/v1/data/updatebyid", 
            "title": "\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043e\u0434\u043d\u043e\u0433\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0432 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u043f\u043e \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0443."
        }, 
        {
            "location": "/httpapi/httpapi2/#_5", 
            "text": "https://api.scorocode.ru/api/v1/data/find  Method:  POST  Headers:  Content-Type: application/json   \u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f  \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u0435 \u0431\u043e\u043b\u0435\u0435 100 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432    BSON  \u0414\u043b\u044f \u043f\u043e\u0432\u044b\u0448\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0441\u0435\u0440\u0432\u0438\u0441\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u043c\u0435\u0442\u043e\u0434\u0430  find  \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435  bson . \u0412\u0441\u0435 SDK \u0441\u0430\u043c\u043e\u0441\u0442\u043e\u044f\u0442\u0435\u043b\u044c\u043d\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u044e\u0442 \u0434\u0435\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 bson \u0432 json.   Responses:  Success  {\n     error        : false\n     result       : string // bson \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0437\u0430\u043f\u0440\u043e\u0441\u0430, \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0432 base64\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n     app :  db8a1b41b8543397a798a181d9891b4c ,\n     cli :  ad6a8fe72ef7dfb9c46958aacb15196a ,\n     acc :  ,\n     sess :  rYgRe6xL2y8VccMJ ,\n     coll :  items ,\n     query : {\n         exampleField : { \n             $eq :  \u0421\u0435\u0433\u043e\u0434\u043d\u044f 18 \u0438\u044e\u043d\u044f, \u0438 \u044d\u0442\u043e \u0434\u0435\u043d\u044c \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u041c\u044e\u0440\u0438\u044d\u043b! \u041c\u044e\u0440\u0438\u044d\u043b \u0441\u0435\u0439\u0447\u0430\u0441 20. \u0421 \u0434\u043d\u0451\u043c \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f, \u041c\u044e\u0440\u0438\u044d\u043b! \n        }\n    },\n     sort : {\n         updatedAt : 1\n    }, \n     fields : [ updatedAt ,  exampleField ,  anotherExampleField ],\n     limit : 10,\n     skip : 20\n}   https://api.scorocode.ru/api/v1/data/find", 
            "title": "\u0417\u0430\u043f\u0440\u043e\u0441 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u0438\u0437 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438."
        }, 
        {
            "location": "/httpapi/httpapi2/#_6", 
            "text": "https://api.scorocode.ru/api/v1/data/count  Method:  POST  Headers:  Content-Type: application/json  {\n     app          :  , // \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n     cli          :  , // \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0439 \u043a\u043b\u044e\u0447, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n     acc          :  , // \u043a\u043b\u044e\u0447 \u0434\u043e\u0441\u0442\u0443\u043f\u0430, \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439, \u0434\u043b\u044f \u043f\u043e\u043b\u043d\u043e\u0433\u043e \u0434\u043e\u0441\u0442\u0443\u043f\u0430 masterKey\n     sess         :  , // ID \u0441\u0435\u0441\u0441\u0438\u0438, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439, \u0435\u0441\u043b\u0438 ACLPublic \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043d\u0430 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e == false \u0438 acc != masterKey\n     coll         :  , // \u0438\u043c\u044f \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n     query        : {}, // \u0437\u0430\u043f\u0440\u043e\u0441 \u0441 \u043f\u0430\u0440\u0430\u043c\u0438 \u0438\u043c\u044f_\u043f\u043e\u043b\u044f/\u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440:\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n}  Responses:  Success  {\n     error        : false\n     result       : int // \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n     app :  db8a1b41b8543397a798a181d9891b4c ,\n     cli :  ad6a8fe72ef7dfb9c46958aacb15196a ,\n     acc :  ,\n     sess :  rYgRe6xL2y8VccMJ ,\n     coll :  items ,\n     query : {\n         exampleField : { \n             $eq :  \u0421\u0435\u0433\u043e\u0434\u043d\u044f 18 \u0438\u044e\u043d\u044f, \u0438 \u044d\u0442\u043e \u0434\u0435\u043d\u044c \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u041c\u044e\u0440\u0438\u044d\u043b! \u041c\u044e\u0440\u0438\u044d\u043b \u0441\u0435\u0439\u0447\u0430\u0441 20. \u0421 \u0434\u043d\u0451\u043c \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f, \u041c\u044e\u0440\u0438\u044d\u043b! \n        }\n    }\n}   https://api.scorocode.ru/api/v1/data/count", 
            "title": "\u0417\u0430\u043f\u0440\u043e\u0441 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u0438\u0437 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438."
        }, 
        {
            "location": "/httpapi/httpapi3/", 
            "text": "Uploading a file to storage.\n\n\nhttps://api.scorocode.ru/api/v1/upload\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n         : \n, // application identifier, mandatory\n    \ncli\n         : \n, // client key, mandatory\n    \nacc\n         : \n, // access key, mandatory, fileKey or masterKey for full access\n    \nsess\n        : \n, // session ID, mandatory, if acc != masterKey\n    \ncoll\n        : \n, // collection name, mandatory\n    \ndocId\n       : \n, // document ID, mandatory\n    \nfield\n       : \n, // field name, mandatory\n    \nfile\n        : \n, // file name, mandatory\n    \ncontent\n     : \n  // file body, base64 encoding, mandatory\n}\n\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n    \nerror\n       : false\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n    \napp\n: \ndb8a1b41b8543397a798a181d9891b4c\n,\n    \ncli\n: \nad6a8fe72ef7dfb9c46958aacb15196a\n,\n    \nacc\n: \n8c23d74f447f63ce495cc8fd9ee4d543\n,\n    \nsess\n: \nrYgRe6xL2y8VccMJ\n,\n    \ncoll\n: \nitems\n,\n    \ndocId\n: \nY3bET236FX\n,\n    \nfield\n: \nattachment\n,\n    \nfile\n: \nfile.txt\n,\n    \ncontent\n: \nVEhJUyBJUyBGSUxFLUUtRS1FLUUtRS1FIQ==\n\n}\n \nhttps://api.scorocode.ru/api/v1/upload\n\n\n\n\n\n\nRetrieve file.\n\n\nhttps://api.scorocode.ru/api/v1/getfile/{app}/{coll}/{field}/{docId}/{file}\n\n\nMethod: \nGET\n\n\nQuery:\n\n\nhttps://api.scorocode.ru/api/v1/getfile/{app}/{coll}/{field}/{docId}/{file}\n\n\n\n\n\n, where\n\n\n    {app}     - application identifier, mandatory\n    {coll}    - collection name, mandatory\n    {field}   - field name, mandatory\n    {docId}   - document identifier, mandatory\n    {file}    - file name, mandatory\n\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n    Status: 302 (Redirect to file)\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X GET -H \nContent-Type: application/json\n \nhttps://api.scorocode.ru/api/v1/getfile/db8a1b41b8543397a798a181d9891b4c/items/attachment/Y3bET236FX/file.txt\n\n\n\n\n\n\nFile removal.\n\n\nhttps://api.scorocode.ru/api/v1/deletefile\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n         : \n, // application identifier, mandatory\n    \ncli\n         : \n, // client key, mandatory\n    \nacc\n         : \n, // access key, mandatory, fileKey or masterKey for full access\n    \nsess\n        : \n, // session ID, mandatory, if acc != masterKey\n    \ncoll\n        : \n, // collection name, mandatory\n    \ndocId\n       : \n, // document ID, mandatory\n    \nfield\n       : \n, // field name, mandatory\n    \nfile\n        : \n  // file name, mandatory\n}\n\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n    \nerror\n       : false\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n    \napp\n: \ndb8a1b41b8543397a798a181d9891b4c\n,\n    \ncli\n: \nad6a8fe72ef7dfb9c46958aacb15196a\n,\n    \nacc\n: \n8c23d74f447f63ce495cc8fd9ee4d543\n,\n    \nsess\n: \nrYgRe6xL2y8VccMJ\n,\n    \ncoll\n: \nitems\n,\n    \ndocId\n: \nY3bET236FX\n,\n    \nfield\n: \nattachment\n,\n    \nfile\n: \nfile.txt\n\n}\n \nhttps://api.scorocode.ru/api/v1/deletefile", 
            "title": "Files"
        }, 
        {
            "location": "/httpapi/httpapi3/#uploading-a-file-to-storage", 
            "text": "https://api.scorocode.ru/api/v1/upload  Method:  POST  Headers:  Content-Type: application/json  {\n     app          :  , // application identifier, mandatory\n     cli          :  , // client key, mandatory\n     acc          :  , // access key, mandatory, fileKey or masterKey for full access\n     sess         :  , // session ID, mandatory, if acc != masterKey\n     coll         :  , // collection name, mandatory\n     docId        :  , // document ID, mandatory\n     field        :  , // field name, mandatory\n     file         :  , // file name, mandatory\n     content      :    // file body, base64 encoding, mandatory\n}  Responses:  Success  {\n     error        : false\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n     app :  db8a1b41b8543397a798a181d9891b4c ,\n     cli :  ad6a8fe72ef7dfb9c46958aacb15196a ,\n     acc :  8c23d74f447f63ce495cc8fd9ee4d543 ,\n     sess :  rYgRe6xL2y8VccMJ ,\n     coll :  items ,\n     docId :  Y3bET236FX ,\n     field :  attachment ,\n     file :  file.txt ,\n     content :  VEhJUyBJUyBGSUxFLUUtRS1FLUUtRS1FIQ== \n}   https://api.scorocode.ru/api/v1/upload", 
            "title": "Uploading a file to storage."
        }, 
        {
            "location": "/httpapi/httpapi3/#retrieve-file", 
            "text": "https://api.scorocode.ru/api/v1/getfile/{app}/{coll}/{field}/{docId}/{file}  Method:  GET  Query:  https://api.scorocode.ru/api/v1/getfile/{app}/{coll}/{field}/{docId}/{file}  , where      {app}     - application identifier, mandatory\n    {coll}    - collection name, mandatory\n    {field}   - field name, mandatory\n    {docId}   - document identifier, mandatory\n    {file}    - file name, mandatory  Responses:  Success      Status: 302 (Redirect to file)  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X GET -H  Content-Type: application/json   https://api.scorocode.ru/api/v1/getfile/db8a1b41b8543397a798a181d9891b4c/items/attachment/Y3bET236FX/file.txt", 
            "title": "Retrieve file."
        }, 
        {
            "location": "/httpapi/httpapi3/#file-removal", 
            "text": "https://api.scorocode.ru/api/v1/deletefile  Method:  POST  Headers:  Content-Type: application/json  {\n     app          :  , // application identifier, mandatory\n     cli          :  , // client key, mandatory\n     acc          :  , // access key, mandatory, fileKey or masterKey for full access\n     sess         :  , // session ID, mandatory, if acc != masterKey\n     coll         :  , // collection name, mandatory\n     docId        :  , // document ID, mandatory\n     field        :  , // field name, mandatory\n     file         :    // file name, mandatory\n}  Responses:  Success  {\n     error        : false\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n     app :  db8a1b41b8543397a798a181d9891b4c ,\n     cli :  ad6a8fe72ef7dfb9c46958aacb15196a ,\n     acc :  8c23d74f447f63ce495cc8fd9ee4d543 ,\n     sess :  rYgRe6xL2y8VccMJ ,\n     coll :  items ,\n     docId :  Y3bET236FX ,\n     field :  attachment ,\n     file :  file.txt \n}   https://api.scorocode.ru/api/v1/deletefile", 
            "title": "File removal."
        }, 
        {
            "location": "/httpapi/httpapi4/", 
            "text": "Sending push notifications to devices.\n\n\nhttps://api.scorocode.ru/api/v1/sendpush\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n         : \n,     // application identifier, mandatory\n    \ncli\n         : \n,     // client key, mandatory\n    \nacc\n         : \n,     // access key, mandatory, messageKey or masterKey for full access\n    \nsess\n        : \n,     // session ID, mandatory, if acc != masterKey\n    \ncoll\n        : \n,     // collection name, mandatory, \nusers\n, \nroles\n or \ndevices\n\n    \nquery\n       : {},     // devices collection query for sampling addressees with field_name/operator:value pairs, optional\n    \nmsg\n         : {\n        \ntext\n        : \n, // Email text\n        \ndata\n        : { } // object with transferred data\n    }\n}\n\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n    \ncount\n       : int       //\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \n    \nerror\n       : false\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n    \napp\n: \ndb8a1b41b8543397a798a181d9891b4c\n,\n    \ncli\n: \nad6a8fe72ef7dfb9c46958aacb15196a\n,\n    \nacc\n: \nfb33e473e08515ff6b57ef6f59392e5d\n,\n    \nsess\n: \nrYgRe6xL2y8VccMJ\n,\n    \ncoll\n: \ndevices\n,\n    \nquery\n: {\n        \nuserId\n: {\n            \n$exists\n: true\n        }\n    },\n    \nmsg\n: {\n        \ntext\n: \nPUSH text\n\n    }\n}\n \nhttps://api.scorocode.ru/api/v1/sendpush\n\n\n\n\n\n\n\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 sms \u043d\u0430 \u043d\u043e\u043c\u0435\u0440\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.\n\n\nhttps://api.scorocode.ru/api/v1/sendsms\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n         : \n,     // application identifier, mandatory\n    \ncli\n         : \n,     // client key, mandatory\n    \nacc\n         : \n,     // access key, mandatory, messageKey or masterKey for full access\n    \nsess\n        : \n,     // session ID, mandatory, if acc != masterKey\n    \ncoll\n        : \n,     // collection name, mandatory, \nusers\n or \nroles\n\n    \nquery\n       : {},     // users collection query for sampling the addressees with field_name/operator:value pairs, optional\n    \nmsg\n         : {\n        \ntext\n        : \n, // sms text\n    }\n}\n\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n    \ncount\n       : int      \n    \nerror\n       : false\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n    \napp\n: \ndb8a1b41b8543397a798a181d9891b4c\n,\n    \ncli\n: \nad6a8fe72ef7dfb9c46958aacb15196a\n,\n    \nacc\n: \nfb33e473e08515ff6b57ef6f59392e5d\n,\n    \nsess\n: \nrYgRe6xL2y8VccMJ\n,\n    \ncoll\n: \nusers\n,\n    \nquery\n: {\n        \nphone\n: {\n            \n$exists\n: true\n        }\n    },\n    \nmsg\n: {\n        \ntext\n: \nSMS text\n\n    }\n}\n \nhttps://api.scorocode.ru/api/v1/sendsms", 
            "title": "Messages"
        }, 
        {
            "location": "/httpapi/httpapi4/#sending-push-notifications-to-devices", 
            "text": "https://api.scorocode.ru/api/v1/sendpush  Method:  POST  Headers:  Content-Type: application/json  {\n     app          :  ,     // application identifier, mandatory\n     cli          :  ,     // client key, mandatory\n     acc          :  ,     // access key, mandatory, messageKey or masterKey for full access\n     sess         :  ,     // session ID, mandatory, if acc != masterKey\n     coll         :  ,     // collection name, mandatory,  users ,  roles  or  devices \n     query        : {},     // devices collection query for sampling addressees with field_name/operator:value pairs, optional\n     msg          : {\n         text         :  , // Email text\n         data         : { } // object with transferred data\n    }\n}  Responses:  Success  {\n     count        : int       //\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \n     error        : false\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n     app :  db8a1b41b8543397a798a181d9891b4c ,\n     cli :  ad6a8fe72ef7dfb9c46958aacb15196a ,\n     acc :  fb33e473e08515ff6b57ef6f59392e5d ,\n     sess :  rYgRe6xL2y8VccMJ ,\n     coll :  devices ,\n     query : {\n         userId : {\n             $exists : true\n        }\n    },\n     msg : {\n         text :  PUSH text \n    }\n}   https://api.scorocode.ru/api/v1/sendpush", 
            "title": "Sending push notifications to devices."
        }, 
        {
            "location": "/httpapi/httpapi4/#sms", 
            "text": "https://api.scorocode.ru/api/v1/sendsms  Method:  POST  Headers:  Content-Type: application/json  {\n     app          :  ,     // application identifier, mandatory\n     cli          :  ,     // client key, mandatory\n     acc          :  ,     // access key, mandatory, messageKey or masterKey for full access\n     sess         :  ,     // session ID, mandatory, if acc != masterKey\n     coll         :  ,     // collection name, mandatory,  users  or  roles \n     query        : {},     // users collection query for sampling the addressees with field_name/operator:value pairs, optional\n     msg          : {\n         text         :  , // sms text\n    }\n}  Responses:  Success  {\n     count        : int      \n     error        : false\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n     app :  db8a1b41b8543397a798a181d9891b4c ,\n     cli :  ad6a8fe72ef7dfb9c46958aacb15196a ,\n     acc :  fb33e473e08515ff6b57ef6f59392e5d ,\n     sess :  rYgRe6xL2y8VccMJ ,\n     coll :  users ,\n     query : {\n         phone : {\n             $exists : true\n        }\n    },\n     msg : {\n         text :  SMS text \n    }\n}   https://api.scorocode.ru/api/v1/sendsms", 
            "title": "\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 sms \u043d\u0430 \u043d\u043e\u043c\u0435\u0440\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439."
        }, 
        {
            "location": "/httpapi/httpapi5/", 
            "text": "Sending a task to execute the server-side script.\n\n\nhttps://api.scorocode.ru/api/v1/scripts\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n         : \n, // application identifier, mandatory\n    \ncli\n         : \n, // client key, mandatory\n    \nacc\n         : \n, // access key, mandatory, scriptKey or masterKey for full access\n    \nsess\n        : \n, // session ID, mandatory, if acc != masterKey\n    \nscript\n      : \n, // script ID, mandatory\n    \npool\n        : {}  // data pool for transferring to a script context, optional\n}\n\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n    \nerror\n       : false\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n    \napp\n: \ndb8a1b41b8543397a798a181d9891b4c\n,\n    \ncli\n: \nad6a8fe72ef7dfb9c46958aacb15196a\n,\n    \nacc\n: \n28f06b89b62165c33de55265166d8781\n,\n    \nsess\n: \n6rnbKKGvLLdU9Sl9\n\n    \nscript\n: \n57484fb91c5666544db25675\n,\n    \npool\n: {\n        \ncollname\n: \nitems\n,\n        \nkey\n: \nexampleField\n,\n        \nval\n: \nToday is June, 18. It\ns Muriel\ns birthday! Muriel is now 20 years old. Happy Birthday, Muriel!\n\n    }\n}\n \nhttps://api.scorocode.ru/api/v1/scripts", 
            "title": "Scripts"
        }, 
        {
            "location": "/httpapi/httpapi5/#sending-a-task-to-execute-the-server-side-script", 
            "text": "https://api.scorocode.ru/api/v1/scripts  Method:  POST  Headers:  Content-Type: application/json  {\n     app          :  , // application identifier, mandatory\n     cli          :  , // client key, mandatory\n     acc          :  , // access key, mandatory, scriptKey or masterKey for full access\n     sess         :  , // session ID, mandatory, if acc != masterKey\n     script       :  , // script ID, mandatory\n     pool         : {}  // data pool for transferring to a script context, optional\n}  Responses:  Success  {\n     error        : false\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n     app :  db8a1b41b8543397a798a181d9891b4c ,\n     cli :  ad6a8fe72ef7dfb9c46958aacb15196a ,\n     acc :  28f06b89b62165c33de55265166d8781 ,\n     sess :  6rnbKKGvLLdU9Sl9 \n     script :  57484fb91c5666544db25675 ,\n     pool : {\n         collname :  items ,\n         key :  exampleField ,\n         val :  Today is June, 18. It s Muriel s birthday! Muriel is now 20 years old. Happy Birthday, Muriel! \n    }\n}   https://api.scorocode.ru/api/v1/scripts", 
            "title": "Sending a task to execute the server-side script."
        }, 
        {
            "location": "/httpapi/httpapi6/", 
            "text": "Application statistics retrieval.\n\n\nhttps://api.scorocode.ru/api/v1/stat\n\n\nMethod: \nPOST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n{\n    \napp\n         : \n, // application identifier, mandatory\n    \ncli\n         : \n, // client key, mandatory\n    \nacc\n         : \n  // access key, mandatory, masterKey only\n}\n\n\n\n\n\nResponses:\n\n\nSuccess\n\n\n{\n    \nerror\n       : false\n    \nresults\n     : {\n        \ndataSize\n    : int, // Application data size, bytes\n        \nindexSize\n   : int, // \nSize\n of application indexes, bytes\n        \nfilesSize\n   : int  // Application file size, bytes\n    }\n}\n\n\n\n\n\nError\n\n\n{\n    \nerror\n       : true,\n    \nerrCode\n     : 4XX/5XX, // Error code\n    \nerrMsg\n      : \nError text\n\n}\n\n\n\n\n\ncURL example\n\n\ncurl -X POST -H \nContent-Type: application/json\n -d \n{\n    \napp\n: \ndb8a1b41b8543397a798a181d9891b4c\n,\n    \ncli\n: \nad6a8fe72ef7dfb9c46958aacb15196a\n,\n    \nacc\n: \n2aceceec7d2e96b1121ec399f5afa101\n\n}\n \nhttps://api.scorocode.ru/api/v1/stat", 
            "title": "Stats"
        }, 
        {
            "location": "/httpapi/httpapi6/#application-statistics-retrieval", 
            "text": "https://api.scorocode.ru/api/v1/stat  Method:  POST  Headers:  Content-Type: application/json  {\n     app          :  , // application identifier, mandatory\n     cli          :  , // client key, mandatory\n     acc          :    // access key, mandatory, masterKey only\n}  Responses:  Success  {\n     error        : false\n     results      : {\n         dataSize     : int, // Application data size, bytes\n         indexSize    : int, //  Size  of application indexes, bytes\n         filesSize    : int  // Application file size, bytes\n    }\n}  Error  {\n     error        : true,\n     errCode      : 4XX/5XX, // Error code\n     errMsg       :  Error text \n}  cURL example  curl -X POST -H  Content-Type: application/json  -d  {\n     app :  db8a1b41b8543397a798a181d9891b4c ,\n     cli :  ad6a8fe72ef7dfb9c46958aacb15196a ,\n     acc :  2aceceec7d2e96b1121ec399f5afa101 \n}   https://api.scorocode.ru/api/v1/stat", 
            "title": "Application statistics retrieval."
        }, 
        {
            "location": "/JS/javascript/", 
            "text": "You can download Scorocode JavaScript SDK \nhere\n.\n\n\nSDK integration\n\n\nTo use SDK on the browser side, download the \nlib/browser/scorocode.min.js\n library and connect it to the project: \n\n\nscript\n \nsrc\n=\njs/scorocode.min.js\n/script\n\n\n\n\n\n\nTo use SDK on the server side (NodeJS), install the SDK module \nnpm install scorocode\n and connect it to the project:\n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\n\n\n\n\n\u0411\u044b\u0441\u0442\u0440\u044b\u0439 \u0441\u0442\u0430\u0440\u0442\n\n\n\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0439\u0442\u0435\u0441\u044c \u0438 \u0441\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0441 \u043b\u044e\u0431\u044b\u043c \u0438\u043c\u0435\u043d\u0435\u043c \u0432 \nScorocode\n.\n\n\n\u0414\u043b\u044f \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043f\u0440\u0438\u043c\u0435\u0440\u0430 \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 \nreact\n \u0438 \u0443\u0442\u0438\u043b\u0438\u0442\u0443 \u0434\u043b\u044f \u0431\u044b\u0441\u0442\u0440\u043e\u0433\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043a\u0430\u0440\u043a\u0430\u0441\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \ncreate-react-app\n \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u043b\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0441\u043c\u043e\u0442\u0440\u0438\u0442\u0435 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435. \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0443\u0442\u0438\u043b\u0438\u0442\u0443 \u043c\u043e\u0436\u043d\u043e \u0438\u0437 \u043a\u043e\u043d\u0441\u043e\u043b\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u043e\u0439:\n\n\nnpm install -g create-react-app\n\n\n\n\n\n\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u043d\u043e\u0432\u043e\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 JS SDK \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c\u044e \u043a\u043e\u043c\u0430\u043d\u0434 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438:\n\n\ncreate-react-app first-scorocode\ncd first-scorocode\nnpm install scorocode --save\n\n\n\n\n\n\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0444\u0430\u0439\u043b \nsrc/index.js\n \u0438 \u0434\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u0432 \u043d\u0435\u0433\u043e \u0441\u0442\u0440\u043e\u043a\u0438, \u0437\u0430\u043c\u0435\u043d\u0438\u0432 \u043a\u043b\u044e\u0447\u0438 \"xxx\" \u043d\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u043a\u043b\u044e\u0447\u0438 \u0438\u0437 \u0432\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f (\u0440\u0430\u0437\u0434\u0435\u043b \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 -\n \u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u044c):\n\n\nimport\n \nReact\n \nfrom\n \nreact\n;\n\n\nimport\n \nReactDOM\n \nfrom\n \nreact-dom\n;\n\n\nimport\n \nApp\n \nfrom\n \n./App\n;\n\n\nimport\n \n./index.css\n;\n\n\nimport\n \nScorocode\n \nfrom\n \nscorocode\n \n// \n- \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0438\u043c\u043f\u043e\u0440\u0442 SDK Scorocode\n\n\n\n// \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e SDK\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \nxxx\n,\n \n// \n- \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c xxx \u043d\u0430 \u043a\u043b\u044e\u0447 appId \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\n\n    \nJavaScriptKey\n:\n \nxxx\n,\n \n// \n- \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c xxx \u043d\u0430 \u043a\u043b\u044e\u0447 javascript \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\n\n    \nMasterKey\n:\n     \nxxx\n  \n// \n- \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c xxx \u043d\u0430 \u043a\u043b\u044e\u0447 masterKey \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\n\n\n});\n\n\n\nReactDOM\n.\nrender\n(\n\n  \nlt\n;\nApp\n \n/\ngt\n;,\n\n  \ndocument\n.\ngetElementById\n(\nroot\n)\n\n\n);\n\n\n\n\n\n\n\u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0444\u0430\u0439\u043b \nsrc/App.js\n \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u0435 \u0435\u0433\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u043d\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043a\u043e\u0434:\n\n\nimport\n \nReact\n,\n \n{\n \nComponent\n \n}\n \nfrom\n \nreact\n;\n\n\nimport\n \nlogo\n \nfrom\n \n./logo.svg\n;\n\n\nimport\n \n./App.css\n;\n\n\nimport\n \nScorocode\n \nfrom\n \nscorocode\n \n// \n- \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0438\u043c\u043f\u043e\u0440\u0442 SDK\n\n\n\n\nclass\n \nApp\n \nextends\n \nComponent\n \n{\n\n\n    \nconstructor\n(\nprops\n)\n \n{\n\n        \nsuper\n(\nprops\n);\n\n\n        \n// \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u0443\u0434\u0443\u0442 \u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432\n\n        \nthis\n.\nstate\n \n=\n \n{\n\n            \nregisterResult\n:\n \n,\n\n            \nloginResult\n:\n \n\n        \n};\n\n    \n}\n\n\n    \n// \u0417\u0430\u043c\u0435\u043d\u044f\u0435\u043c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435\n\n    \n// \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0434\u0432\u0435 \u0444\u043e\u0440\u043c\u044b: \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0438 \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438\n\n    \nrender\n()\n \n{\n\n        \nreturn\n \n(\n\n            \nlt\n;\ndiv\ngt\n;\n\n                \nlt\n;\nh2\ngt\n;\n\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f\nlt\n;\n/h2\ngt;\n\n                \nlt\n;\nform\n \nonSubmit\n=\n{(\nevent\n)\n \n=\ngt\n;\n \n{\nthis\n.\nhandleRegister\n(\nevent\n)}}\ngt\n;\n\n                    \nlt\n;\ninput\n \ntype\n=\ntext\n \nplaceholder\n=\n\u0438\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\n/\ngt\n;\n \n{\n \n}\n\n                    \nlt\n;\ninput\n \ntype\n=\nemail\n \nplaceholder\n=\nemail\n/\ngt\n;\n \n{\n \n}\n\n                    \nlt\n;\ninput\n \ntype\n=\npassword\n \nplaceholder\n=\npassword\n/\ngt\n;\n\n                    \nlt\n;\nbutton\n \ntype\n=\nsubmit\ngt\n;\n\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f\nlt\n;\n/button\ngt;\n\n                \nlt\n;\n/form\ngt;\n\n\n                \nlt\n;\npre\ngt\n;{\nthis\n.\nstate\n.\nregisterResult\n}\nlt\n;\n/pre\ngt;\n\n\n                \nlt\n;\nh2\ngt\n;\n\u0412\u0445\u043e\u0434\n \n\u0432\n \n\u0441\u0438\u0441\u0442\u0435\u043c\u0443\nlt\n;\n/h2\ngt;\n\n                \nlt\n;\nform\n \nonSubmit\n=\n{(\nevent\n)\n \n=\ngt\n;\n \n{\nthis\n.\nhandleLogin\n(\nevent\n)}}\ngt\n;\n\n                    \nlt\n;\ninput\n \ntype\n=\nemail\n \nplaceholder\n=\nemail\n/\ngt\n;\n \n{\n \n}\n\n                    \nlt\n;\ninput\n \ntype\n=\npassword\n \nplaceholder\n=\npassword\n/\ngt\n;\n\n                    \nlt\n;\nbutton\n \ntype\n=\nsubmit\ngt\n;\n\u0412\u043e\u0439\u0442\u0438\nlt\n;\n/button\ngt;\n\n                \nlt\n;\n/form\ngt;\n\n\n                \nlt\n;\npre\ngt\n;{\nthis\n.\nstate\n.\nloginResult\n}\nlt\n;\n/pre\ngt;\n\n            \nlt\n;\n/div\ngt;\n\n        \n);\n\n    \n}\n\n\n    \n// \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0444\u043e\u0440\u043c\u044b \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438\n\n    \nhandleRegister\n(\nevent\n)\n \n{\n\n        \nevent\n.\npreventDefault\n()\n\n        \nconst\n \nusername\n \n=\n \nevent\n.\ntarget\n.\nelements\n[\n0\n].\nvalue\n\n        \nconst\n \nemail\n \n=\n \nevent\n.\ntarget\n.\nelements\n[\n1\n].\nvalue\n\n        \nconst\n \npassword\n \n=\n \nevent\n.\ntarget\n.\nelements\n[\n2\n].\nvalue\n\n\n        \n// \u041e\u0447\u0438\u0449\u0430\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\n\n        \nthis\n.\nsetState\n({\nregisterResult\n:\n \n})\n\n\n        \n// \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043d\u043e\u0432\u044b\u0439 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 Scorocode.User\n\n        \nvar\n \nappUser\n \n=\n \nnew\n \nScorocode\n.\nUser\n();\n\n\n        \n// \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\n\n        \nappUser\n\n            \n.\nset\n(\nusername\n,\n \nusername\n)\n\n            \n.\nset\n(\nemail\n,\n \nemail\n)\n\n            \n.\nset\n(\npassword\n,\n \npassword\n);\n\n\n        \n// \u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u043c \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\n\n        \nappUser\n.\nsignup\n()\n\n            \n// \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430\n\n            \n.\nthen\n((\ndata\n)\n=\n{\n\n                \n// \u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430, \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u0432 \u0441\u0442\u0440\u043e\u043a\u0443\n\n                \nthis\n.\nsetState\n({\nregisterResult\n:\n \nJSON\n.\nstringify\n(\ndata\n,\n \nnull\n,\n \n2\n)})\n\n            \n})\n\n            \n.\ncatch\n((\nerr\n)\n \n=\n \n{\n\n                \n// \u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430, \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u0432 \u0441\u0442\u0440\u043e\u043a\u0443\n\n                \nthis\n.\nsetState\n({\nregisterResult\n:\n \nJSON\n.\nstringify\n(\nerr\n,\n \nnull\n,\n \n2\n)})\n\n            \n})\n\n    \n}\n\n\n    \n// \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0444\u043e\u0440\u043c\u044b \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438\n\n    \nhandleLogin\n(\nevent\n)\n \n{\n\n        \nevent\n.\npreventDefault\n()\n\n        \nconst\n \nemail\n \n=\n \nevent\n.\ntarget\n.\nelements\n[\n0\n].\nvalue\n\n        \nconst\n \npassword\n \n=\n \nevent\n.\ntarget\n.\nelements\n[\n1\n].\nvalue\n\n\n        \n// \u041e\u0447\u0438\u0449\u0430\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\n\n        \nthis\n.\nsetState\n({\nloginResult\n:\n \n})\n\n\n        \n// \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043d\u043e\u0432\u044b\u0439 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 Scorocode.User\n\n        \nvar\n \nappUser\n \n=\n \nnew\n \nScorocode\n.\nUser\n();\n\n\n        \n// \u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u0446\u0438\u0440\u0443\u0435\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f email \u0438 password\n\n        \nappUser\n.\nlogin\n(\nemail\n,\n \npassword\n)\n\n            \n// \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430\n\n            \n.\nthen\n((\ndata\n)\n=\n{\n\n                \n// \u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430, \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u0432 \u0441\u0442\u0440\u043e\u043a\u0443\n\n                \nthis\n.\nsetState\n({\nloginResult\n:\n \nJSON\n.\nstringify\n(\ndata\n,\n \nnull\n,\n \n2\n)})\n\n            \n})\n\n            \n.\ncatch\n((\nerr\n)\n \n=\n \n{\n\n                \n// \u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430, \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u0432 \u0441\u0442\u0440\u043e\u043a\u0443\n\n                \nthis\n.\nsetState\n({\nloginResult\n:\n \nJSON\n.\nstringify\n(\nerr\n,\n \nnull\n,\n \n2\n)})\n\n            \n})\n\n    \n}\n\n\n}\n\n\n\nexport\n \ndefault\n \nApp\n;\n\n\n\n\n\n\n\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u0435 \u0444\u0430\u0439\u043b \u0438 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0438\u0437 \u043a\u043e\u043d\u0441\u043e\u043b\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u043e\u0439:\n\n\nnpm start\n\n\n\n\n\n\u0412 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435 \u043e\u0442\u043a\u0440\u043e\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0434\u0432\u0443\u043c\u044f \u0444\u043e\u0440\u043c\u0430\u043c\u0438: \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0438 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438.\n\u041f\u043e\u044d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0441 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0435\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0438 \u0438\u0445 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0435\u0439 \u0438 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u0442\u0435 \u043d\u0430 \u043e\u0442\u0432\u0435\u0442\u044b \u043e\u0442 API Scorocode.\n\u041f\u043e\u0441\u043b\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u0432 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 users \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0435\u0433\u043e email \u0438 \u043f\u0430\u0440\u043e\u043b\u044c.", 
            "title": "JavaScript SDK"
        }, 
        {
            "location": "/JS/javascript/#sdk-integration", 
            "text": "To use SDK on the browser side, download the  lib/browser/scorocode.min.js  library and connect it to the project:   script   src = js/scorocode.min.js /script   To use SDK on the server side (NodeJS), install the SDK module  npm install scorocode  and connect it to the project:  var   Scorocode   =   require ( scorocode );", 
            "title": "SDK integration"
        }, 
        {
            "location": "/JS/javascript/#_1", 
            "text": "\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0439\u0442\u0435\u0441\u044c \u0438 \u0441\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0441 \u043b\u044e\u0431\u044b\u043c \u0438\u043c\u0435\u043d\u0435\u043c \u0432  Scorocode .  \u0414\u043b\u044f \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043f\u0440\u0438\u043c\u0435\u0440\u0430 \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443  react  \u0438 \u0443\u0442\u0438\u043b\u0438\u0442\u0443 \u0434\u043b\u044f \u0431\u044b\u0441\u0442\u0440\u043e\u0433\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043a\u0430\u0440\u043a\u0430\u0441\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f  create-react-app  \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u043b\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0441\u043c\u043e\u0442\u0440\u0438\u0442\u0435 \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435. \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0443\u0442\u0438\u043b\u0438\u0442\u0443 \u043c\u043e\u0436\u043d\u043e \u0438\u0437 \u043a\u043e\u043d\u0441\u043e\u043b\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u043e\u0439:  npm install -g create-react-app  \u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u043d\u043e\u0432\u043e\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 JS SDK \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c\u044e \u043a\u043e\u043c\u0430\u043d\u0434 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438:  create-react-app first-scorocode\ncd first-scorocode\nnpm install scorocode --save  \u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0444\u0430\u0439\u043b  src/index.js  \u0438 \u0434\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u0432 \u043d\u0435\u0433\u043e \u0441\u0442\u0440\u043e\u043a\u0438, \u0437\u0430\u043c\u0435\u043d\u0438\u0432 \u043a\u043b\u044e\u0447\u0438 \"xxx\" \u043d\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u043a\u043b\u044e\u0447\u0438 \u0438\u0437 \u0432\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f (\u0440\u0430\u0437\u0434\u0435\u043b \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 -  \u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u044c):  import   React   from   react ;  import   ReactDOM   from   react-dom ;  import   App   from   ./App ;  import   ./index.css ;  import   Scorocode   from   scorocode   //  - \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0438\u043c\u043f\u043e\u0440\u0442 SDK Scorocode  // \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e SDK  Scorocode . Init ({ \n     ApplicationID :   xxx ,   //  - \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c xxx \u043d\u0430 \u043a\u043b\u044e\u0447 appId \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \n     JavaScriptKey :   xxx ,   //  - \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c xxx \u043d\u0430 \u043a\u043b\u044e\u0447 javascript \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \n     MasterKey :       xxx    //  - \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c xxx \u043d\u0430 \u043a\u043b\u044e\u0447 masterKey \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f  });  ReactDOM . render ( \n   lt ; App   / gt ;, \n   document . getElementById ( root )  );   \u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u0444\u0430\u0439\u043b  src/App.js  \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u0435 \u0435\u0433\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u043d\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043a\u043e\u0434:  import   React ,   {   Component   }   from   react ;  import   logo   from   ./logo.svg ;  import   ./App.css ;  import   Scorocode   from   scorocode   //  - \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0438\u043c\u043f\u043e\u0440\u0442 SDK  class   App   extends   Component   { \n\n     constructor ( props )   { \n         super ( props ); \n\n         // \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u0443\u0434\u0443\u0442 \u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \n         this . state   =   { \n             registerResult :   , \n             loginResult :   \n         }; \n     } \n\n     // \u0417\u0430\u043c\u0435\u043d\u044f\u0435\u043c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \n     // \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0434\u0432\u0435 \u0444\u043e\u0440\u043c\u044b: \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0438 \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \n     render ()   { \n         return   ( \n             lt ; div gt ; \n                 lt ; h2 gt ; \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f lt ; /h2 gt; \n                 lt ; form   onSubmit = {( event )   = gt ;   { this . handleRegister ( event )}} gt ; \n                     lt ; input   type = text   placeholder = \u0438\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f / gt ;   {   } \n                     lt ; input   type = email   placeholder = email / gt ;   {   } \n                     lt ; input   type = password   placeholder = password / gt ; \n                     lt ; button   type = submit gt ; \u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f lt ; /button gt; \n                 lt ; /form gt; \n\n                 lt ; pre gt ;{ this . state . registerResult } lt ; /pre gt; \n\n                 lt ; h2 gt ; \u0412\u0445\u043e\u0434   \u0432   \u0441\u0438\u0441\u0442\u0435\u043c\u0443 lt ; /h2 gt; \n                 lt ; form   onSubmit = {( event )   = gt ;   { this . handleLogin ( event )}} gt ; \n                     lt ; input   type = email   placeholder = email / gt ;   {   } \n                     lt ; input   type = password   placeholder = password / gt ; \n                     lt ; button   type = submit gt ; \u0412\u043e\u0439\u0442\u0438 lt ; /button gt; \n                 lt ; /form gt; \n\n                 lt ; pre gt ;{ this . state . loginResult } lt ; /pre gt; \n             lt ; /div gt; \n         ); \n     } \n\n     // \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0444\u043e\u0440\u043c\u044b \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \n     handleRegister ( event )   { \n         event . preventDefault () \n         const   username   =   event . target . elements [ 0 ]. value \n         const   email   =   event . target . elements [ 1 ]. value \n         const   password   =   event . target . elements [ 2 ]. value \n\n         // \u041e\u0447\u0438\u0449\u0430\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \n         this . setState ({ registerResult :   }) \n\n         // \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043d\u043e\u0432\u044b\u0439 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 Scorocode.User \n         var   appUser   =   new   Scorocode . User (); \n\n         // \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \n         appUser \n             . set ( username ,   username ) \n             . set ( email ,   email ) \n             . set ( password ,   password ); \n\n         // \u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u043c \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \n         appUser . signup () \n             // \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \n             . then (( data ) = { \n                 // \u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430, \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 \n                 this . setState ({ registerResult :   JSON . stringify ( data ,   null ,   2 )}) \n             }) \n             . catch (( err )   =   { \n                 // \u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430, \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 \n                 this . setState ({ registerResult :   JSON . stringify ( err ,   null ,   2 )}) \n             }) \n     } \n\n     // \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0444\u043e\u0440\u043c\u044b \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \n     handleLogin ( event )   { \n         event . preventDefault () \n         const   email   =   event . target . elements [ 0 ]. value \n         const   password   =   event . target . elements [ 1 ]. value \n\n         // \u041e\u0447\u0438\u0449\u0430\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \n         this . setState ({ loginResult :   }) \n\n         // \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043d\u043e\u0432\u044b\u0439 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 Scorocode.User \n         var   appUser   =   new   Scorocode . User (); \n\n         // \u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u0446\u0438\u0440\u0443\u0435\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f email \u0438 password \n         appUser . login ( email ,   password ) \n             // \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \n             . then (( data ) = { \n                 // \u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430, \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 \n                 this . setState ({ loginResult :   JSON . stringify ( data ,   null ,   2 )}) \n             }) \n             . catch (( err )   =   { \n                 // \u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430, \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u0432 \u0441\u0442\u0440\u043e\u043a\u0443 \n                 this . setState ({ loginResult :   JSON . stringify ( err ,   null ,   2 )}) \n             }) \n     }  }  export   default   App ;   \u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u0435 \u0444\u0430\u0439\u043b \u0438 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0438\u0437 \u043a\u043e\u043d\u0441\u043e\u043b\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u043e\u0439:  npm start  \u0412 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435 \u043e\u0442\u043a\u0440\u043e\u0435\u0442\u0441\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0434\u0432\u0443\u043c\u044f \u0444\u043e\u0440\u043c\u0430\u043c\u0438: \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0438 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438.\n\u041f\u043e\u044d\u043a\u0441\u043f\u0435\u0440\u0438\u043c\u0435\u043d\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0441 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0435\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0438 \u0438\u0445 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0435\u0439 \u0438 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u0442\u0435 \u043d\u0430 \u043e\u0442\u0432\u0435\u0442\u044b \u043e\u0442 API Scorocode.\n\u041f\u043e\u0441\u043b\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u0432 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 users \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0435\u0433\u043e email \u0438 \u043f\u0430\u0440\u043e\u043b\u044c.", 
            "title": "\u0411\u044b\u0441\u0442\u0440\u044b\u0439 \u0441\u0442\u0430\u0440\u0442"
        }, 
        {
            "location": "/JS/Scorocode/", 
            "text": "Scorocode\n\n\n.Init(opt) - \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f SDK\n\n\n\n\n\n\n\n\n\n\n.Init(opt) - SDK initialization\n\n\n\n\n\n\n\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n\n\n\u0422\u0438\u043f\n\n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\n\n\n\n\n\n\n\n\nopt\n\n\nObject\n\n\nKeys for ititialisation: application identifier, your platform client key and access keys that necessary.\n\n\n\n\n\n\n\n\nProperties\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nApplicationID\n\n\nString\n\n\nApplication identifier\n\n\n\n\n\n\nJavaScriptKey\n\n\nString\n\n\nClient key for JavaScript platform\n\n\n\n\n\n\nAndroidKey\n\n\nString\n\n\nClient key for Android platform\n\n\n\n\n\n\niOsKey\n\n\nString\n\n\nClient key for iOs platform\n\n\n\n\n\n\nWinPhoneKey\n\n\nString\n\n\nClient key for Windows Phone platform\n\n\n\n\n\n\nFileKey\n\n\nString\n\n\nFile access key\n\n\n\n\n\n\nScriptKey\n\n\nString\n\n\nServer-side scripts access key\n\n\n\n\n\n\nMessageKey\n\n\nString\n\n\nMessages access key\n\n\n\n\n\n\nWebSocketKey\n\n\nString\n\n\nWebSocket access key\n\n\n\n\n\n\nMasterKey\n\n\nString\n\n\nApplication master-key\n\n\n\n\n\n\n\n\nExample\n  \n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \na3d04e75e157b2f7ae20c2fce02f63d6\n,\n\n    \nJavaScriptKey\n:\n \nad6a8fe72ef7dfb9c46958aacb15196a\n,\n\n    \nFileKey\n:\n \n2aceceec7d2e96b1487ec399f5afa101\n,\n\n    \nMessageKey\n:\n \ne215ed465646775b42d65cca2d2f5db9\n\n\n});", 
            "title": "Scorocode"
        }, 
        {
            "location": "/JS/Scorocode/#initopt-sdk-initialization", 
            "text": "\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440  \u0422\u0438\u043f  \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435      opt  Object  Keys for ititialisation: application identifier, your platform client key and access keys that necessary.     Properties     Parameter  Type  Description      ApplicationID  String  Application identifier    JavaScriptKey  String  Client key for JavaScript platform    AndroidKey  String  Client key for Android platform    iOsKey  String  Client key for iOs platform    WinPhoneKey  String  Client key for Windows Phone platform    FileKey  String  File access key    ScriptKey  String  Server-side scripts access key    MessageKey  String  Messages access key    WebSocketKey  String  WebSocket access key    MasterKey  String  Application master-key     Example     Scorocode . Init ({ \n     ApplicationID :   a3d04e75e157b2f7ae20c2fce02f63d6 , \n     JavaScriptKey :   ad6a8fe72ef7dfb9c46958aacb15196a , \n     FileKey :   2aceceec7d2e96b1487ec399f5afa101 , \n     MessageKey :   e215ed465646775b42d65cca2d2f5db9  });", 
            "title": ".Init(opt) - SDK initialization"
        }, 
        {
            "location": "/JS/Scorocode.Object/", 
            "text": ".Object\n\n\nnew Object(collName)\n \u21d2 \nScorocode.Object\n\n\n.getById(_id, options)\n \u21d2 \npromise.\nScorocode.Object\n\n\n.get(key)\n\n\n.getFileLink(field)\n \u21d2 \nString\n\n\n.uploadFile(field, filename, file, options)\n \u21d2 \npromise.\nString\n\n\n.save(options)\n \u21d2 \npromise.\nScorocode.Object\n\n\n.remove(options)\n \u21d2 \npromise.{count: Number, docs: Array}\n\n\n.extend(collName, childObject)\n \u21d2 \n[Scorocode.Object]\n\n\n.set(data)\n\n\n.push(key, value)\n \n\n\n.pull(key, value)\n \n\n\n.pullAll(key, value)\n \n\n\n.addToSet(key, value)\n \n\n\n.pop(key, pos)\n \n\n\n.inc(key, amount)\n\n\n.currentDate()\n\n\n.mul(key, number)\n\n\n.min()\n\n\n.max()\n\n\n\n\n\n\n\n\n\n\n\n\nnew Object(collName)\n\n\nScorocode.Object represents the application data object and includes methods for handling this data. The constructor creates a minimal basic \"wrap\" for user data.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ncollName\n\n\nString\n\n\nName of the collection where the object is added\n\n\n\n\n\n\n\n\nExample\n \n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \nquestItem\n \n=\n \nnew\n \nScorocode\n.\nObject\n(\nitems\n);\n \n\nquestItem\n.\nset\n(\nname\n,\n \nWater chip\n).\nset\n(\nrelatedquests\n,\n \n[\nhuNr3L7QDh\n]);\n \n\nquestItem\n.\nsave\n()\n\n    \n.\nthen\n((\nsaved\n)\n \n=\n \n{\n\n         \nconsole\n.\nlog\n(\nsaved\n);\n\n     \n})\n\n    \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n         \nconsole\n.\nlog\n(\nerror\n)\n\n    \n});\n\n\n\n\nSee.\n\n\n\n\n.set(data)\n\n\n.save(options)\n \u21d2 \nScorocode.Object\n\n\n\n\nExceptions\n:\n\n\n\n\nError\n \"Invalid collection name\" \n\n\n\n\n{ \n    errCode: 404,\n    errMsg: \nInvalid collection: \\\nitems\\\n,\n    error: true \n}\n\n\n\n\n\n\n\n\n\n.getById(_id, options)\n\n\nMethod for retrieving a collection object from DB by its _id.\n\n\nParameters\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n_id\n\n\nString\n\n\nObject identifier\n\n\n\n\n\n\noptions\n\n\nObject\n\n\nSuccess and error callbacks for the executed query.\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \ngetItem\n \n=\n \nnew\n \nScorocode\n.\nObject\n(\nitems\n);\n\n\ngetItem\n.\ngetById\n(\nNseSaqqd5v\n)\n\n    \n.\nthen\n((\nsuccess\n)\n \n=\n \n{\n\n         \nconsole\n.\nlog\n(\nsuccess\n);\n\n     \n})\n\n    \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n         \nconsole\n.\nlog\n(\nerror\n)\n\n    \n});\n\n\n\n\n\n\nsee\n\n\n\n\nnew Object(collName)\n\n\n.getById(_id, options)\n \u21d2 \nPromise.\nScorocode.Object\n\n\n\n\nReturns\n: \nPromise.\nScorocode.Object\n -  Returns promise that returns the requested object.\n\n\n{\n    _id: \nNseSaqqd5v\n,\n    name: \nWater chip\n,\n    relatedquests: [ \nhuNr3L7QDh\n ],\n    createdAt: Mon May 23 2016 19:37:04 GMT+0300 (RTZ 2 (\u0437\u0438\u043c\u0430)),\n    updatedAt: Mon May 23 2016 19:37:04 GMT+0300 (RTZ 2 (\u0437\u0438\u043c\u0430)),\n    readACL: [],\n    updateACL: [],\n    removeACL: [] \n}\n\n\n\n\n\nException\n:\n\n\n\n\nError\n \"Document not found\"\n\n\n\n\n [Error: Document not found]\n\n\n\n\n\n\n\n\n\n.get(key)\n\n\nMethod for retrieving data from a specified object field.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nString\n\n\nName of the field whose value should be retrieved\n\n\n\n\n\n\n\n\nExample\n \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \ngetItem\n \n=\n \nnew\n \nScorocode\n.\nObject\n(\nitems\n);\n\n\ngetItem\n.\ngetById\n(\nNseSaqqd5v\n)\n\n    \n.\nthen\n((\nsuccess\n)\n \n=\n \n{\n\n        \nconsole\n.\nlog\n(\ngetItem\n.\nget\n(\nname\n));\n\n     \n})\n\n    \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n         \nconsole\n.\nlog\n(\nerror\n)\n\n    \n});\n\n\n\n\n\n\nSee\n\n\n\n\nnew Object(collName)\n    \n\n\n.getById(_id, options)\n \u21d2 \nPromise.\nScorocode.Object\n\n\n\n\nReturns\n: \nvalue\n - Returns the field value\n\nWater chip\n\n\n\n\n\n\n\n\n\n.uploadFile(field, filename, file, options)\n\n\nFile upload method\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nCollection field name\n\n\n\n\n\n\nfilename\n\n\nString\n\n\nFile name\n\n\n\n\n\n\nfile\n\n\nString\n\n\nFile content in base64 format\n\n\n\n\n\n\noptions\n\n\nObject\n\n\nSuccess and error callbacks for the executed query.\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n,\n\n    \nFileKey\n:\n \nfileKey\n\n\n});\n\n\n\nvar\n \nattachToItem\n \n=\n \nnew\n \nScorocode\n.\nObject\n(\nitems\n);\n\n\nattachToItem\n.\ngetById\n(\nxL0uOFtiJx\n)\n\n    \n.\nthen\n((\nsuccess\n)\n=\n{\n\n        \nattachToItem\n.\nuploadFile\n(\nattachment\n,\n \nfile.txt\n,\n \nVEhJUyBJUyBGSUxFLUUtRS1FLUUtRS1FIQ==\n)\n\n        \n.\nthen\n((\nuploaded\n)\n=\n{\n\n            \nconsole\n.\nlog\n(\nuploaded\n);\n\n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n    \n})\n\n    \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n        \nconsole\n.\nlog\n(\nerror\n)\n\n    \n});\n\n\n\n\n\n\nSee\n\n\n\n\nnew Object(collName)\n\n\n.getById(_id, options)\n \u21d2 \nPromise.\nScorocode.Object\n\n\n\n\nReturns\n: \npromise.\nString\n - Returns promise that returns the uploaded file name\n\nfile.txt\n\n\n\n\n\nExceptions\n:\n\n\n\n\nString\n 'You must first create a document' \n\n\n\n\n\n\n\n\n.save(options)\n\n\nThe method saves the object in the data warehouse or updates an object that already exists there\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nObject\n\n\nSuccess and error callbacks for the executed query.\n\n\n\n\n\n\n\n\nExample\n \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \nquestItem\n \n=\n \nnew\n \nScorocode\n.\nObject\n(\nitems\n);\n \n\nquestItem\n.\nset\n(\nname\n,\n \nWater chip\n).\nset\n(\nrelatedquests\n,\n \n[\nhuNr3L7QDh\n]);\n \n\nquestItem\n.\nsave\n()\n\n    \n.\nthen\n((\nsaved\n)\n \n=\n \n{\n\n         \nconsole\n.\nlog\n(\nsaved\n);\n\n     \n})\n\n    \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n         \nconsole\n.\nlog\n(\nerror\n)\n\n    \n});\n\n\n\n\n\n\nSee\n\n\n\n\nnew Object(collName)\n\n\n.set(data)\n\n\n\n\nReturns\n: \nPromise.\nScorocode.Object\n - Returns promise that returns the saved object.\n\n\n { _id: \nNseSaqqd5v\n,\n  name: \nWater chip\n,\n  relatedquests: [ \nhuNr3L7QDh\n ],\n  createdAt: Mon May 23 2016 19:37:04 GMT+0300 (RTZ 2 (\u0437\u0438\u043c\u0430)),\n  updatedAt: Mon May 23 2016 19:37:04 GMT+0300 (RTZ 2 (\u0437\u0438\u043c\u0430)),\n  readACL: [],\n  updateACL: [],\n  removeACL: [] }\n\n\n\n\n\n\n\n\n\n.removeFile(options)\n\n\nMethod for removing the file\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nCollection field name\n\n\n\n\n\n\n\n\nExample\n \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \ngetItem\n \n=\n \nnew\n \nScorocode\n.\nObject\n(\nitems\n);\n\n\ngetItem\n.\ngetById\n(\nhejJU4BEGP\n)\n\n    \n.\nthen\n((\nsuccess\n)\n=\n{\n\n        \ngetItem\n.\nremoveFile\n(\nattachment\n)\n\n        \n.\nthen\n((\nremoved\n)\n=\n{\n\n            \nconsole\n.\nlog\n(\nremoved\n);\n\n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n    \n})\n\n    \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n    \n});\n\n\n\n\n\n\nSee\n\n\n\n\nnew Object(collName)\n\n\n.getById(_id, options)\n \u21d2 \nPromise.\nScorocode.Object\n\n\n\n\nReturns\n: \nPromise.{error: Boolean}\n - Returns promise that returns the result:\n\n\n{ \n    error: false \n}\n\n\n\n\n\n\n\n\n\n.remove(options)\n\n\nMethod for removing the selected object\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nObject\n\n\nSuccess and error callbacks for the executed query.\n\n\n\n\n\n\n\n\nExample\n \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \ngetItem\n \n=\n \nnew\n \nScorocode\n.\nObject\n(\nitems\n);\n\n\ngetItem\n.\ngetById\n(\nhejJU4BEGP\n)\n\n    \n.\nthen\n((\nsuccess\n)\n=\n{\n\n        \ngetItem\n.\nremove\n(\nsuccess\n)\n\n        \n.\nthen\n((\nremoved\n)\n=\n{\n\n            \nconsole\n.\nlog\n(\nremoved\n);\n\n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n    \n})\n\n    \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n    \n});\n\n\n\n\n\n\nSee\n\n\n\n\nnew Object(collName)\n\n\n.getById(_id, options)\n \u21d2 \nPromise.\nScorocode.Object\n\n\n\n\nReturns\n: \nPromise.{count: Number, docs: Array}\n - Returns promise that returns the object:\n\n\n\n\n\"count\" - \nNumber\n  -  number of removed objects\n\n\n\"doc\" - \nArray\n  - array of removed objects' Ids\n\n\n\n\n{ \n    count: 1, \n    docs: [ \nhejJU4BEGP\n ] \n}\n\n\n\n\n\n\n\n\n\n.extend(collName, childObject)\n\n\nMethod for converting the Scorocode.Query sample data into individiual Scorocode.Object instances\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ncollName\n\n\nString\n\n\nCollection name\n\n\n\n\n\n\nchildObject\n\n\nObject\n\n\nData to be converted\n\n\n\n\n\n\n\n\nExample\n \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \ndata\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\ndata\n.\nfind\n()\n\n    \n.\nthen\n((\nfinded\n)\n \n=\n{\n\n        \nvar\n \nobjects\n \n=\n \nfinded\n.\nresult\n.\nmap\n((\ndata\n)\n=\n{\n\n            \nreturn\n \nScorocode\n.\nObject\n.\nextend\n(\nitems\n,\n \ndata\n)\n\n        \n});\n\n        \nreturn\n \nobjects\n;\n\n    \n})\n\n    \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n        \nconsole\n.\nlog\n(\nresult\n);\n\n    \n})\n\n    \n.\ncatch\n((\nerr\n)\n=\n{\n\n        \nconsole\n.\nlog\n(\nerr\n)\n\n    \n});\n    \n\n\n\n\n\nSee\n\n\n\n\nnew Object(collName)\n\n\n.find(options)\n \u21d2 \nPromise.{error: Boolean, limit: Number, skip: Number, result: [{Scorocode.Object}]}\n\n\n\n\nReturns\n: \nScorocode.Object\n - Returns Scorocode.Object\n\n\n\n\n\n\n.set(data)\n\n\nMethod for transferring data to object\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ndata\n\n\nObject\n\n\nData in {\"key\", \"value\"} format, where key is the collection field name.\n\n\n\n\n\n\n\n\nExample\n \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \nquestItem\n \n=\n \nnew\n \nScorocode\n.\nObject\n(\nitems\n);\n \n\nquestItem\n.\nset\n(\n_id\n,\n \nNseSaqqd5v\n).\nset\n(\nname\n,\n \nWater chip\n);\n \n\nquestItem\n.\nsave\n()\n\n    \n.\nthen\n((\nsuccess\n)\n \n=\n \n{\n\n         \nconsole\n.\nlog\n(\nsuccess\n);\n\n     \n})\n\n    \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n         \nconsole\n.\nlog\n(\nerror\n)\n\n    \n});\n\n\n\n\n\n\nSee\n\n\n\n\nnew Object(collName)\n\n\n.save(options)\n \u21d2 \nScorocode.Object\n\n\n\n\n\n\n\n\n.push(key, value)\n\n\nMethod for adding an element to an array\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nString\n\n\nName of the field whose value should be updated\n\n\n\n\n\n\nvalue\n\n\nString / Number / Boolean / Date / Array / Object \n\n\nValue of the new array element\n\n\n\n\n\n\n\n\nExample\n \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \nItem\n \n=\n \nnew\n \nScorocode\n.\nObject\n(\nitems\n);\n \n\nItem\n.\ngetById\n(\nNseSaqqd5v\n)\n\n    \n.\nthen\n((\nsuccess\n)\n=\n{\n\n        \nconsole\n.\nlog\n(\nsuccess\n);\n\n        \nItem\n.\npush\n(\narrayField\n,\n \nnew element\n);\n\n        \nItem\n.\nsave\n()\n\n        \n.\nthen\n((\nsaved\n)\n=\n{\n\n            \nconsole\n.\nlog\n(\nsaved\n);\n\n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n);\n\n        \n})\n\n    \n})\n\n    \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n    \n});\n\n\n\n\n\n\n\n\n\n\n.pull(key, value)\n\n\nMethod for removing all array elements whose values are the same as the specified one.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nString\n\n\nName of the field whose value should be updated\n\n\n\n\n\n\nvalue\n\n\nString / Number / Boolean / Date / Array / Object \n\n\nValue to be removed\n\n\n\n\n\n\n\n\nExample\n \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \nItem\n \n=\n \nnew\n \nScorocode\n.\nObject\n(\nitems\n);\n \n\nItem\n.\ngetById\n(\nMgYs9BEQUM\n)\n\n    \n.\nthen\n((\ngetted\n)\n \n=\n \n{\n\n        \nItem\n.\npull\n(\narrayField\n,\n \n{\nDelete\n:\n \ntrue\n});\n\n        \nItem\n.\nsave\n()\n\n            \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n                \nconsole\n.\nlog\n(\nresult\n);\n\n            \n})\n\n            \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n                \nconsole\n.\nlog\n(\nerror\n)\n\n            \n});\n\n    \n})\n   \n    \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n         \nconsole\n.\nlog\n(\nerror\n)\n\n    \n});\n\n\n\n\n\n\nExceptions\n:\n\n\n\n\nError\n \"For a new document use the method Set\"\n\n\nError\n 'Field must by a type of array'\n\n\n\n\n\n\n\n\n.pullAll(key, value)\n\n\nMethod for removing all array elements whose values are the same as one of the specified values.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nString\n\n\nName of the field whose value should be updated\n\n\n\n\n\n\nvalue\n\n\nArray\n\n\nArray of values to be removed\n\n\n\n\n\n\n\n\nExample\n \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \nItem\n \n=\n \nnew\n \nScorocode\n.\nObject\n(\nitems\n);\n \n\nItem\n.\ngetById\n(\nCrT49joIxn\n)\n\n    \n.\nthen\n((\ngetted\n)\n \n=\n \n{\n\n        \nItem\n.\npullAll\n(\narrayField\n,\n \n[\nDelete me\n,\n \n42\n,\n \n{\nimportant\n:\n \nfalse\n}]);\n\n        \nItem\n.\nsave\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nresult\n);\n\n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n    \n})\n   \n    \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n         \nconsole\n.\nlog\n(\nerror\n)\n\n    \n});\n\n\n\n\n\n\nExceptions\n:\n\n\n\n\nError\n 'For a new document use the method Set'\n\n\nError\n 'Field must by a type of array'\n\n\nError\n 'Value must by a type of array'\n\n\n\n\n\n\n\n\n.addToSet(key, value)\n\n\nMethod for adding an element to an array only if there are no elements with the same name in the array.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nString\n\n\nName of the field whose value should be updated\n\n\n\n\n\n\nvalue\n\n\nString / Number / Boolean / Date / Array / Object\n\n\nValue of the added element\n\n\n\n\n\n\n\n\nExample\n \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \nItem\n \n=\n \nnew\n \nScorocode\n.\nObject\n(\nitems\n);\n \n\nItem\n.\ngetById\n(\nCrT49joIxn\n)\n\n    \n.\nthen\n((\ngetted\n)\n \n=\n \n{\n\n        \nItem\n.\naddToSet\n(\narrayField\n,\n \n[\nFirst element\n,\n \n{\nisSecond\n:\n \ntrue\n}]);\n\n        \nItem\n.\nsave\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nresult\n);\n\n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n    \n})\n   \n    \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n         \nconsole\n.\nlog\n(\nerror\n)\n\n    \n});\n\n\n\n\n\n\nExceptions\n:\n\n\n\n\nError\n 'For a new document use the method Set'\n\n\nError\n 'Field must by a type of array'\n\n\n\n\n\n\n\n\n.pop(key, pos)\n\n\nMethod for removing the first or the last array element\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nString\n\n\nName of the field whose value should be updated\n\n\n\n\n\n\npos\n\n\nNumber\n\n\nPosition of the element to be removed in the array: -1 for the first element and 1 for the last\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \ngetItem\n \n=\n \nnew\n \nScorocode\n.\nObject\n(\nitems\n);\n \n\ngetItem\n.\ngetById\n(\nNseSaqqd5v\n)\n\n    \n.\nthen\n((\nsuccess\n)\n=\n{\n\n        \nconsole\n.\nlog\n(\nsuccess\n);\n\n        \ngetItem\n.\npop\n(\narrayField\n,\n \n1\n);\n\n        \ngetItem\n.\nsave\n()\n\n        \n.\nthen\n((\nsaved\n)\n=\n{\n\n            \nconsole\n.\nlog\n(\nsaved\n);\n\n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n);\n\n        \n})\n\n    \n})\n\n    \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n    \n});\n\n\n\n\n\n\nExceptions\n:\n\n\n\n\nError\n 'For a new document use the method Set'\n\n\nError\n 'Field must by a type of array'\n\n\n\n\n\n\n\n\n.inc(key, amount)\n\n\nThe method increments the numeric field value by a defined number\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nString\n\n\nName of the field whose value should be updated\n\n\n\n\n\n\namount\n\n\nNumber\n\n\nIncrement step\n\n\n\n\n\n\n\n\nExample\n \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \nItem\n \n=\n \nnew\n \nScorocode\n.\nObject\n(\nitems\n);\n \n\nItem\n.\ngetById\n(\ngNxzwAfvDj\n)\n\n    \n.\nthen\n((\nsuccess\n)\n=\n{\n\n        \nconsole\n.\nlog\n(\nItem\n.\nget\n(\nprice\n));\n \n//44.42\n\n        \nItem\n.\ninc\n(\nprice\n,\n \n-\n2.42\n);\n\n        \nItem\n.\nsave\n()\n\n        \n.\nthen\n((\nincremented\n)\n=\n{\n\n            \nconsole\n.\nlog\n(\nItem\n.\nget\n(\nprice\n));\n \n// 42\n\n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n);\n\n        \n})\n\n    \n})\n\n    \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n    \n});\n\n\n\n\n\n\nExceptions\n:\n\n\n\n\nError\n 'For a new document use the method Set'\n\n\nError\n 'Field must by a type of number'\n\n\n\n\n\n\n\n\n.currentDate()\n\n\nSets the current time as the field's value\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nString\n\n\nName of the field whose value should be updated\n\n\n\n\n\n\ntype\n\n\nString / Boolean\n\n\nDate type. Accepts the following values: true, \"date\" or \"timestamp\"\n\n\n\n\n\n\n\n\nExample\n \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \nItem\n \n=\n \nnew\n \nScorocode\n.\nObject\n(\nitems\n);\n\n\nItem\n.\nset\n(\n_id\n,\n \ngNxzwAfvDj\n).\ncurrentDate\n(\nsomeDate\n,\n \ntrue\n);\n\n\nItem\n.\nsave\n()\n\n    \n.\nthen\n((\nsuccess\n)\n=\n{\n\n        \nconsole\n.\nlog\n(\nItem\n.\nget\n(\nsomeDate\n));\n \n// 2016-05-27T14:10:00.013+03:00\n\n    \n})\n\n    \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n        \nconsole\n.\nlog\n(\nerror\n)\n\n    \n});\n\n\n\n\n\n\nExceptions\n:\n\n\n\n\nError\n 'For a new document use the method Set'\n\n\nError\n 'Invalid type'\n\n\n\n\n\n\n\n\n.mul(key, number)\n\n\nThe method multiplies the numeric field value by a defined number\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nString\n\n\nName of the field whose value should be updated\n\n\n\n\n\n\nnumber\n\n\nNumber\n\n\nMultiplier\n\n\n\n\n\n\n\n\nExample\n \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \nItem\n \n=\n \nnew\n \nScorocode\n.\nObject\n(\nitems\n);\n \n\nItem\n.\ngetById\n(\n8Qcfll2GwE\n)\n\n    \n.\nthen\n((\nsuccess\n)\n=\n{\n\n        \nconsole\n.\nlog\n(\nItem\n.\nget\n(\nprice\n));\n \n// 42\n\n        \nItem\n.\nmul\n(\nprice\n,\n \n-\n1\n);\n\n        \nItem\n.\nsave\n()\n\n        \n.\nthen\n((\nincremented\n)\n=\n{\n\n            \nconsole\n.\nlog\n(\nItem\n.\nget\n(\nprice\n));\n \n// -42\n\n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n);\n\n        \n})\n\n    \n})\n\n    \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n    \n});\n\n\n\n\n\n\nExceptions\n:\n\n\n\n\nError\n 'For a new document use the method Set'\n\n\nError\n 'Field must by a type of number'\n\n\nError\n 'Value must by a type of number'\n\n\n\n\n\n\n\n\n.min()\n\n\nThe method updates the numeric field value only if the new value is less than the current field value\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nString\n\n\nName of the field whose value should be updated\n\n\n\n\n\n\nnumber\n\n\nNumber\n\n\nNew value\n\n\n\n\n\n\n\n\nExample\n \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \nItem\n \n=\n \nnew\n \nScorocode\n.\nObject\n(\nitems\n);\n \n\nItem\n.\ngetById\n(\nCrT49joIxn\n)\n\n    \n.\nthen\n((\nsuccess\n)\n=\n{\n\n        \nconsole\n.\nlog\n(\nItem\n.\nget\n(\nprice\n));\n \n// 42\n\n        \nItem\n.\nmin\n(\nprice\n,\n \n41.999\n);\n\n        \nItem\n.\nsave\n()\n\n        \n.\nthen\n((\nchanged\n)\n=\n{\n\n            \nconsole\n.\nlog\n(\nItem\n.\nget\n(\nprice\n));\n \n// 41.999\n\n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n);\n\n        \n})\n\n    \n})\n\n    \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n    \n});\n\n\n\n\n\n\nExceptions\n:\n\n\n\n\nError\n 'For a new document use the method Set'\n\n\nError\n 'Field must by a type of number'\n\n\nError\n 'Value must by a type of number'\n\n\n\n\n\n\n\n\n.max()\n\n\nThe method updates the numeric field value only if the new value is greater than the current field value\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nString\n\n\nName of the field whose value should be updated\n\n\n\n\n\n\nnumber\n\n\nNumber\n\n\nNew value\n\n\n\n\n\n\n\n\nExample\n \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \nItem\n \n=\n \nnew\n \nScorocode\n.\nObject\n(\nitems\n);\n \n\nItem\n.\ngetById\n(\nCrT49joIxn\n)\n\n    \n.\nthen\n((\nsuccess\n)\n=\n{\n\n        \nconsole\n.\nlog\n(\nItem\n.\nget\n(\nprice\n));\n \n// 41.999\n\n        \nItem\n.\nmax\n(\nprice\n,\n \n40\n);\n\n        \nItem\n.\nsave\n()\n\n        \n.\nthen\n((\nchanged\n)\n=\n{\n\n            \nconsole\n.\nlog\n(\nItem\n.\nget\n(\nprice\n));\n \n// 41.999\n\n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n);\n\n        \n})\n\n    \n})\n\n    \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n    \n});\n\n\n\n\n\n\nExceptions\n:\n\n\n\n\nError\n 'For a new document use the method Set'\n\n\nError\n 'Field must by a type of number'\n\n\nError\n 'Value must by a type of number'", 
            "title": "Scorocode.Object"
        }, 
        {
            "location": "/JS/Scorocode.Object/#new-objectcollname", 
            "text": "Scorocode.Object represents the application data object and includes methods for handling this data. The constructor creates a minimal basic \"wrap\" for user data.     Parameter  Type  Description      collName  String  Name of the collection where the object is added     Example   var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   questItem   =   new   Scorocode . Object ( items );   questItem . set ( name ,   Water chip ). set ( relatedquests ,   [ huNr3L7QDh ]);   questItem . save () \n     . then (( saved )   =   { \n          console . log ( saved ); \n      }) \n     . catch (( error )   =   { \n          console . log ( error ) \n     });  \n\nSee.   .set(data)  .save(options)  \u21d2  Scorocode.Object   Exceptions :   Error  \"Invalid collection name\"    { \n    errCode: 404,\n    errMsg:  Invalid collection: \\ items\\ ,\n    error: true \n}", 
            "title": "new Object(collName)"
        }, 
        {
            "location": "/JS/Scorocode.Object/#getbyid_id-options", 
            "text": "Method for retrieving a collection object from DB by its _id.  Parameters     Parameter  Type  Description      _id  String  Object identifier    options  Object  Success and error callbacks for the executed query.     Example  var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   getItem   =   new   Scorocode . Object ( items );  getItem . getById ( NseSaqqd5v ) \n     . then (( success )   =   { \n          console . log ( success ); \n      }) \n     . catch (( error )   =   { \n          console . log ( error ) \n     });   see   new Object(collName)  .getById(_id, options)  \u21d2  Promise. Scorocode.Object   Returns :  Promise. Scorocode.Object  -  Returns promise that returns the requested object.  {\n    _id:  NseSaqqd5v ,\n    name:  Water chip ,\n    relatedquests: [  huNr3L7QDh  ],\n    createdAt: Mon May 23 2016 19:37:04 GMT+0300 (RTZ 2 (\u0437\u0438\u043c\u0430)),\n    updatedAt: Mon May 23 2016 19:37:04 GMT+0300 (RTZ 2 (\u0437\u0438\u043c\u0430)),\n    readACL: [],\n    updateACL: [],\n    removeACL: [] \n}  Exception :   Error  \"Document not found\"    [Error: Document not found]", 
            "title": ".getById(_id, options)"
        }, 
        {
            "location": "/JS/Scorocode.Object/#getkey", 
            "text": "Method for retrieving data from a specified object field.     Parameter  Type  Description      key  String  Name of the field whose value should be retrieved     Example    var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   getItem   =   new   Scorocode . Object ( items );  getItem . getById ( NseSaqqd5v ) \n     . then (( success )   =   { \n         console . log ( getItem . get ( name )); \n      }) \n     . catch (( error )   =   { \n          console . log ( error ) \n     });   See   new Object(collName)       .getById(_id, options)  \u21d2  Promise. Scorocode.Object   Returns :  value  - Returns the field value Water chip", 
            "title": ".get(key)"
        }, 
        {
            "location": "/JS/Scorocode.Object/#uploadfilefield-filename-file-options", 
            "text": "File upload method     Parameter  Type  Description      field  String  Collection field name    filename  String  File name    file  String  File content in base64 format    options  Object  Success and error callbacks for the executed query.     Example  var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey , \n     FileKey :   fileKey  });  var   attachToItem   =   new   Scorocode . Object ( items );  attachToItem . getById ( xL0uOFtiJx ) \n     . then (( success ) = { \n         attachToItem . uploadFile ( attachment ,   file.txt ,   VEhJUyBJUyBGSUxFLUUtRS1FLUUtRS1FIQ== ) \n         . then (( uploaded ) = { \n             console . log ( uploaded ); \n         }) \n         . catch (( error )   =   { \n             console . log ( error ) \n         }); \n     }) \n     . catch (( error )   =   { \n         console . log ( error ) \n     });   See   new Object(collName)  .getById(_id, options)  \u21d2  Promise. Scorocode.Object   Returns :  promise. String  - Returns promise that returns the uploaded file name file.txt   Exceptions :   String  'You must first create a document'", 
            "title": ".uploadFile(field, filename, file, options)"
        }, 
        {
            "location": "/JS/Scorocode.Object/#saveoptions", 
            "text": "The method saves the object in the data warehouse or updates an object that already exists there     Parameter  Type  Description      options  Object  Success and error callbacks for the executed query.     Example    var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   questItem   =   new   Scorocode . Object ( items );   questItem . set ( name ,   Water chip ). set ( relatedquests ,   [ huNr3L7QDh ]);   questItem . save () \n     . then (( saved )   =   { \n          console . log ( saved ); \n      }) \n     . catch (( error )   =   { \n          console . log ( error ) \n     });   See   new Object(collName)  .set(data)   Returns :  Promise. Scorocode.Object  - Returns promise that returns the saved object.   { _id:  NseSaqqd5v ,\n  name:  Water chip ,\n  relatedquests: [  huNr3L7QDh  ],\n  createdAt: Mon May 23 2016 19:37:04 GMT+0300 (RTZ 2 (\u0437\u0438\u043c\u0430)),\n  updatedAt: Mon May 23 2016 19:37:04 GMT+0300 (RTZ 2 (\u0437\u0438\u043c\u0430)),\n  readACL: [],\n  updateACL: [],\n  removeACL: [] }", 
            "title": ".save(options)"
        }, 
        {
            "location": "/JS/Scorocode.Object/#removefileoptions", 
            "text": "Method for removing the file     Parameter  Type  Description      field  String  Collection field name     Example    var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   getItem   =   new   Scorocode . Object ( items );  getItem . getById ( hejJU4BEGP ) \n     . then (( success ) = { \n         getItem . removeFile ( attachment ) \n         . then (( removed ) = { \n             console . log ( removed ); \n         }) \n         . catch (( error )   =   { \n             console . log ( error ) \n         }); \n     }) \n     . catch (( error )   =   { \n             console . log ( error ) \n     });   See   new Object(collName)  .getById(_id, options)  \u21d2  Promise. Scorocode.Object   Returns :  Promise.{error: Boolean}  - Returns promise that returns the result:  { \n    error: false \n}", 
            "title": ".removeFile(options)"
        }, 
        {
            "location": "/JS/Scorocode.Object/#removeoptions", 
            "text": "Method for removing the selected object     Parameter  Type  Description      options  Object  Success and error callbacks for the executed query.     Example    var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   getItem   =   new   Scorocode . Object ( items );  getItem . getById ( hejJU4BEGP ) \n     . then (( success ) = { \n         getItem . remove ( success ) \n         . then (( removed ) = { \n             console . log ( removed ); \n         }) \n         . catch (( error )   =   { \n             console . log ( error ) \n         }); \n     }) \n     . catch (( error )   =   { \n             console . log ( error ) \n     });   See   new Object(collName)  .getById(_id, options)  \u21d2  Promise. Scorocode.Object   Returns :  Promise.{count: Number, docs: Array}  - Returns promise that returns the object:   \"count\" -  Number   -  number of removed objects  \"doc\" -  Array   - array of removed objects' Ids   { \n    count: 1, \n    docs: [  hejJU4BEGP  ] \n}", 
            "title": ".remove(options)"
        }, 
        {
            "location": "/JS/Scorocode.Object/#extendcollname-childobject", 
            "text": "Method for converting the Scorocode.Query sample data into individiual Scorocode.Object instances     Parameter  Type  Description      collName  String  Collection name    childObject  Object  Data to be converted     Example    var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   data   =   new   Scorocode . Query ( items );  data . find () \n     . then (( finded )   = { \n         var   objects   =   finded . result . map (( data ) = { \n             return   Scorocode . Object . extend ( items ,   data ) \n         }); \n         return   objects ; \n     }) \n     . then (( result )   =   { \n         console . log ( result ); \n     }) \n     . catch (( err ) = { \n         console . log ( err ) \n     });       See   new Object(collName)  .find(options)  \u21d2  Promise.{error: Boolean, limit: Number, skip: Number, result: [{Scorocode.Object}]}   Returns :  Scorocode.Object  - Returns Scorocode.Object", 
            "title": ".extend(collName, childObject)"
        }, 
        {
            "location": "/JS/Scorocode.Object/#setdata", 
            "text": "Method for transferring data to object     Parameter  Type  Description      data  Object  Data in {\"key\", \"value\"} format, where key is the collection field name.     Example    var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   questItem   =   new   Scorocode . Object ( items );   questItem . set ( _id ,   NseSaqqd5v ). set ( name ,   Water chip );   questItem . save () \n     . then (( success )   =   { \n          console . log ( success ); \n      }) \n     . catch (( error )   =   { \n          console . log ( error ) \n     });   See   new Object(collName)  .save(options)  \u21d2  Scorocode.Object", 
            "title": ".set(data)"
        }, 
        {
            "location": "/JS/Scorocode.Object/#pushkey-value", 
            "text": "Method for adding an element to an array     Parameter  Type  Description      key  String  Name of the field whose value should be updated    value  String / Number / Boolean / Date / Array / Object   Value of the new array element     Example    var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   Item   =   new   Scorocode . Object ( items );   Item . getById ( NseSaqqd5v ) \n     . then (( success ) = { \n         console . log ( success ); \n         Item . push ( arrayField ,   new element ); \n         Item . save () \n         . then (( saved ) = { \n             console . log ( saved ); \n         }) \n         . catch (( error )   =   { \n             console . log ( error ); \n         }) \n     }) \n     . catch (( error )   =   { \n             console . log ( error ) \n     });", 
            "title": ".push(key, value)"
        }, 
        {
            "location": "/JS/Scorocode.Object/#pullkey-value", 
            "text": "Method for removing all array elements whose values are the same as the specified one.     Parameter  Type  Description      key  String  Name of the field whose value should be updated    value  String / Number / Boolean / Date / Array / Object   Value to be removed     Example    var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   Item   =   new   Scorocode . Object ( items );   Item . getById ( MgYs9BEQUM ) \n     . then (( getted )   =   { \n         Item . pull ( arrayField ,   { Delete :   true }); \n         Item . save () \n             . then (( result )   =   { \n                 console . log ( result ); \n             }) \n             . catch (( error )   =   { \n                 console . log ( error ) \n             }); \n     })    \n     . catch (( error )   =   { \n          console . log ( error ) \n     });   Exceptions :   Error  \"For a new document use the method Set\"  Error  'Field must by a type of array'", 
            "title": ".pull(key, value)"
        }, 
        {
            "location": "/JS/Scorocode.Object/#pullallkey-value", 
            "text": "Method for removing all array elements whose values are the same as one of the specified values.     Parameter  Type  Description      key  String  Name of the field whose value should be updated    value  Array  Array of values to be removed     Example    var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   Item   =   new   Scorocode . Object ( items );   Item . getById ( CrT49joIxn ) \n     . then (( getted )   =   { \n         Item . pullAll ( arrayField ,   [ Delete me ,   42 ,   { important :   false }]); \n         Item . save () \n         . then (( result )   =   { \n             console . log ( result ); \n         }) \n         . catch (( error )   =   { \n             console . log ( error ) \n         }); \n     })    \n     . catch (( error )   =   { \n          console . log ( error ) \n     });   Exceptions :   Error  'For a new document use the method Set'  Error  'Field must by a type of array'  Error  'Value must by a type of array'", 
            "title": ".pullAll(key, value)"
        }, 
        {
            "location": "/JS/Scorocode.Object/#addtosetkey-value", 
            "text": "Method for adding an element to an array only if there are no elements with the same name in the array.     Parameter  Type  Description      key  String  Name of the field whose value should be updated    value  String / Number / Boolean / Date / Array / Object  Value of the added element     Example    var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   Item   =   new   Scorocode . Object ( items );   Item . getById ( CrT49joIxn ) \n     . then (( getted )   =   { \n         Item . addToSet ( arrayField ,   [ First element ,   { isSecond :   true }]); \n         Item . save () \n         . then (( result )   =   { \n             console . log ( result ); \n         }) \n         . catch (( error )   =   { \n             console . log ( error ) \n         }); \n     })    \n     . catch (( error )   =   { \n          console . log ( error ) \n     });   Exceptions :   Error  'For a new document use the method Set'  Error  'Field must by a type of array'", 
            "title": ".addToSet(key, value)"
        }, 
        {
            "location": "/JS/Scorocode.Object/#popkey-pos", 
            "text": "Method for removing the first or the last array element     Parameter  Type  Description      key  String  Name of the field whose value should be updated    pos  Number  Position of the element to be removed in the array: -1 for the first element and 1 for the last     Example  var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   getItem   =   new   Scorocode . Object ( items );   getItem . getById ( NseSaqqd5v ) \n     . then (( success ) = { \n         console . log ( success ); \n         getItem . pop ( arrayField ,   1 ); \n         getItem . save () \n         . then (( saved ) = { \n             console . log ( saved ); \n         }) \n         . catch (( error )   =   { \n             console . log ( error ); \n         }) \n     }) \n     . catch (( error )   =   { \n             console . log ( error ) \n     });   Exceptions :   Error  'For a new document use the method Set'  Error  'Field must by a type of array'", 
            "title": ".pop(key, pos)"
        }, 
        {
            "location": "/JS/Scorocode.Object/#inckey-amount", 
            "text": "The method increments the numeric field value by a defined number     Parameter  Type  Description      key  String  Name of the field whose value should be updated    amount  Number  Increment step     Example    var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   Item   =   new   Scorocode . Object ( items );   Item . getById ( gNxzwAfvDj ) \n     . then (( success ) = { \n         console . log ( Item . get ( price ));   //44.42 \n         Item . inc ( price ,   - 2.42 ); \n         Item . save () \n         . then (( incremented ) = { \n             console . log ( Item . get ( price ));   // 42 \n         }) \n         . catch (( error )   =   { \n             console . log ( error ); \n         }) \n     }) \n     . catch (( error )   =   { \n             console . log ( error ) \n     });   Exceptions :   Error  'For a new document use the method Set'  Error  'Field must by a type of number'", 
            "title": ".inc(key, amount)"
        }, 
        {
            "location": "/JS/Scorocode.Object/#currentdate", 
            "text": "Sets the current time as the field's value     Parameter  Type  Description      key  String  Name of the field whose value should be updated    type  String / Boolean  Date type. Accepts the following values: true, \"date\" or \"timestamp\"     Example    var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   Item   =   new   Scorocode . Object ( items );  Item . set ( _id ,   gNxzwAfvDj ). currentDate ( someDate ,   true );  Item . save () \n     . then (( success ) = { \n         console . log ( Item . get ( someDate ));   // 2016-05-27T14:10:00.013+03:00 \n     }) \n     . catch (( error )   =   { \n         console . log ( error ) \n     });   Exceptions :   Error  'For a new document use the method Set'  Error  'Invalid type'", 
            "title": ".currentDate()"
        }, 
        {
            "location": "/JS/Scorocode.Object/#mulkey-number", 
            "text": "The method multiplies the numeric field value by a defined number     Parameter  Type  Description      key  String  Name of the field whose value should be updated    number  Number  Multiplier     Example    var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   Item   =   new   Scorocode . Object ( items );   Item . getById ( 8Qcfll2GwE ) \n     . then (( success ) = { \n         console . log ( Item . get ( price ));   // 42 \n         Item . mul ( price ,   - 1 ); \n         Item . save () \n         . then (( incremented ) = { \n             console . log ( Item . get ( price ));   // -42 \n         }) \n         . catch (( error )   =   { \n             console . log ( error ); \n         }) \n     }) \n     . catch (( error )   =   { \n             console . log ( error ) \n     });   Exceptions :   Error  'For a new document use the method Set'  Error  'Field must by a type of number'  Error  'Value must by a type of number'", 
            "title": ".mul(key, number)"
        }, 
        {
            "location": "/JS/Scorocode.Object/#min", 
            "text": "The method updates the numeric field value only if the new value is less than the current field value     Parameter  Type  Description      key  String  Name of the field whose value should be updated    number  Number  New value     Example    var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   Item   =   new   Scorocode . Object ( items );   Item . getById ( CrT49joIxn ) \n     . then (( success ) = { \n         console . log ( Item . get ( price ));   // 42 \n         Item . min ( price ,   41.999 ); \n         Item . save () \n         . then (( changed ) = { \n             console . log ( Item . get ( price ));   // 41.999 \n         }) \n         . catch (( error )   =   { \n             console . log ( error ); \n         }) \n     }) \n     . catch (( error )   =   { \n             console . log ( error ) \n     });   Exceptions :   Error  'For a new document use the method Set'  Error  'Field must by a type of number'  Error  'Value must by a type of number'", 
            "title": ".min()"
        }, 
        {
            "location": "/JS/Scorocode.Object/#max", 
            "text": "The method updates the numeric field value only if the new value is greater than the current field value     Parameter  Type  Description      key  String  Name of the field whose value should be updated    number  Number  New value     Example    var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   Item   =   new   Scorocode . Object ( items );   Item . getById ( CrT49joIxn ) \n     . then (( success ) = { \n         console . log ( Item . get ( price ));   // 41.999 \n         Item . max ( price ,   40 ); \n         Item . save () \n         . then (( changed ) = { \n             console . log ( Item . get ( price ));   // 41.999 \n         }) \n         . catch (( error )   =   { \n             console . log ( error ); \n         }) \n     }) \n     . catch (( error )   =   { \n             console . log ( error ) \n     });   Exceptions :   Error  'For a new document use the method Set'  Error  'Field must by a type of number'  Error  'Value must by a type of number'", 
            "title": ".max()"
        }, 
        {
            "location": "/JS/Scorocode.Query/", 
            "text": ".Query\n\n\nnew Query(collName)\n \u21d2 \nScorocode.Object\n\n\n.find(options)\n \u21d2 \npromise.{error: Boolean, limit: Number, skip: Number, result: [{Scorocode.Object}]}\n\n\n.count(options)\n \u21d2 \npromise.{error: Boolean, result: Number}\n\n\n.update(Object, options)\n \u21d2 \npromise.{error: Boolean, result: {count: Number, docs: Array}}\n\n\n.remove(options)\n \u21d2 \npromise.{count: Number, docs: Array}\n \n\n\n.reset()\n \n\n\n.equalTo(field, value)\n \n\n\n.notEqualTo(field, value)\n \n\n\n.containedIn(field, value)\n \n\n\n.containsAll(field, value)\n \n\n\n.notContainedIn(field, value)\n \n\n\n.greaterThan(field, value)\n \n\n\n.greaterThanOrEqualTo(field, value)\n \n\n\n.lessThan(field, value)\n \n\n\n.lessThanOrEqualTo(field, value)\n \n\n\n.exists(field)\n \n\n\n.doesNotExist(field)\n \n\n\n.contains(field, value)\n \n\n\n.startsWith(field, value)\n \n\n\n.endsWith(field, value)\n \n\n\n.limit(limit)\n \n\n\n.skip(skip)\n\n\n.page(page)\n \n\n\n.ascending(field)\n\n\n.descending(field)\n \n\n\n.or(query)\n\n\n.and(query)\n \n\n\n.select()\n \n\n\n.raw(filter)\n \n\n\n\n\n\n\n\n\n\n\n\n\nnew Query(collName)\n\n\nInstance of a collection data query\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ncollName\n\n\nString\n\n\nCollection name\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \ndata\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\ndata\n.\nfind\n()\n\n    \n.\nthen\n((\nfinded\n)\n \n=\n{\n\n        \nconsole\n.\nlog\n(\nfinded\n);\n\n    \n})\n\n    \n.\ncatch\n((\nerr\n)\n=\n{\n\n        \nconsole\n.\nlog\n(\nerr\n)\n\n    \n});\n    \n\n\n\n\nReturns\n: \nScorocode.Query\n - Returns the \nScorocode.Query\n\n\nException\n:\n\n\n\n\nString\n 'Collection name must be a type of string'\n\n\n\n\n\n\n\n\n.find(options)\n\n\nMethod for requesting a document from a collection. Returns data of the objects that match the sampling criteria. If no criteria are set, the first 50 objects of the collection are returned by default.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nObject\n\n\nSuccess and error callbacks for the executed query.\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \ndata\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\ndata\n.\nfind\n()\n\n    \n.\nthen\n((\nfinded\n)\n \n=\n{\n\n        \nvar\n \nutil\n \n=\n \nrequire\n(\nutil\n);\n\n        \nconsole\n.\nlog\n(\nutil\n.\ninspect\n(\nfinded\n,\n \n{\nshowHidden\n:\n \nfalse\n,\n \ndepth\n:\n \nnull\n}))\n\n    \n})\n\n    \n.\ncatch\n((\nerr\n)\n=\n{\n\n        \nconsole\n.\nlog\n(\nerr\n)\n\n    \n});\n    \n\n\n\n\n\nReturns\n: \npromise.{error: Boolean, limit: Number, skip: Number, result: [{Scorocode.Object}]}\n - Returns promise, which returns the object containing the result of the query execution.\n\n\n\n\n\"error\" - \nBoolean\n - Error flag\n\n\n\"limit\" - \nNumber\n  - Sampling size limit\n\n\n\"skip\" - \nNumber\n  - How many documents were skipped during the sampling\n\n\n\"result\" - \nArray\n  - Obtained data array\n\n\n\n\n{ \n    error: false,\n    limit: 100,\n    skip: 0,\n    result:\n    [ \n       { _id: \nCrT49joIxn\n,\n           createdAt: Wed May 25 2016 17:24:17 GMT+0300 (RTZ 2 (\u0437\u0438\u043c\u0430)),\n           updatedAt: Wed May 25 2016 22:15:03 GMT+0300 (RTZ 2 (\u0437\u0438\u043c\u0430)),\n           readACL: [],\n           updateACL: [],\n           removeACL: [],\n           arrayField: [ false,\n,42.42,[1,2,3],[\nArray\n,{\n123\n: 4}],{ \nObject\n: true }],\n           price: 41.999 \n       },\n       // ...\n       { _id: \nNseSaqqd5v\n,\n           createdAt: Wed May 25 2016 17:24:17 GMT+0300 (RTZ 2 (\u0437\u0438\u043c\u0430)),\n           updatedAt: Wed May 25 2016 22:15:03 GMT+0300 (RTZ 2 (\u0437\u0438\u043c\u0430)),\n           readACL: [],\n           updateACL: [],\n           removeACL: []\n       } \n    ]\n}\n\n\n\n\n\n\n\n\n\n.count(options)\n\n\nMethod for counting objects that meet the query conditions.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nObject\n\n\nSuccess and error callbacks for the executed query.\n\n\n\n\n\n\n\n\nExample\n  \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \ncountItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\ncountItems\n.\nexists\n(\nprice\n)\n\n    \n.\ncount\n()\n\n        \n.\nthen\n((\ncounted\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\ncounted\n)\n \n// { error: false, result: 5 }\n\n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\nReturns\n: \npromise.{error: Boolean, result: Number}\n -  Returns promise, which returns the object containing the result of the query execution.\n\n\n\n\n\"error\" - \nBoolean\n - Error flag\n\n\n\"result\" - \nNumber\n  - Number of objects that meet the sampling condition.\n\n\n\n\n\n\n\n\n.update(Object, options)\n\n\nMethod for updating the requested objects.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nObject\n\n\nScorocode.UpdateOps\n\n\nScorocode.UpdateOps\n object to which the updated data is transferred.\n\n\n\n\n\n\noptions\n\n\nObject\n\n\nSuccess and error callbacks for the executed query.\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \nItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\nvar\n \nupdateItems\n \n=\n \nnew\n \nScorocode\n.\nUpdateOps\n(\nitems\n);\n\n\n\nItems\n.\nnotEqualTo\n(\nprice\n,\n \n42\n)\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nupdateItems\n.\nset\n(\nprice\n,\n \n42\n);\n\n            \nreturn\n \nItems\n.\nupdate\n(\nupdateItems\n)\n\n        \n})\n\n        \n.\nthen\n((\nupdated\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nupdated\n);\n\n        \n})\n \n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\nReturns\n: \npromise.{error: Boolean, result: {count: Number, docs: Array}}\n - Returns promise, which returns the object containing the result of the query execution.\n\n\n\n\n\"error\" - \nBoolean\n - Error flag\n\n\n\"result\" - \nObject\n  - Query execution result\n\n\n\"count\" - \nNumber\n  - Number of modified objects\n\n\n\"docs\" - \nArray\n  - _id array of modified objects\n\n\n\n\n\n\n\n\n{ error: false,\n  result:\n   { count: 8,\n     docs:[ \n        \nCrT49joIxn\n,\n        \n8Qcfll2GwE\n,\n        \ndMSYsK8jld\n,\n        \n6TFVG5UqV6\n,\n        \ngNxzwAfvDj\n,\n        \neoVWeg9oeY\n,\n        \nvRf58kEDpo\n,\n        \nabOkjQAnYE\n \n        ] \n    } \n}\n\n\n\n\n\n\n\n.remove(options)\n\n\nMethod for removing the requested objects.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nObject\n\n\nSuccess and error callbacks for the executed query.\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nItems\n.\nexists\n(\narrayField\n)\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nfinded\n)\n \n=\n \n{\n\n            \nItems\n.\nremove\n(\nfinded\n)\n\n                \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n                    \nconsole\n.\nlog\n(\nresult\n);\n\n                \n})\n  \n                \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n                    \nconsole\n.\nlog\n(\nerror\n)\n\n                \n});\n\n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n                \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\nReturns\n: \npromise.{ecount: Number, docs: Array}\n - Returns promise, which returns the object containing the result of the query execution.\n\n\n\n\n\"count\" - \nNumber\n  - Number of deleted objects\n\n\n\"docs\" - \nArray\n  - _id array of deleted objects\n\n\n\n\n{ \n    count: 4, \n    docs:[ \n        \nCrT49joIxn\n, \n        \neoVWeg9oeY\n, \n        \nvRf58kEDpo\n, \n        \nabOkjQAnYE\n\n        ] \n}\n\n\n\n\n\n\n\n\n\n.reset()\n\n\nMethod for resetting the sampling conditions\n\n\nExample\n  \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \ngetItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\ngetItems\n.\nequalTo\n(\nprice\n,\n \n42\n)\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nresult\n)\n\n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \ngetItems\n.\nreset\n()\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\n\n\n.equalTo(field, value)\n\n\nMethod for retrieving all objects with the field value indicated in the condition.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nName of the field for which a condition is defined\n\n\n\n\n\n\nvalue\n\n\nString / Number / Boolean / Date / Array / Object\n\n\nField value\n\n\n\n\n\n\n\n\nExample\n  \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \ngetItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\ngetItems\n.\nequalTo\n(\nprice\n,\n \n42\n)\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nresult\n)\n \n            \ngetItems\n.\nreset\n()\n\n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.notEqualTo(field, value)\n\n\nMethod for retrieving all objects except for objects with the field value indicated in the condition.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nName of the field for which a condition is defined\n\n\n\n\n\n\nvalue\n\n\nString / Number / Boolean / Date / Array / Object \n\n\nField value\n\n\n\n\n\n\n\n\nExample\n  \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \ngetItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\ngetItems\n.\nnotEqualTo\n(\nprice\n,\n \n42\n)\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nresult\n)\n \n// { error: false, result: 5 }\n\n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.containedIn(field, value)\n\n\nMethod for retrieving all objects whose field value contains the array elements specified in the query.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nName of the field for which a condition is defined\n\n\n\n\n\n\nvalue\n\n\nArray\n\n\nArray of values\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \ngetItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\ngetItems\n.\ncontainedIn\n(\nprice\n,[\n-\n42\n,\n \n41.999\n,\n \n42\n])\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nresult\n)\n \n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\nExceptions\n\n\n\n\nString\n 'Value must be of \u0422\u0438\u043f: Array'\n\n\n\n\n\n\n\n\n.containsAll(field, value)\n\n\nMethod for retrieving all objects whose field value contains all array elements specified in the query.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nName of the field for which a condition is defined\n\n\n\n\n\n\nvalue\n\n\nArray\n\n\nArray of values\n\n\n\n\n\n\n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \ngetItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\ngetItems\n.\ncontainsAll\n(\narrayField\n,[\n4\n,\n \n8\n,\n \n15\n,\n \n16\n,\n \n23\n,\n \n42\n])\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nresult\n)\n \n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\nExceptions\n:\n\n\n\n\nString\n 'Value must be of \u0422\u0438\u043f: Array'\n\n\n\n\n\n\n\n\n.notContainedIn(field, value)\n\n\nMethod for retrieving all objects whose field value does not contain the array elements specified in the query.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nName of the field for which a condition is defined\n\n\n\n\n\n\nvalue\n\n\nArray\n\n\nArray of values\n\n\n\n\n\n\n\n\nExample\n  \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \ngetItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\ngetItems\n.\nnotContainedIn\n(\nprice\n,[\n41.999\n,\n \n42\n])\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nresult\n)\n \n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\nExceptions\n:\n\n\n\n\nString\n 'Value must be of \u0422\u0438\u043f: Array'\n\n\n\n\n\n\n\n\n.greaterThan(field, value)\n\n\nMethod for retrieving all objects whose field value is greater than the number specified in the query.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nName of the field for which a condition is defined\n\n\n\n\n\n\nvalue\n\n\nNumber / Date\n\n\nCondition value\n\n\n\n\n\n\n\n\nExample\n  \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \ngetItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\ngetItems\n.\ngreaterThan\n(\ncreatedAt\n,\n \n2016-05-19T15:35:16.000Z\n)\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nresult\n)\n \n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.greaterThanOrEqualTo(field, value)\n\n\nMethod for retrieving all objects whose field value is no less than the number specified in the query.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nName of the field for which a condition is defined\n\n\n\n\n\n\nvalue\n\n\nNumber / Date\n\n\nCondition value\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \ngetItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\ngetItems\n.\ngreaterThanOrEqualTo\n(\nprice\n,\n \n41.999\n)\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nresult\n)\n \n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.lessThan(field, value)\n\n\nMethod for retrieving all objects whose field value is less than the number specified in the query.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nName of the field for which a condition is defined\n\n\n\n\n\n\nvalue\n\n\nNumber / Date\n\n\nCondition value\n\n\n\n\n\n\n\n\nExample\n  \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \ngetItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\ngetItems\n.\nlessThan\n(\nprice\n,\n \n41\n)\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nresult\n)\n \n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.lessThanOrEqualTo(field, value)\n\n\nMethod for retrieving all objects whose field value is no greater than the number specified in the query.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nName of the field for which a condition is defined\n\n\n\n\n\n\nvalue\n\n\nNumber / Date\n\n\nCondition value\n\n\n\n\n\n\n\n\nExample\n  \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \ngetItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\ngetItems\n.\nlessThanOrEqualTo\n(\nupdatedAt\n,\n \n2016-05-19T15:35:16.000Z\n)\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nresult\n)\n \n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.exists(field)\n\n\nMethod for retrieving all objects with an existing value of a defined field\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nName of the field for which a condition is defined\n\n\n\n\n\n\n\n\nExample\n \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \nItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\nItems\n.\nexists\n(\nprice\n)\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nresult\n)\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.doesNotExist(field)\n\n\nMethod for retrieving all objects with a missing value in a defined field.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nName of the field for which a condition is defined\n\n\n\n\n\n\n\n\nExample\n \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \nItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\nItems\n.\ndoesNotExist\n(\nprice\n)\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nresult\n)\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.contains(field, value)\n\n\nMethod for retrieving all objects with a value of a defined field that matches a defined regular expression.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nName of the field for which a condition is defined\n\n\n\n\n\n\nvalue\n\n\nString\n\n\nRegular expression\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \ngetItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\ngetItems\n.\ncontains\n(\nsomeString\n,\n[0-9]\n)\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nresult\n)\n \n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\nException\n:\n\n\n\n\nString\n '\"Value must be a string\"'\n\n\n\n\n\n\n\n\n.startsWith(field, value)\n\n\nMethod for retrieving all objects with a value of a defined field starting from a specified string.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nName of the field for which a condition is defined\n\n\n\n\n\n\nvalue\n\n\nString\n\n\nCondition value\n\n\n\n\n\n\n\n\nExample\n  \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \ngetItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\ngetItems\n.\nstartsWith\n(\nname\n,\n \nite\n);\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nresult\n)\n \n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\nException\n:\n\n\n\n\nString\n \"Value must be a string\"\n\n\n\n\n\n\n\n\n.endsWith(field, value)\n\n\nMethod for retrieving all objects with a value of a defined field ending with a specified string.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nField name\n\n\n\n\n\n\nvalue\n\n\nString\n\n\nCondition value\n\n\n\n\n\n\n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \ngetItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\ngetItems\n.\nendsWith\n(\nname\n,\n \n\u0447\u0438\u043f\n);\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nresult\n)\n \n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\nException\n:\n\n\n\n\nString\n \"Value must be a string\"\n\n\n\n\n\n\n\n\n.limit(limit)\n\n\nMethod for specifying a limit for the number of sampling objects\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nlimit\n\n\nNumber\n\n\nSampling limit\n\n\n\n\n\n\n\n\nExample\n \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \ngetItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\ngetItems\n.\nlimit\n(\n1000\n).\ncontains\n(\nsomeString\n,\n[a-zA-Z-0-9]\n)\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nresult\n)\n \n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\nException\n:\n\n\n\n\nString\n \"Limit must be a positive number\"\n\n\n\n\n\n\n\n\n.skip(skip)\n\n\nMethod for skipping some objects before sampling.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nskip\n\n\nNumber\n\n\nNumber of skipped objects\n\n\n\n\n\n\n\n\nExample\n  \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \ngetItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\ngetItems\n.\nlimit\n(\n1000\n).\nskip\n(\n1000\n).\ncontains\n(\nsomeString\n,\n[a-zA-Z-0-9]\n)\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nresult\n)\n \n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\nException\n\n\n\n\nString\n \"Skip must be a positive number\"\n\n\n\n\n\n\n\n\n.page(page)\n\n\nMethod for sampling results page by page\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\npage\n\n\nNumber\n\n\nPage number\n\n\n\n\n\n\n\n\nExample\n  \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \ngetItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\ngetItems\n.\nlimit\n(\n30\n).\npage\n(\n2\n).\ncontains\n(\nsomeString\n,\n[a-zA-Z-0-9]\n)\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nresult\n)\n \n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\nException\n:\n\n\n\n\nString\n \"Page must be a positive number\"\n\n\n\n\n\n\n\n\n.ascending(field)\n\n\nMethod for sorting a specified field data in ascending order before sampling.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nField name\n\n\n\n\n\n\n\n\nExample\n  \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \ngetItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\ngetItems\n.\nlimit\n(\n30\n).\nascending\n(\nupdatedAt\n).\npage\n(\n1\n).\ncontains\n(\nsomeString\n,\n[a-zA-Z-0-9]\n)\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nresult\n)\n \n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.descending(field)\n\n\nMethod for sorting a specified field data in descending order before sampling.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nField name\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \ngetItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\ngetItems\n.\nlimit\n(\n30\n).\ndescending\n(\nprice\n).\npage\n(\n1\n).\ncontains\n(\nsomeString\n,\n[a-zA-Z-0-9]\n)\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nresult\n)\n \n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.or(query)\n\n\nMethod for logical addition of several samplings conditions\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nquery\n\n\nScorocode.Query\n\n\nQuery that is included in the disjunction operation\n\n\n\n\n\n\n\n\nExample\n  \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \ngetItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\nvar\n \nrange1\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\nvar\n \nrange2\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\n\nvar\n \ngetItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\nrange1\n.\nlessThanOrEqualTo\n(\ncreatedAt\n,\n \n2016-05-19T10:00:00.000Z\n);\n\n\nrange2\n.\ngreaterThanOrEqualTo\n(\ncreatedAt\n,\n \n2016-05-21T15:00:00.000Z\n);\n\n\ngetItems\n.\nor\n(\nrange1\n).\nor\n(\nrange2\n)\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nresult\n)\n \n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\nException\n:\n\n\n\n\nString\n \"Invalid type of Query\"\n\n\n\n\n\n\n\n\n.and(query)\n\n\nMethod for logical multiplication of several samplings conditions\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nquery\n\n\nScorocode.Query\n\n\nQuery that is included in the conjunction operation\n\n\n\n\n\n\n\n\nExample\n  \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \ngetItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\nvar\n \nrange\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\nvar\n \nprice\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\n\nvar\n \ngetItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\nrange\n.\ngreaterThanOrEqualTo\n(\ncreatedAt\n,\n \n2016-05-19T10:00:00.000Z\n);\n\n\nprice\n.\ndoesNotExists\n(\nprice\n);\n\n\ngetItems\n.\nand\n(\nrange\n).\nand\n(\nprice\n)\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nresult\n)\n \n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.select()\n\n\nMethod for specifying a list of returned fields.\n\n\nExample\n  \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \ndata\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\ndata\n.\nselect\n(\nprice\n,\n \nreward\n).\nfind\n()\n\n    \n.\nthen\n((\nfinded\n)\n \n=\n{\n\n        \nconsole\n.\nlog\n(\nfinded\n);\n\n    \n})\n\n    \n.\ncatch\n((\nerr\n)\n=\n{\n\n        \nconsole\n.\nlog\n(\nerr\n)\n\n    \n});\n    \n\n\n\n\n\n\n\n\n\n.raw(filter)\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nfilter\n\n\nObject\n\n\nApplied filter in the MongoDB query language format\n\n\n\n\n\n\n\n\nExample\n  \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\n\nvar\n \nquery\n \n=\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\nquery\n.\nraw\n(\n{ \\\nfieldString\\\n : \\\nString\\\n }\n);\n\n\nquery\n.\nfind\n()\n\n    \n.\nthen\n((\nfinded\n)\n \n=\n{\n\n        \nconsole\n.\nlog\n(\nfinded\n);\n\n    \n})\n\n    \n.\ncatch\n((\nerr\n)\n=\n{\n\n        \nconsole\n.\nlog\n(\nerr\n)\n\n    \n});", 
            "title": "Scorocode.Query"
        }, 
        {
            "location": "/JS/Scorocode.Query/#new-querycollname", 
            "text": "Instance of a collection data query     Parameter  Type  Description      collName  String  Collection name     Example  var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   data   =   new   Scorocode . Query ( items );  data . find () \n     . then (( finded )   = { \n         console . log ( finded ); \n     }) \n     . catch (( err ) = { \n         console . log ( err ) \n     });       Returns :  Scorocode.Query  - Returns the  Scorocode.Query  Exception :   String  'Collection name must be a type of string'", 
            "title": "new Query(collName)"
        }, 
        {
            "location": "/JS/Scorocode.Query/#findoptions", 
            "text": "Method for requesting a document from a collection. Returns data of the objects that match the sampling criteria. If no criteria are set, the first 50 objects of the collection are returned by default.     Parameter  Type  Description      options  Object  Success and error callbacks for the executed query.     Example  var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   data   =   new   Scorocode . Query ( items );  data . find () \n     . then (( finded )   = { \n         var   util   =   require ( util ); \n         console . log ( util . inspect ( finded ,   { showHidden :   false ,   depth :   null })) \n     }) \n     . catch (( err ) = { \n         console . log ( err ) \n     });       Returns :  promise.{error: Boolean, limit: Number, skip: Number, result: [{Scorocode.Object}]}  - Returns promise, which returns the object containing the result of the query execution.   \"error\" -  Boolean  - Error flag  \"limit\" -  Number   - Sampling size limit  \"skip\" -  Number   - How many documents were skipped during the sampling  \"result\" -  Array   - Obtained data array   { \n    error: false,\n    limit: 100,\n    skip: 0,\n    result:\n    [ \n       { _id:  CrT49joIxn ,\n           createdAt: Wed May 25 2016 17:24:17 GMT+0300 (RTZ 2 (\u0437\u0438\u043c\u0430)),\n           updatedAt: Wed May 25 2016 22:15:03 GMT+0300 (RTZ 2 (\u0437\u0438\u043c\u0430)),\n           readACL: [],\n           updateACL: [],\n           removeACL: [],\n           arrayField: [ false, ,42.42,[1,2,3],[ Array ,{ 123 : 4}],{  Object : true }],\n           price: 41.999 \n       },\n       // ...\n       { _id:  NseSaqqd5v ,\n           createdAt: Wed May 25 2016 17:24:17 GMT+0300 (RTZ 2 (\u0437\u0438\u043c\u0430)),\n           updatedAt: Wed May 25 2016 22:15:03 GMT+0300 (RTZ 2 (\u0437\u0438\u043c\u0430)),\n           readACL: [],\n           updateACL: [],\n           removeACL: []\n       } \n    ]\n}", 
            "title": ".find(options)"
        }, 
        {
            "location": "/JS/Scorocode.Query/#countoptions", 
            "text": "Method for counting objects that meet the query conditions.     Parameter  Type  Description      options  Object  Success and error callbacks for the executed query.     Example     var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   countItems   =   new   Scorocode . Query ( items );  countItems . exists ( price ) \n     . count () \n         . then (( counted )   =   { \n             console . log ( counted )   // { error: false, result: 5 } \n         }) \n         . catch (( error )   =   { \n             console . log ( error ) \n         });   Returns :  promise.{error: Boolean, result: Number}  -  Returns promise, which returns the object containing the result of the query execution.   \"error\" -  Boolean  - Error flag  \"result\" -  Number   - Number of objects that meet the sampling condition.", 
            "title": ".count(options)"
        }, 
        {
            "location": "/JS/Scorocode.Query/#updateobject-options", 
            "text": "Method for updating the requested objects.     Parameter  Type  Description      Object  Scorocode.UpdateOps  Scorocode.UpdateOps  object to which the updated data is transferred.    options  Object  Success and error callbacks for the executed query.     Example  var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   Items   =   new   Scorocode . Query ( items );  var   updateItems   =   new   Scorocode . UpdateOps ( items );  Items . notEqualTo ( price ,   42 ) \n     . find () \n         . then (( result )   =   { \n             updateItems . set ( price ,   42 ); \n             return   Items . update ( updateItems ) \n         }) \n         . then (( updated )   =   { \n             console . log ( updated ); \n         })  \n         . catch (( error )   =   { \n             console . log ( error ) \n         });   Returns :  promise.{error: Boolean, result: {count: Number, docs: Array}}  - Returns promise, which returns the object containing the result of the query execution.   \"error\" -  Boolean  - Error flag  \"result\" -  Object   - Query execution result  \"count\" -  Number   - Number of modified objects  \"docs\" -  Array   - _id array of modified objects", 
            "title": ".update(Object, options)"
        }, 
        {
            "location": "/JS/Scorocode.Query/#error-false-result-count-8-docs-crt49joixn-8qcfll2gwe-dmsysk8jld-6tfvg5uqv6-gnxzwafvdj-eovweg9oey-vrf58kedpo-abokjqanye", 
            "text": "", 
            "title": "{ error: false,"
        }, 
        {
            "location": "/JS/Scorocode.Query/#removeoptions", 
            "text": "Method for removing the requested objects.     Parameter  Type  Description      options  Object  Success and error callbacks for the executed query.     Example  var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  Items . exists ( arrayField ) \n     . find () \n         . then (( finded )   =   { \n             Items . remove ( finded ) \n                 . then (( result )   =   { \n                     console . log ( result ); \n                 })   \n                 . catch (( error )   =   { \n                     console . log ( error ) \n                 }); \n         }) \n         . catch (( error )   =   { \n                 console . log ( error ) \n         });   Returns :  promise.{ecount: Number, docs: Array}  - Returns promise, which returns the object containing the result of the query execution.   \"count\" -  Number   - Number of deleted objects  \"docs\" -  Array   - _id array of deleted objects   { \n    count: 4, \n    docs:[ \n         CrT49joIxn , \n         eoVWeg9oeY , \n         vRf58kEDpo , \n         abOkjQAnYE \n        ] \n}", 
            "title": ".remove(options)"
        }, 
        {
            "location": "/JS/Scorocode.Query/#reset", 
            "text": "Method for resetting the sampling conditions  Example", 
            "title": ".reset()"
        }, 
        {
            "location": "/JS/Scorocode.Query/#var-scorocode-requirescorocode-scorocodeinit-applicationid-applicationid-javascriptkey-javascriptkey-var-getitems-new-scorocodequeryitems-getitemsequaltoprice-42-find-thenresult-consolelogresult-catcherror-getitemsreset-consolelogerror", 
            "text": "", 
            "title": "var Scorocode = require(&#39;scorocode&#39;);"
        }, 
        {
            "location": "/JS/Scorocode.Query/#equaltofield-value", 
            "text": "Method for retrieving all objects with the field value indicated in the condition.     Parameter  Type  Description      field  String  Name of the field for which a condition is defined    value  String / Number / Boolean / Date / Array / Object  Field value     Example     var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   getItems   =   new   Scorocode . Query ( items );  getItems . equalTo ( price ,   42 ) \n     . find () \n         . then (( result )   =   { \n             console . log ( result )  \n             getItems . reset () \n         }) \n         . catch (( error )   =   { \n             console . log ( error ) \n         });", 
            "title": ".equalTo(field, value)"
        }, 
        {
            "location": "/JS/Scorocode.Query/#notequaltofield-value", 
            "text": "Method for retrieving all objects except for objects with the field value indicated in the condition.     Parameter  Type  Description      field  String  Name of the field for which a condition is defined    value  String / Number / Boolean / Date / Array / Object   Field value     Example     var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   getItems   =   new   Scorocode . Query ( items );  getItems . notEqualTo ( price ,   42 ) \n     . find () \n         . then (( result )   =   { \n             console . log ( result )   // { error: false, result: 5 } \n         }) \n         . catch (( error )   =   { \n             console . log ( error ) \n         });", 
            "title": ".notEqualTo(field, value)"
        }, 
        {
            "location": "/JS/Scorocode.Query/#containedinfield-value", 
            "text": "Method for retrieving all objects whose field value contains the array elements specified in the query.     Parameter  Type  Description      field  String  Name of the field for which a condition is defined    value  Array  Array of values     Example  var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   getItems   =   new   Scorocode . Query ( items );  getItems . containedIn ( price ,[ - 42 ,   41.999 ,   42 ]) \n     . find () \n         . then (( result )   =   { \n             console . log ( result )  \n         }) \n         . catch (( error )   =   { \n             console . log ( error ) \n         });   Exceptions   String  'Value must be of \u0422\u0438\u043f: Array'", 
            "title": ".containedIn(field, value)"
        }, 
        {
            "location": "/JS/Scorocode.Query/#containsallfield-value", 
            "text": "Method for retrieving all objects whose field value contains all array elements specified in the query.     Parameter  Type  Description      field  String  Name of the field for which a condition is defined    value  Array  Array of values     var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   getItems   =   new   Scorocode . Query ( items );  getItems . containsAll ( arrayField ,[ 4 ,   8 ,   15 ,   16 ,   23 ,   42 ]) \n     . find () \n         . then (( result )   =   { \n             console . log ( result )  \n         }) \n         . catch (( error )   =   { \n             console . log ( error ) \n         });   Exceptions :   String  'Value must be of \u0422\u0438\u043f: Array'", 
            "title": ".containsAll(field, value)"
        }, 
        {
            "location": "/JS/Scorocode.Query/#notcontainedinfield-value", 
            "text": "Method for retrieving all objects whose field value does not contain the array elements specified in the query.     Parameter  Type  Description      field  String  Name of the field for which a condition is defined    value  Array  Array of values     Example     var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   getItems   =   new   Scorocode . Query ( items );  getItems . notContainedIn ( price ,[ 41.999 ,   42 ]) \n     . find () \n         . then (( result )   =   { \n             console . log ( result )  \n         }) \n         . catch (( error )   =   { \n             console . log ( error ) \n         });   Exceptions :   String  'Value must be of \u0422\u0438\u043f: Array'", 
            "title": ".notContainedIn(field, value)"
        }, 
        {
            "location": "/JS/Scorocode.Query/#greaterthanfield-value", 
            "text": "Method for retrieving all objects whose field value is greater than the number specified in the query.     Parameter  Type  Description      field  String  Name of the field for which a condition is defined    value  Number / Date  Condition value     Example     var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   getItems   =   new   Scorocode . Query ( items );  getItems . greaterThan ( createdAt ,   2016-05-19T15:35:16.000Z ) \n     . find () \n         . then (( result )   =   { \n             console . log ( result )  \n         }) \n         . catch (( error )   =   { \n             console . log ( error ) \n         });", 
            "title": ".greaterThan(field, value)"
        }, 
        {
            "location": "/JS/Scorocode.Query/#greaterthanorequaltofield-value", 
            "text": "Method for retrieving all objects whose field value is no less than the number specified in the query.     Parameter  Type  Description      field  String  Name of the field for which a condition is defined    value  Number / Date  Condition value     Example  var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   getItems   =   new   Scorocode . Query ( items );  getItems . greaterThanOrEqualTo ( price ,   41.999 ) \n     . find () \n         . then (( result )   =   { \n             console . log ( result )  \n         }) \n         . catch (( error )   =   { \n             console . log ( error ) \n         });", 
            "title": ".greaterThanOrEqualTo(field, value)"
        }, 
        {
            "location": "/JS/Scorocode.Query/#lessthanfield-value", 
            "text": "Method for retrieving all objects whose field value is less than the number specified in the query.     Parameter  Type  Description      field  String  Name of the field for which a condition is defined    value  Number / Date  Condition value     Example     var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   getItems   =   new   Scorocode . Query ( items );  getItems . lessThan ( price ,   41 ) \n     . find () \n         . then (( result )   =   { \n             console . log ( result )  \n         }) \n         . catch (( error )   =   { \n             console . log ( error ) \n         });", 
            "title": ".lessThan(field, value)"
        }, 
        {
            "location": "/JS/Scorocode.Query/#lessthanorequaltofield-value", 
            "text": "Method for retrieving all objects whose field value is no greater than the number specified in the query.     Parameter  Type  Description      field  String  Name of the field for which a condition is defined    value  Number / Date  Condition value     Example     var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   getItems   =   new   Scorocode . Query ( items );  getItems . lessThanOrEqualTo ( updatedAt ,   2016-05-19T15:35:16.000Z ) \n     . find () \n         . then (( result )   =   { \n             console . log ( result )  \n         }) \n         . catch (( error )   =   { \n             console . log ( error ) \n         });", 
            "title": ".lessThanOrEqualTo(field, value)"
        }, 
        {
            "location": "/JS/Scorocode.Query/#existsfield", 
            "text": "Method for retrieving all objects with an existing value of a defined field     Parameter  Type  Description      field  String  Name of the field for which a condition is defined     Example    var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   Items   =   new   Scorocode . Query ( items );  Items . exists ( price ) \n     . find () \n         . then (( result )   =   { \n             console . log ( result ) \n         . catch (( error )   =   { \n             console . log ( error ) \n         });", 
            "title": ".exists(field)"
        }, 
        {
            "location": "/JS/Scorocode.Query/#doesnotexistfield", 
            "text": "Method for retrieving all objects with a missing value in a defined field.     Parameter  Type  Description      field  String  Name of the field for which a condition is defined     Example    var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   Items   =   new   Scorocode . Query ( items );  Items . doesNotExist ( price ) \n     . find () \n         . then (( result )   =   { \n             console . log ( result ) \n         . catch (( error )   =   { \n             console . log ( error ) \n         });", 
            "title": ".doesNotExist(field)"
        }, 
        {
            "location": "/JS/Scorocode.Query/#containsfield-value", 
            "text": "Method for retrieving all objects with a value of a defined field that matches a defined regular expression.     Parameter  Type  Description      field  String  Name of the field for which a condition is defined    value  String  Regular expression     Example  var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   getItems   =   new   Scorocode . Query ( items );  getItems . contains ( someString , [0-9] ) \n     . find () \n         . then (( result )   =   { \n             console . log ( result )  \n         }) \n         . catch (( error )   =   { \n             console . log ( error ) \n         });   Exception :   String  '\"Value must be a string\"'", 
            "title": ".contains(field, value)"
        }, 
        {
            "location": "/JS/Scorocode.Query/#startswithfield-value", 
            "text": "Method for retrieving all objects with a value of a defined field starting from a specified string.     Parameter  Type  Description      field  String  Name of the field for which a condition is defined    value  String  Condition value     Example     var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   getItems   =   new   Scorocode . Query ( items );  getItems . startsWith ( name ,   ite ); \n     . find () \n         . then (( result )   =   { \n             console . log ( result )  \n         }) \n         . catch (( error )   =   { \n             console . log ( error ) \n         });   Exception :   String  \"Value must be a string\"", 
            "title": ".startsWith(field, value)"
        }, 
        {
            "location": "/JS/Scorocode.Query/#endswithfield-value", 
            "text": "Method for retrieving all objects with a value of a defined field ending with a specified string.     Parameter  Type  Description      field  String  Field name    value  String  Condition value     var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   getItems   =   new   Scorocode . Query ( items );  getItems . endsWith ( name ,   \u0447\u0438\u043f ); \n     . find () \n         . then (( result )   =   { \n             console . log ( result )  \n         }) \n         . catch (( error )   =   { \n             console . log ( error ) \n         });   Exception :   String  \"Value must be a string\"", 
            "title": ".endsWith(field, value)"
        }, 
        {
            "location": "/JS/Scorocode.Query/#limitlimit", 
            "text": "Method for specifying a limit for the number of sampling objects     Parameter  Type  Description      limit  Number  Sampling limit     Example    var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   getItems   =   new   Scorocode . Query ( items );  getItems . limit ( 1000 ). contains ( someString , [a-zA-Z-0-9] ) \n     . find () \n         . then (( result )   =   { \n             console . log ( result )  \n         }) \n         . catch (( error )   =   { \n             console . log ( error ) \n         });   Exception :   String  \"Limit must be a positive number\"", 
            "title": ".limit(limit)"
        }, 
        {
            "location": "/JS/Scorocode.Query/#skipskip", 
            "text": "Method for skipping some objects before sampling.     Parameter  Type  Description      skip  Number  Number of skipped objects     Example     var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   getItems   =   new   Scorocode . Query ( items );  getItems . limit ( 1000 ). skip ( 1000 ). contains ( someString , [a-zA-Z-0-9] ) \n     . find () \n         . then (( result )   =   { \n             console . log ( result )  \n         }) \n         . catch (( error )   =   { \n             console . log ( error ) \n         });   Exception   String  \"Skip must be a positive number\"", 
            "title": ".skip(skip)"
        }, 
        {
            "location": "/JS/Scorocode.Query/#pagepage", 
            "text": "Method for sampling results page by page     Parameter  Type  Description      page  Number  Page number     Example     var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   getItems   =   new   Scorocode . Query ( items );  getItems . limit ( 30 ). page ( 2 ). contains ( someString , [a-zA-Z-0-9] ) \n     . find () \n         . then (( result )   =   { \n             console . log ( result )  \n         }) \n         . catch (( error )   =   { \n             console . log ( error ) \n         });   Exception :   String  \"Page must be a positive number\"", 
            "title": ".page(page)"
        }, 
        {
            "location": "/JS/Scorocode.Query/#ascendingfield", 
            "text": "Method for sorting a specified field data in ascending order before sampling.     Parameter  Type  Description      field  String  Field name     Example     var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   getItems   =   new   Scorocode . Query ( items );  getItems . limit ( 30 ). ascending ( updatedAt ). page ( 1 ). contains ( someString , [a-zA-Z-0-9] ) \n     . find () \n         . then (( result )   =   { \n             console . log ( result )  \n         }) \n         . catch (( error )   =   { \n             console . log ( error ) \n         });", 
            "title": ".ascending(field)"
        }, 
        {
            "location": "/JS/Scorocode.Query/#descendingfield", 
            "text": "Method for sorting a specified field data in descending order before sampling.     Parameter  Type  Description      field  String  Field name     Example  var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   getItems   =   new   Scorocode . Query ( items );  getItems . limit ( 30 ). descending ( price ). page ( 1 ). contains ( someString , [a-zA-Z-0-9] ) \n     . find () \n         . then (( result )   =   { \n             console . log ( result )  \n         }) \n         . catch (( error )   =   { \n             console . log ( error ) \n         });", 
            "title": ".descending(field)"
        }, 
        {
            "location": "/JS/Scorocode.Query/#orquery", 
            "text": "Method for logical addition of several samplings conditions     Parameter  Type  Description      query  Scorocode.Query  Query that is included in the disjunction operation     Example     var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   getItems   =   new   Scorocode . Query ( items );  var   range1   =   new   Scorocode . Query ( items );  var   range2   =   new   Scorocode . Query ( items );  var   getItems   =   new   Scorocode . Query ( items );  range1 . lessThanOrEqualTo ( createdAt ,   2016-05-19T10:00:00.000Z );  range2 . greaterThanOrEqualTo ( createdAt ,   2016-05-21T15:00:00.000Z );  getItems . or ( range1 ). or ( range2 ) \n     . find () \n         . then (( result )   =   { \n             console . log ( result )  \n         }) \n         . catch (( error )   =   { \n             console . log ( error ) \n         });   Exception :   String  \"Invalid type of Query\"", 
            "title": ".or(query)"
        }, 
        {
            "location": "/JS/Scorocode.Query/#andquery", 
            "text": "Method for logical multiplication of several samplings conditions     Parameter  Type  Description      query  Scorocode.Query  Query that is included in the conjunction operation     Example     var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   getItems   =   new   Scorocode . Query ( items );  var   range   =   new   Scorocode . Query ( items );  var   price   =   new   Scorocode . Query ( items );  var   getItems   =   new   Scorocode . Query ( items );  range . greaterThanOrEqualTo ( createdAt ,   2016-05-19T10:00:00.000Z );  price . doesNotExists ( price );  getItems . and ( range ). and ( price ) \n     . find () \n         . then (( result )   =   { \n             console . log ( result )  \n         }) \n         . catch (( error )   =   { \n             console . log ( error ) \n         });", 
            "title": ".and(query)"
        }, 
        {
            "location": "/JS/Scorocode.Query/#select", 
            "text": "Method for specifying a list of returned fields.  Example     var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   data   =   new   Scorocode . Query ( items );  data . select ( price ,   reward ). find () \n     . then (( finded )   = { \n         console . log ( finded ); \n     }) \n     . catch (( err ) = { \n         console . log ( err ) \n     });", 
            "title": ".select()"
        }, 
        {
            "location": "/JS/Scorocode.Query/#rawfilter", 
            "text": "Parameter  Type  Description      filter  Object  Applied filter in the MongoDB query language format     Example     var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   query   =   Scorocode . Query ( items );  query . raw ( { \\ fieldString\\  : \\ String\\  } );  query . find () \n     . then (( finded )   = { \n         console . log ( finded ); \n     }) \n     . catch (( err ) = { \n         console . log ( err ) \n     });", 
            "title": ".raw(filter)"
        }, 
        {
            "location": "/JS/Scorocode.UpdateOps/", 
            "text": ".UpdateOps\n\n\n.set(data)\n\n\n.push(key, value)\n \n\n\n.pull(key, value)\n \n\n\n.pullAll(key, value)\n \n\n\n.addToSet(key, value)\n \n\n\n.pop(key, pos)\n \n\n\n.inc(key, amount)\n\n\n.currentDate()\n\n\n.mul(key, number)\n\n\n.min()\n\n\n.max()\n\n\n\n\n\n\n\n\n\n\n\n\nnew UpdateOps()\n\n\nClass for multiple object update operations\n\n\nExample\n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \nItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\nvar\n \nupdateItems\n \n=\n \nnew\n \nScorocode\n.\nUpdateOps\n(\nitems\n);\n\n\n\nItems\n.\nnotEqualTo\n(\nprice\n,\n \n42\n)\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nupdateItems\n.\nset\n(\nprice\n,\n \n42\n);\n\n            \nreturn\n \nItems\n.\nupdate\n(\nupdateItems\n)\n\n        \n})\n\n        \n.\nthen\n((\nupdated\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nupdated\n);\n\n        \n})\n \n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\n\u0427\u0442\u043e-\u0442\u043e \u043f\u043e\u0448\u043b\u043e \u043d\u0435 \u0442\u0430\u043a: \\n\n,\n \nerror\n)\n\n        \n});\n\n\n\n\n\n\nReturns\n: \nUpdateOps\n - Returns the Scorocode.UpdateOps instance  \n\n\n\n\n\n\n.set(data)\n\n\nMethod for transferring data to object\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ndata\n\n\nObject\n\n\nData in {\"key\", \"value\"} format, where key is the collection field name.\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \nItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\nvar\n \nupdateItems\n \n=\n \nnew\n \nScorocode\n.\nUpdateOps\n(\nitems\n);\n\n\n\nItems\n.\nnotEqualTo\n(\nprice\n,\n \n42\n)\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nupdateItems\n.\nset\n(\nprice\n,\n \n42\n);\n\n            \nreturn\n \nItems\n.\nupdate\n(\nupdateItems\n)\n\n        \n})\n\n        \n.\nthen\n((\nupdated\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nupdated\n);\n\n        \n})\n \n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\nSee\n\n\n\n\nnew Object(collName)\n\n\n.save(options)\n \u21d2 \nScorocode.UpdateOps\n\n\n\n\n\n\n\n\n.push(key, value)\n\n\nMethod for adding an element to an array\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nString\n\n\nName of the field whose value should be updated\n\n\n\n\n\n\nvalue\n\n\nString / Number / Boolean / Date / Array / Object \n\n\nValue of the new array element\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \nItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\nvar\n \nupdateItems\n \n=\n \nnew\n \nScorocode\n.\nUpdateOps\n(\nitems\n);\n\n\n\nItems\n.\nexists\n(\narrayField\n)\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nupdateItems\n.\npush\n(\narrayField\n,\n \nNew element\n);\n\n            \nreturn\n \nItems\n.\nupdate\n(\nupdateItems\n)\n\n        \n})\n\n        \n.\nthen\n((\nupdated\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nupdated\n);\n\n        \n})\n \n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.pull(key, value)\n\n\nMethod for removing all array elements whose values are the same as the specified one.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nString\n\n\nName of the field whose value should be updated\n\n\n\n\n\n\nvalue\n\n\nString / Number / Boolean / Date / Array / Object \n\n\nValue to be removed\n\n\n\n\n\n\n\n\nExample\n \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \nItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\nvar\n \nupdateItems\n \n=\n \nnew\n \nScorocode\n.\nUpdateOps\n(\nitems\n);\n\n\n\nItems\n.\nexists\n(\narrayField\n)\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nupdateItems\n.\npull\n(\narrayField\n,\n \n{\n\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u044d\u0442\u043e\u0442 \u043e\u0431\u044a\u0435\u043a\u0442\n:\n \ntrue\n});\n\n            \nreturn\n \nItems\n.\nupdate\n(\nupdateItems\n)\n\n        \n})\n\n        \n.\nthen\n((\nupdated\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nupdated\n);\n\n        \n})\n \n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\n\u0427\u0442\u043e-\u0442\u043e \u043f\u043e\u0448\u043b\u043e \u043d\u0435 \u0442\u0430\u043a: \\n\n,\n \nerror\n)\n\n        \n});\n\n\n\n\n\n\nExceptions\n:\n\n\n\n\nError\n \"For a new document use the method Set\"\n\n\nError\n 'Field must by a type of array'\n\n\n\n\n\n\n\n\n.pullAll(key, value)\n\n\nMethod for removing all array elements whose values are the same as one of the specified values.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nString\n\n\nName of the field whose value should be updated\n\n\n\n\n\n\nvalue\n\n\nArray\n\n\nArray of values to be removed\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \nItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\nvar\n \nupdateItems\n \n=\n \nnew\n \nScorocode\n.\nUpdateOps\n(\nitems\n);\n\n\n\nItems\n.\nexists\n(\narrayField\n)\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nupdateItems\n.\npullAll\n(\narrayField\n,\n \n[\nDelete me\n,\n \n42\n,\n \n{\nImportant\n:\n \nfalse\n}]);\n\n            \nreturn\n \nItems\n.\nupdate\n(\nupdateItems\n)\n\n        \n})\n\n        \n.\nthen\n((\nupdated\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nupdated\n);\n\n        \n})\n \n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\nExceptions\n:\n\n\n\n\nError\n 'For a new document use the method Set'\n\n\nError\n 'Field must by a type of array'\n\n\nError\n 'Value must by a type of array'\n\n\n\n\n\n\n\n\n.addToSet(key, value)\n\n\nMethod for adding an element to an array only if there are no elements with the same name in the array.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nString\n\n\nName of the field whose value should be updated\n\n\n\n\n\n\nvalue\n\n\nString / Number / Boolean / Date / Array / Object\n\n\nValue of the added element\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \nItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\nvar\n \nupdateItems\n \n=\n \nnew\n \nScorocode\n.\nUpdateOps\n(\nitems\n);\n\n\n\nItems\n.\nexists\n(\narrayField\n)\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nupdateItems\n.\naddToSet\n(\narrayField\n,\n \n[\nFirst element of new element\n,\n \n{\nisSecond\n:\n \ntrue\n}]);\n\n            \nreturn\n \nItems\n.\nupdate\n(\nupdateItems\n)\n\n        \n})\n\n        \n.\nthen\n((\nupdated\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nupdated\n);\n\n        \n})\n \n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\nExceptions\n:\n\n\n\n\nError\n 'For a new document use the method Set'\n\n\nError\n 'Field must by a type of array'\n\n\n\n\n\n\n\n\n.pop(key, pos)\n\n\nMethod for removing the first or the last array element\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nString\n\n\nName of the field whose value should be updated\n\n\n\n\n\n\npos\n\n\nNumber\n\n\nPosition of the element to be removed in the array: -1 for the first element and 1 for the last\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \nItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\nvar\n \nupdateItems\n \n=\n \nnew\n \nScorocode\n.\nUpdateOps\n(\nitems\n);\n\n\n\nItems\n.\nexists\n(\narrayField\n)\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nupdateItems\n.\npop\n(\narrayField\n,\n \n1\n);\n\n            \nreturn\n \nItems\n.\nupdate\n(\nupdateItems\n)\n\n        \n})\n\n        \n.\nthen\n((\nupdated\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nupdated\n);\n\n        \n})\n \n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\nExceptions\n:\n\n\n\n\nError\n 'For a new document use the method Set'\n\n\nError\n 'Field must by a type of array'\n\n\n\n\n\n\n\n\n.inc(key, amount)\n\n\nThe method increments the numeric field value by a defined number\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nString\n\n\nName of the field whose value should be updated\n\n\n\n\n\n\namount\n\n\nNumber\n\n\nIncrement step\n\n\n\n\n\n\n\n\nExample\n \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \nItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\nvar\n \nupdateItems\n \n=\n \nnew\n \nScorocode\n.\nUpdateOps\n(\nitems\n);\n\n\n\nItems\n.\nexists\n(\nprice\n)\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nupdateItems\n.\ninc\n(\nprice\n,\n \n-\n2.42\n);\n\n            \nreturn\n \nItems\n.\nupdate\n(\nupdateItems\n)\n\n        \n})\n\n        \n.\nthen\n((\nupdated\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nupdated\n);\n\n        \n})\n \n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\nExceptions\n:\n\n\n\n\nError\n 'For a new document use the method Set'\n\n\nError\n 'Field must by a type of number'\n\n\n\n\n\n\n\n\n.currentDate()\n\n\nSets the current time as the field's value\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nString\n\n\nName of the field whose value should be updated\n\n\n\n\n\n\ntype\n\n\nString / Boolean\n\n\nDate type. Accepts the following values: true, \"date\" or \"timestamp\"\n\n\n\n\n\n\n\n\nExample\n:\n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \nItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\nvar\n \nupdateItems\n \n=\n \nnew\n \nScorocode\n.\nUpdateOps\n(\nitems\n);\n\n\n\nItems\n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nupdateItems\n.\ncurrentDate\n(\nsomeDate\n,\n \ntimestamp\n);\n\n            \nreturn\n \nItems\n.\nupdate\n(\nupdateItems\n)\n\n        \n})\n\n        \n.\nthen\n((\nupdated\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nupdated\n);\n\n        \n})\n \n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\nExceptions\n:\n\n\n\n\nError\n 'For a new document use the method Set'\n\n\nError\n 'Invalid type'\n\n\n\n\n\n\n\n\n.mul(key, number)\n\n\nThe method multiplies the numeric field value by a defined number\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nString\n\n\nName of the field whose value should be updated\n\n\n\n\n\n\nnumber\n\n\nNumber\n\n\nMultiplier\n\n\n\n\n\n\n\n\nExample\n  \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \nItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\nvar\n \nupdateItems\n \n=\n \nnew\n \nScorocode\n.\nUpdateOps\n(\nitems\n);\n\n\n\nItems\n.\nexists\n(\nprice\n)\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nupdateItems\n.\nmul\n(\nprice\n,\n \n0.5\n);\n\n            \nreturn\n \nItems\n.\nupdate\n(\nupdateItems\n)\n\n        \n})\n\n        \n.\nthen\n((\nupdated\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nupdated\n);\n\n        \n})\n \n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\nExceptions\n:\n\n\n\n\nError\n 'For a new document use the method Set'\n\n\nError\n 'Field must by a type of number'\n\n\nError\n 'Value must by a type of number'\n\n\n\n\n\n\n\n\n.min()\n\n\nThe method updates the numeric field value only if the new value is less than the current field value\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nString\n\n\nName of the field whose value should be updated\n\n\n\n\n\n\nnumber\n\n\nNumber\n\n\nNew value\n\n\n\n\n\n\n\n\nExample\n  \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \nItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\nvar\n \nupdateItems\n \n=\n \nnew\n \nScorocode\n.\nUpdateOps\n(\nitems\n);\n\n\n\nItems\n.\nexists\n(\nprice\n)\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nupdateItems\n.\nmin\n(\nprice\n,\n \n42\n);\n\n            \nreturn\n \nItems\n.\nupdate\n(\nupdateItems\n)\n\n        \n})\n\n        \n.\nthen\n((\nupdated\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nupdated\n);\n\n        \n})\n \n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\nExceptions\n:\n\n\n\n\nError\n 'For a new document use the method Set'\n\n\nError\n 'Field must by a type of number'\n\n\nError\n 'Value must by a type of number'\n\n\n\n\n\n\n\n\n.max()\n\n\nThe method updates the numeric field value only if the new value is greater than the current field value\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nkey\n\n\nString\n\n\nName of the field whose value should be updated\n\n\n\n\n\n\nnumber\n\n\nNumber\n\n\nNew value\n\n\n\n\n\n\n\n\nExample\n  \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \nItems\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nitems\n);\n\n\nvar\n \nupdateItems\n \n=\n \nnew\n \nScorocode\n.\nUpdateOps\n(\nitems\n);\n\n\n\nItems\n.\nexists\n(\nprice\n)\n\n    \n.\nfind\n()\n\n        \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n            \nupdateItems\n.\nmax\n(\nprice\n,\n \n42\n);\n\n            \nreturn\n \nItems\n.\nupdate\n(\nupdateItems\n)\n\n        \n})\n\n        \n.\nthen\n((\nupdated\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nupdated\n);\n\n        \n})\n \n        \n.\ncatch\n((\nerror\n)\n \n=\n \n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\nExceptions\n:\n\n\n\n\nError\n 'For a new document use the method Set'\n\n\nError\n 'Field must by a type of number'\n\n\nError\n 'Value must by a type of number'", 
            "title": "Scorocode.UpdateOps"
        }, 
        {
            "location": "/JS/Scorocode.UpdateOps/#new-updateops", 
            "text": "Class for multiple object update operations  Example  var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   Items   =   new   Scorocode . Query ( items );  var   updateItems   =   new   Scorocode . UpdateOps ( items );  Items . notEqualTo ( price ,   42 ) \n     . find () \n         . then (( result )   =   { \n             updateItems . set ( price ,   42 ); \n             return   Items . update ( updateItems ) \n         }) \n         . then (( updated )   =   { \n             console . log ( updated ); \n         })  \n         . catch (( error )   =   { \n             console . log ( \u0427\u0442\u043e-\u0442\u043e \u043f\u043e\u0448\u043b\u043e \u043d\u0435 \u0442\u0430\u043a: \\n ,   error ) \n         });   Returns :  UpdateOps  - Returns the Scorocode.UpdateOps instance", 
            "title": "new UpdateOps()"
        }, 
        {
            "location": "/JS/Scorocode.UpdateOps/#setdata", 
            "text": "Method for transferring data to object     Parameter  Type  Description      data  Object  Data in {\"key\", \"value\"} format, where key is the collection field name.     Example  var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   Items   =   new   Scorocode . Query ( items );  var   updateItems   =   new   Scorocode . UpdateOps ( items );  Items . notEqualTo ( price ,   42 ) \n     . find () \n         . then (( result )   =   { \n             updateItems . set ( price ,   42 ); \n             return   Items . update ( updateItems ) \n         }) \n         . then (( updated )   =   { \n             console . log ( updated ); \n         })  \n         . catch (( error )   =   { \n             console . log ( error ) \n         });   See   new Object(collName)  .save(options)  \u21d2  Scorocode.UpdateOps", 
            "title": ".set(data)"
        }, 
        {
            "location": "/JS/Scorocode.UpdateOps/#pushkey-value", 
            "text": "Method for adding an element to an array     Parameter  Type  Description      key  String  Name of the field whose value should be updated    value  String / Number / Boolean / Date / Array / Object   Value of the new array element     Example  var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   Items   =   new   Scorocode . Query ( items );  var   updateItems   =   new   Scorocode . UpdateOps ( items );  Items . exists ( arrayField ) \n     . find () \n         . then (( result )   =   { \n             updateItems . push ( arrayField ,   New element ); \n             return   Items . update ( updateItems ) \n         }) \n         . then (( updated )   =   { \n             console . log ( updated ); \n         })  \n         . catch (( error )   =   { \n             console . log ( error ) \n         });", 
            "title": ".push(key, value)"
        }, 
        {
            "location": "/JS/Scorocode.UpdateOps/#pullkey-value", 
            "text": "Method for removing all array elements whose values are the same as the specified one.     Parameter  Type  Description      key  String  Name of the field whose value should be updated    value  String / Number / Boolean / Date / Array / Object   Value to be removed     Example    var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   Items   =   new   Scorocode . Query ( items );  var   updateItems   =   new   Scorocode . UpdateOps ( items );  Items . exists ( arrayField ) \n     . find () \n         . then (( result )   =   { \n             updateItems . pull ( arrayField ,   { \u0423\u0434\u0430\u043b\u0438\u0442\u044c \u044d\u0442\u043e\u0442 \u043e\u0431\u044a\u0435\u043a\u0442 :   true }); \n             return   Items . update ( updateItems ) \n         }) \n         . then (( updated )   =   { \n             console . log ( updated ); \n         })  \n         . catch (( error )   =   { \n             console . log ( \u0427\u0442\u043e-\u0442\u043e \u043f\u043e\u0448\u043b\u043e \u043d\u0435 \u0442\u0430\u043a: \\n ,   error ) \n         });   Exceptions :   Error  \"For a new document use the method Set\"  Error  'Field must by a type of array'", 
            "title": ".pull(key, value)"
        }, 
        {
            "location": "/JS/Scorocode.UpdateOps/#pullallkey-value", 
            "text": "Method for removing all array elements whose values are the same as one of the specified values.     Parameter  Type  Description      key  String  Name of the field whose value should be updated    value  Array  Array of values to be removed     Example  var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   Items   =   new   Scorocode . Query ( items );  var   updateItems   =   new   Scorocode . UpdateOps ( items );  Items . exists ( arrayField ) \n     . find () \n         . then (( result )   =   { \n             updateItems . pullAll ( arrayField ,   [ Delete me ,   42 ,   { Important :   false }]); \n             return   Items . update ( updateItems ) \n         }) \n         . then (( updated )   =   { \n             console . log ( updated ); \n         })  \n         . catch (( error )   =   { \n             console . log ( error ) \n         });   Exceptions :   Error  'For a new document use the method Set'  Error  'Field must by a type of array'  Error  'Value must by a type of array'", 
            "title": ".pullAll(key, value)"
        }, 
        {
            "location": "/JS/Scorocode.UpdateOps/#addtosetkey-value", 
            "text": "Method for adding an element to an array only if there are no elements with the same name in the array.     Parameter  Type  Description      key  String  Name of the field whose value should be updated    value  String / Number / Boolean / Date / Array / Object  Value of the added element     Example  var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   Items   =   new   Scorocode . Query ( items );  var   updateItems   =   new   Scorocode . UpdateOps ( items );  Items . exists ( arrayField ) \n     . find () \n         . then (( result )   =   { \n             updateItems . addToSet ( arrayField ,   [ First element of new element ,   { isSecond :   true }]); \n             return   Items . update ( updateItems ) \n         }) \n         . then (( updated )   =   { \n             console . log ( updated ); \n         })  \n         . catch (( error )   =   { \n             console . log ( error ) \n         });   Exceptions :   Error  'For a new document use the method Set'  Error  'Field must by a type of array'", 
            "title": ".addToSet(key, value)"
        }, 
        {
            "location": "/JS/Scorocode.UpdateOps/#popkey-pos", 
            "text": "Method for removing the first or the last array element     Parameter  Type  Description      key  String  Name of the field whose value should be updated    pos  Number  Position of the element to be removed in the array: -1 for the first element and 1 for the last     Example  var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   Items   =   new   Scorocode . Query ( items );  var   updateItems   =   new   Scorocode . UpdateOps ( items );  Items . exists ( arrayField ) \n     . find () \n         . then (( result )   =   { \n             updateItems . pop ( arrayField ,   1 ); \n             return   Items . update ( updateItems ) \n         }) \n         . then (( updated )   =   { \n             console . log ( updated ); \n         })  \n         . catch (( error )   =   { \n             console . log ( error ) \n         });   Exceptions :   Error  'For a new document use the method Set'  Error  'Field must by a type of array'", 
            "title": ".pop(key, pos)"
        }, 
        {
            "location": "/JS/Scorocode.UpdateOps/#inckey-amount", 
            "text": "The method increments the numeric field value by a defined number     Parameter  Type  Description      key  String  Name of the field whose value should be updated    amount  Number  Increment step     Example    var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   Items   =   new   Scorocode . Query ( items );  var   updateItems   =   new   Scorocode . UpdateOps ( items );  Items . exists ( price ) \n     . find () \n         . then (( result )   =   { \n             updateItems . inc ( price ,   - 2.42 ); \n             return   Items . update ( updateItems ) \n         }) \n         . then (( updated )   =   { \n             console . log ( updated ); \n         })  \n         . catch (( error )   =   { \n             console . log ( error ) \n         });   Exceptions :   Error  'For a new document use the method Set'  Error  'Field must by a type of number'", 
            "title": ".inc(key, amount)"
        }, 
        {
            "location": "/JS/Scorocode.UpdateOps/#currentdate", 
            "text": "Sets the current time as the field's value     Parameter  Type  Description      key  String  Name of the field whose value should be updated    type  String / Boolean  Date type. Accepts the following values: true, \"date\" or \"timestamp\"     Example :  var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   Items   =   new   Scorocode . Query ( items );  var   updateItems   =   new   Scorocode . UpdateOps ( items );  Items . find () \n         . then (( result )   =   { \n             updateItems . currentDate ( someDate ,   timestamp ); \n             return   Items . update ( updateItems ) \n         }) \n         . then (( updated )   =   { \n             console . log ( updated ); \n         })  \n         . catch (( error )   =   { \n             console . log ( error ) \n         });   Exceptions :   Error  'For a new document use the method Set'  Error  'Invalid type'", 
            "title": ".currentDate()"
        }, 
        {
            "location": "/JS/Scorocode.UpdateOps/#mulkey-number", 
            "text": "The method multiplies the numeric field value by a defined number     Parameter  Type  Description      key  String  Name of the field whose value should be updated    number  Number  Multiplier     Example     var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   Items   =   new   Scorocode . Query ( items );  var   updateItems   =   new   Scorocode . UpdateOps ( items );  Items . exists ( price ) \n     . find () \n         . then (( result )   =   { \n             updateItems . mul ( price ,   0.5 ); \n             return   Items . update ( updateItems ) \n         }) \n         . then (( updated )   =   { \n             console . log ( updated ); \n         })  \n         . catch (( error )   =   { \n             console . log ( error ) \n         });   Exceptions :   Error  'For a new document use the method Set'  Error  'Field must by a type of number'  Error  'Value must by a type of number'", 
            "title": ".mul(key, number)"
        }, 
        {
            "location": "/JS/Scorocode.UpdateOps/#min", 
            "text": "The method updates the numeric field value only if the new value is less than the current field value     Parameter  Type  Description      key  String  Name of the field whose value should be updated    number  Number  New value     Example     var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   Items   =   new   Scorocode . Query ( items );  var   updateItems   =   new   Scorocode . UpdateOps ( items );  Items . exists ( price ) \n     . find () \n         . then (( result )   =   { \n             updateItems . min ( price ,   42 ); \n             return   Items . update ( updateItems ) \n         }) \n         . then (( updated )   =   { \n             console . log ( updated ); \n         })  \n         . catch (( error )   =   { \n             console . log ( error ) \n         });   Exceptions :   Error  'For a new document use the method Set'  Error  'Field must by a type of number'  Error  'Value must by a type of number'", 
            "title": ".min()"
        }, 
        {
            "location": "/JS/Scorocode.UpdateOps/#max", 
            "text": "The method updates the numeric field value only if the new value is greater than the current field value     Parameter  Type  Description      key  String  Name of the field whose value should be updated    number  Number  New value     Example     var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   Items   =   new   Scorocode . Query ( items );  var   updateItems   =   new   Scorocode . UpdateOps ( items );  Items . exists ( price ) \n     . find () \n         . then (( result )   =   { \n             updateItems . max ( price ,   42 ); \n             return   Items . update ( updateItems ) \n         }) \n         . then (( updated )   =   { \n             console . log ( updated ); \n         })  \n         . catch (( error )   =   { \n             console . log ( error ) \n         });   Exceptions :   Error  'For a new document use the method Set'  Error  'Field must by a type of number'  Error  'Value must by a type of number'", 
            "title": ".max()"
        }, 
        {
            "location": "/JS/Scorocode.User/", 
            "text": ".User\n\n\nnew User()\n\n\n.signup(options)\n \u21d2 \npromise.\nScorocode.User\n\n\n.login(email, password, options)\n \u21d2 \npromise.\nScorocode.User\n\n\n.logout(options)\n \n\n\n\n\n\n\n\n\n\n\n\n\nnew User()\n\n\nClass for application user handling.\n\n\nExample\n  \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \nappUser\n \n=\n \nnew\n \nScorocode\n.\nUser\n();\n\n\nappUser\n.\nset\n(\nemail\n,\n \nuser@mailserver.domain\n).\nset\n(\npassword\n,\n \n52c7ab3dab2c\n).\nset\n(\nusername\n,\n \nChosenOne\n);\n\n\nappUser\n.\nsignup\n()\n\n    \n.\nthen\n((\nsuccess\n)\n=\n{\n\n        \nconsole\n.\nlog\n(\nsuccess\n);\n\n    \n})\n\n    \n.\ncatch\n((\nerror\n)\n=\n{\n\n        \nconsole\n.\nlog\n(\nerror\n)\n\n    \n});\n\n\n\n\n\n\n\n\n\n\n.signup(options)\n\n\nMethod for application user registration.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\ncallback\n\n\nObject\n\n\n\n\nSuccess and error callbacks for the executed query.\n\n\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \nappUser\n \n=\n \nnew\n \nScorocode\n.\nUser\n();\n\n\nappUser\n.\nset\n(\nemail\n,\n \nuser@domain.zone\n).\nset\n(\npassword\n,\n \nCorrectHorseBatteryStaple\n).\nset\n(\nusername\n,\n \nChosenOne\n);\n\n\nappUser\n.\nsignup\n()\n\n    \n.\nthen\n((\nsuccess\n)\n=\n{\n\n        \nconsole\n.\nlog\n(\nsuccess\n);\n\n    \n})\n\n    \n.\ncatch\n((\nerror\n)\n=\n{\n\n        \nconsole\n.\nlog\n(\nerror\n)\n\n    \n});\n\n\n\n\n\n\n\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\n \npromise.{Scorocode.User}\n - returns promise that returns \nScorocode.User\n data\n\n\n\n\n\n\n.login(email, password, options)\n\n\nMethod for application user authentication and user session retrieval.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nemail\n\n\nString\n\n\nMandatory\n\n\nUser email\n\n\n\"user@domain.zone\"\n\n\n\n\n\n\npassword\n\n\nString\n\n\nMandatory\n\n\nUser password\n\n\n\"CorrectHorseBatteryStaple\"\n\n\n\n\n\n\ncallback\n\n\nObject\n\n\n\n\nSuccess and error callbacks for the executed query.\n\n\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n\n\n});\n\n\n\nvar\n \nappUser\n \n=\n \nnew\n \nScorocode\n.\nUser\n();\n\n\nappUser\n.\nlogin\n(\nuser@domain.zone\n,\n \nCorrectHorseBatteryStaple\n)\n\n    \n.\nthen\n((\nloggedIn\n)\n=\n{\n\n        \nconsole\n.\nlog\n(\nUser successfully logged in \\n\n,\n \nloggedIn\n);\n\n        \nsetTimeout\n(\n \nfunction\n \n()\n \n{\n\n            \nappUser\n.\nlogout\n()\n\n                \n.\nthen\n((\nloggedOut\n)\n=\n{\n\n                    \nconsole\n.\nlog\n(\nUser successfully logged out \\n\n);\n\n                \n})\n\n                \n.\ncatch\n((\nerrLogout\n)\n=\n{\n\n                    \nconsole\n.\nlog\n(\nerrLogout\n)\n\n                \n});\n\n            \n},\n10000\n);\n\n    \n})\n\n    \n.\ncatch\n((\nerrLogin\n)\n=\n{\n\n        \nconsole\n.\nlog\n(\nerrLogin\n)\n\n    \n});\n\n\n\n\n\n\nReturns\n \npromise.{Scorocode.User}\n -  returns promise that returns \nScorocode.User\n data\n\n\n\n\n\n\n.logout(options)\n\n\nMethod for application user deauthentication and user session deletion.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\ncallback\n\n\nObject\n\n\n\n\nSuccess and error callbacks for the executed query.\n\n\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nappUser\n \n=\n \nnew\n \nScorocode\n.\nUser\n();\n\n\nappUser\n.\nlogin\n(\nuser@domain.zone\n,\n \nCorrectHorseBatteryStaple\n)\n\n    \n.\nthen\n((\nloggedIn\n)\n=\n{\n\n        \nconsole\n.\nlog\n(\nUser successfully logged in \\n\n,\n \nloggedIn\n);\n\n        \nsetTimeout\n(\n \nfunction\n \n()\n \n{\n\n            \nappUser\n.\nlogout\n()\n\n                \n.\nthen\n((\nloggedOut\n)\n=\n{\n\n                    \nconsole\n.\nlog\n(\nUser successfully logged out \\n\n);\n\n                \n})\n\n                \n.\ncatch\n((\nerrLogout\n)\n=\n{\n\n                    \nconsole\n.\nlog\n(\nerrLogout\n)\n\n                \n});\n\n            \n},\n10000\n);\n\n    \n})\n\n    \n.\ncatch\n((\nerrLogin\n)\n=\n{\n\n        \nconsole\n.\nlog\n(\nerrLogin\n)\n\n    \n});", 
            "title": "Scorocode.User"
        }, 
        {
            "location": "/JS/Scorocode.User/#new-user", 
            "text": "Class for application user handling.  Example     var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   appUser   =   new   Scorocode . User ();  appUser . set ( email ,   user@mailserver.domain ). set ( password ,   52c7ab3dab2c ). set ( username ,   ChosenOne );  appUser . signup () \n     . then (( success ) = { \n         console . log ( success ); \n     }) \n     . catch (( error ) = { \n         console . log ( error ) \n     });", 
            "title": "new User()"
        }, 
        {
            "location": "/JS/Scorocode.User/#signupoptions", 
            "text": "Method for application user registration.     Parameter  Type  Properties  Description  Value example      callback  Object   Success and error callbacks for the executed query.      Example  var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   appUser   =   new   Scorocode . User ();  appUser . set ( email ,   user@domain.zone ). set ( password ,   CorrectHorseBatteryStaple ). set ( username ,   ChosenOne );  appUser . signup () \n     . then (( success ) = { \n         console . log ( success ); \n     }) \n     . catch (( error ) = { \n         console . log ( error ) \n     });    \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442   promise.{Scorocode.User}  - returns promise that returns  Scorocode.User  data", 
            "title": ".signup(options)"
        }, 
        {
            "location": "/JS/Scorocode.User/#loginemail-password-options", 
            "text": "Method for application user authentication and user session retrieval.     Parameter  Type  Properties  Description  Value example      email  String  Mandatory  User email  \"user@domain.zone\"    password  String  Mandatory  User password  \"CorrectHorseBatteryStaple\"    callback  Object   Success and error callbacks for the executed query.      Example  var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey  });  var   appUser   =   new   Scorocode . User ();  appUser . login ( user@domain.zone ,   CorrectHorseBatteryStaple ) \n     . then (( loggedIn ) = { \n         console . log ( User successfully logged in \\n ,   loggedIn ); \n         setTimeout (   function   ()   { \n             appUser . logout () \n                 . then (( loggedOut ) = { \n                     console . log ( User successfully logged out \\n ); \n                 }) \n                 . catch (( errLogout ) = { \n                     console . log ( errLogout ) \n                 }); \n             }, 10000 ); \n     }) \n     . catch (( errLogin ) = { \n         console . log ( errLogin ) \n     });   Returns   promise.{Scorocode.User}  -  returns promise that returns  Scorocode.User  data", 
            "title": ".login(email, password, options)"
        }, 
        {
            "location": "/JS/Scorocode.User/#logoutoptions", 
            "text": "Method for application user deauthentication and user session deletion.     Parameter  Type  Properties  Description  Value example      callback  Object   Success and error callbacks for the executed query.      Example  var   appUser   =   new   Scorocode . User ();  appUser . login ( user@domain.zone ,   CorrectHorseBatteryStaple ) \n     . then (( loggedIn ) = { \n         console . log ( User successfully logged in \\n ,   loggedIn ); \n         setTimeout (   function   ()   { \n             appUser . logout () \n                 . then (( loggedOut ) = { \n                     console . log ( User successfully logged out \\n ); \n                 }) \n                 . catch (( errLogout ) = { \n                     console . log ( errLogout ) \n                 }); \n             }, 10000 ); \n     }) \n     . catch (( errLogin ) = { \n         console . log ( errLogin ) \n     });", 
            "title": ".logout(options)"
        }, 
        {
            "location": "/JS/Scorocode.Messenger/", 
            "text": "Messenger\n\n\nnew Messenger()\n\n\n.sendPush(options, callbacks)\n \u21d2 \n{error: Boolean, count: Number}\n\n\n.sendSms(options, callbacks)\n \u21d2 \n{error: Boolean, count: Number}\n\n\n\n\n\n\n\n\n\n\n\n\nnew Messenger()\n\n\nClass for message sending\n\n\nExample\n\n\nvar\n \nBroadcast\n \n=\n \nnew\n \nScorocode\n.\nMessenger\n();\n\n\n\n\n\n\n\n\n\n\n.sendPush(options, callbacks)\n\n\nPush sending method\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nObject\n\n\nMessage parameters\n\n\n\n\n\n\ncallbacks\n\n\nObject\n\n\nSuccess and error callbacks for the executed query.\n\n\n\n\n\n\n\n\nExample\n  \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n,\n\n    \nMessageKey\n:\n \nmessageKey\n\n\n});\n\n\n\nvar\n \nDevices\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\ndevices\n);\n\n\nvar\n \nBroadcast\n \n=\n \nnew\n \nScorocode\n.\nMessenger\n();\n\n\nBroadcast\n.\nsendPush\n({\n\n        \nwhere\n:\n \nDevices\n,\n\n        \ndata\n:\n \n{\n\n            \ndata\n:\n \n{\n\n                \nmessage\n:\n \nPUSH text!\n,\n\n                \n}\n           \n            \n}\n\n        \n})\n\n        \n.\nthen\n((\nsuccess\n)\n=\n{\n\n            \nconsole\n.\nlog\n(\nsuccess\n);\n\n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n=\n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\nReturns\n: \npromise.{error: Boolean, count: Number}\n - Returns promise, which returns the object containing the result of the query execution.\n\n\n\n\n\"error\" - \nBoolean\n - Error flag\n\n\n\"count\" - \nNumber\n  - Number of messages sent\n\n\n\n\nException\n:\n\n\n\n\nString\n 'Invalid options type'\n\n\nString\n 'Where must be a type of Query'\n\n\nString\n 'Invalid data type'\n\n\nString\n 'Missing subject or text message'\n\n\n\n\n\n\n\n\n.sendSms(options, callbacks)\n\n\nSMS sending method\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\n\n\n\n\n\n\n\n\noptions\n\n\nObject\n\n\nMessage parameters\n\n\n\n\n\n\ncallbacks\n\n\nObject\n\n\nSuccess and error callbacks for the executed query.\n\n\n\n\n\n\n\n\nExample\n  \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n,\n\n    \nMessageKey\n:\n \nmessageKey\n\n\n});\n\n\n\nvar\n \nfindUsers\n \n=\n \nnew\n \nScorocode\n.\nQuery\n(\nusers\n);\n\n\nvar\n \nBroadcast\n \n=\n \nnew\n \nScorocode\n.\nMessenger\n();\n\n\nBroadcast\n.\nsendPush\n({\n\n        \nwhere\n:\n \nfindUsers\n,\n\n        \ndata\n:\n \n{\n\n            \ntext\n:\n \nSMS text\n     \n            \n}\n\n        \n})\n\n        \n.\nthen\n((\nsuccess\n)\n=\n{\n\n            \nconsole\n.\nlog\n(\nsuccess\n);\n\n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n=\n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n\n\n\n\n\n\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\n: \n{error: Boolean, count: Number}\n - Returns promise, which returns the object containing the result of the query execution.\n\n\n\n\n\"error\" - \nBoolean\n - Error flag\n\n\n\"count\" - \nNumber\n  - Number of messages sent", 
            "title": "Scorocode.Messenger"
        }, 
        {
            "location": "/JS/Scorocode.Messenger/#new-messenger", 
            "text": "Class for message sending  Example  var   Broadcast   =   new   Scorocode . Messenger ();", 
            "title": "new Messenger()"
        }, 
        {
            "location": "/JS/Scorocode.Messenger/#sendpushoptions-callbacks", 
            "text": "Push sending method     Parameter  Type  Properties      options  Object  Message parameters    callbacks  Object  Success and error callbacks for the executed query.     Example     var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey , \n     MessageKey :   messageKey  });  var   Devices   =   new   Scorocode . Query ( devices );  var   Broadcast   =   new   Scorocode . Messenger ();  Broadcast . sendPush ({ \n         where :   Devices , \n         data :   { \n             data :   { \n                 message :   PUSH text! , \n                 }            \n             } \n         }) \n         . then (( success ) = { \n             console . log ( success ); \n         }) \n         . catch (( error ) = { \n             console . log ( error ) \n         });   Returns :  promise.{error: Boolean, count: Number}  - Returns promise, which returns the object containing the result of the query execution.   \"error\" -  Boolean  - Error flag  \"count\" -  Number   - Number of messages sent   Exception :   String  'Invalid options type'  String  'Where must be a type of Query'  String  'Invalid data type'  String  'Missing subject or text message'", 
            "title": ".sendPush(options, callbacks)"
        }, 
        {
            "location": "/JS/Scorocode.Messenger/#sendsmsoptions-callbacks", 
            "text": "SMS sending method     Parameter  Type  Properties      options  Object  Message parameters    callbacks  Object  Success and error callbacks for the executed query.     Example     var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey , \n     MessageKey :   messageKey  });  var   findUsers   =   new   Scorocode . Query ( users );  var   Broadcast   =   new   Scorocode . Messenger ();  Broadcast . sendPush ({ \n         where :   findUsers , \n         data :   { \n             text :   SMS text      \n             } \n         }) \n         . then (( success ) = { \n             console . log ( success ); \n         }) \n         . catch (( error ) = { \n             console . log ( error ) \n         });   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 :  {error: Boolean, count: Number}  - Returns promise, which returns the object containing the result of the query execution.   \"error\" -  Boolean  - Error flag  \"count\" -  Number   - Number of messages sent", 
            "title": ".sendSms(options, callbacks)"
        }, 
        {
            "location": "/JS/Scorocode.CloudCode/", 
            "text": "Class for handling server-side scripts \n\n\nContents:\n\n\n\n\n.CloudCode\n\n\nnew CloudCode(id)\n\n\n.run(pool, callbacks)\n \u21d2 \npromise.{error: Boolean}\n\n\n\n\n\n\n\n\n\n\n\n\nnew CloudCode(id)\n\n\nCreates a new subclass of Scorocode.CloudCode() for the given script identifier\n\n\nReturns\n: \nScorocode.CloudCode\n - Returns new Scorocode.CloudCode instance\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nid\n\n\nString\n\n\nServer-side script identifier\n\n\n\n\n\n\nlogger\n\n\nObject\n\n\nLogger object for debugging\n\n\n\n\n\n\n\n\n\n\n\n\n.run(pool, debug, callbacks)\n\n\nServer code running method\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\npool\n\n\nObject\n\n\nObject with the data that will be passed to the server-side script\n\n\n\n\n\n\ndebug\n\n\nBoolean\n\n\nFlag for debug mode\n\n\n\n\n\n\ncallbacks\n\n\nObject\n\n\nSuccess and error callbacks for the executed query\n\n\n\n\n\n\n\n\nExample\n\n\n// \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u043c SDK \u0438 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u043c \u0435\u0433\u043e. \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n,\n\n    \nScriptKey\n:\n \nscriptKey\n\n\n});\n\n\n\nvar\n \nPrompt\n \n=\n \nrequire\n(\nprompt\n);\n\n\nPrompt\n.\nstart\n();\n\n\nPrompt\n.\nget\n([\nemail\n,\n \npassword\n,\n \nusername\n],\n \nfunction\n \n(\nerr\n,\n \nresult\n)\n \n{\n\n    \nvar\n \nnewUserRegistration\n \n=\n \nnew\n \nScorocode\n.\nCloudCode\n(\n574860d2781267d34f7a2415\n);\n\n    \nvar\n \npool\n \n=\n \n{\n\n        \nemail\n:\nresult\n.\nemail\n,\n\n        \npassword\n:\nresult\n.\npassword\n,\n\n        \nusername\n:\nresult\n.\nusername\n\n    \n};\n\n    \nnewUserRegistration\n.\nrun\n(\npool\n)\n\n        \n.\nthen\n((\nsuccess\n)\n=\n{\n\n            \nconsole\n.\nlog\n(\nsuccess\n);\n\n        \n})\n\n        \n.\ncatch\n((\nerror\n)\n=\n{\n\n            \nconsole\n.\nlog\n(\nerror\n)\n\n        \n});\n\n  \n});\n\n\n\n\n\n\nReturns\n: \npromise.{error: Boolean}\n - Returns promise that returns object \n\n\n{\n\n    \nerror\n:\n \nfalse\n\n\n}\n\n\n\n\n\n\nExceptions\n:\n\n\n\n\nString\n 'Invalid type of pool'\n\n\n\n\n\n\nDebug\n\n\n\u041f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 JavaScript SDK \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u0430 \u043e\u0442\u043b\u0430\u0434\u043a\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043f\u0440\u0438 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e\n\nScorocode.Init({})\n \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0435\u0449\u0435 \u0434\u0432\u0430 \u043a\u043b\u044e\u0447\u0430: \nMasterKey\n \u0438 \nWebSocketKey\n. \u042d\u0442\u043e \u0441\u0432\u044f\u0437\u0430\u043d\u043e \u0441 \u0442\u0435\u043c, \u0447\u0442\u043e\n\u043a\u043e\u043d\u0441\u043e\u043b\u044c\u043d\u044b\u0439 \u0432\u044b\u0432\u043e\u0434 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c\u043e\u0433\u043e \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u0430 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0447\u0435\u0440\u0435\u0437 websockets \u043d\u0430 \u0432\u044b\u0437\u044b\u0432\u0430\u044e\u0449\u0435\u0433\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0430.\n\n\n\u0414\u043b\u044f \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0440\u0435\u0436\u0438\u043c\u0430 \u043e\u0442\u043b\u0430\u0434\u043a\u0438 \u0442\u0430\u043a\u0436\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043e\u0431\u044a\u0435\u043a\u0442 \nLogger\n.\n\n\nExample\n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n,\n\n    \nScriptKey\n:\n \nscriptKey\n\n    \nMasterKey\n:\n \nmasterKey\n \n// necessary for debug\n\n    \nWebSocketKey\n:\n \nwebsocketKey\n \n// necessary for debug\n\n\n});\n\n\n\nvar\n \nPrompt\n \n=\n \nrequire\n(\nprompt\n);\n\n\nPrompt\n.\nstart\n();\n\n\nPrompt\n.\nget\n([\nemail\n,\n \npassword\n,\n \nusername\n],\n \nfunction\n \n(\nerr\n,\n \nresult\n)\n \n{\n\n\n\n// \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043d\u043e\u0432\u044b\u0439 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u043c\u0443 \u0441\u043a\u0440\u0438\u043f\u0442\u0443 \n574860d2781267d34f7a2415\n.\n\n\n// \u0412\u0442\u043e\u0440\u044b\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u0432\u043d\u043e\u0432\u044c \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 Logger\n\n\nvar\n \nnewUserRegistration\n \n=\n \nnew\n \nScorocode\n.\nCloudCode\n(\n574860d2781267d34f7a2415\n,\n \n{\nlogger\n:\n \nnew\n \nScorocode\n.\nLogger\n()});\n\n\n\n// \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u0443\u0434\u0443\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u044b \u0441\u043a\u0440\u0438\u043f\u0442\u0443 \u043f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435\n\n\nvar\n \npool\n \n=\n \n{\n\n    \nemail\n:\nresult\n.\nemail\n,\n\n    \npassword\n:\nresult\n.\npassword\n,\n\n    \nusername\n:\nresult\n.\nusername\n\n\n};\n\n\n\n// \u0417\u0430\u043f\u0443\u0441\u0442\u0438\u043c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0433\u043e \u043a\u043e\u0434\u0430\n\n\n// \u0412\u0442\u043e\u0440\u044b\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c true - \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u0440\u0435\u0436\u0438\u043c \u043e\u0442\u043b\u0430\u0434\u043a\u0438\n\n\n// \u0422\u0435\u043f\u0435\u0440\u044c \u0435\u0441\u043b\u0438 \u0432 \u0441\u043a\u0440\u0438\u043f\u0442\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c console.log(\nHello, Scorocode!\n), \u044d\u0442\u043e \u0432\u044b\u0432\u0435\u0434\u0435\u0442\u0441\u044f \u0432 \u0432\u0430\u0448\u0443 \u043a\u043e\u043d\u0441\u043e\u043b\u044c\n\n\nnewUserRegistration\n.\nrun\n(\npool\n,\n \ntrue\n)\n\n    \n.\nthen\n((\nsuccess\n)\n=\n{\n\n        \nconsole\n.\nlog\n(\nsuccess\n);\n\n    \n})\n\n    \n.\ncatch\n((\nerror\n)\n=\n{\n\n        \nconsole\n.\nlog\n(\nerror\n)\n\n    \n});\n\n\n});", 
            "title": "Scorocode.CloudCode"
        }, 
        {
            "location": "/JS/Scorocode.CloudCode/#new-cloudcodeid", 
            "text": "Creates a new subclass of Scorocode.CloudCode() for the given script identifier  Returns :  Scorocode.CloudCode  - Returns new Scorocode.CloudCode instance     Parameter  Type  Description      id  String  Server-side script identifier    logger  Object  Logger object for debugging", 
            "title": "new CloudCode(id)"
        }, 
        {
            "location": "/JS/Scorocode.CloudCode/#runpool-debug-callbacks", 
            "text": "Server code running method     Parameter  Type  Description      pool  Object  Object with the data that will be passed to the server-side script    debug  Boolean  Flag for debug mode    callbacks  Object  Success and error callbacks for the executed query     Example  // \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u043c SDK \u0438 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u043c \u0435\u0433\u043e.   var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey , \n     ScriptKey :   scriptKey  });  var   Prompt   =   require ( prompt );  Prompt . start ();  Prompt . get ([ email ,   password ,   username ],   function   ( err ,   result )   { \n     var   newUserRegistration   =   new   Scorocode . CloudCode ( 574860d2781267d34f7a2415 ); \n     var   pool   =   { \n         email : result . email , \n         password : result . password , \n         username : result . username \n     }; \n     newUserRegistration . run ( pool ) \n         . then (( success ) = { \n             console . log ( success ); \n         }) \n         . catch (( error ) = { \n             console . log ( error ) \n         }); \n   });   Returns :  promise.{error: Boolean}  - Returns promise that returns object   { \n     error :   false  }   Exceptions :   String  'Invalid type of pool'", 
            "title": ".run(pool, debug, callbacks)"
        }, 
        {
            "location": "/JS/Scorocode.CloudCode/#debug", 
            "text": "\u041f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 JavaScript SDK \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u0430 \u043e\u0442\u043b\u0430\u0434\u043a\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u044b\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043f\u0440\u0438 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e Scorocode.Init({})  \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0435\u0449\u0435 \u0434\u0432\u0430 \u043a\u043b\u044e\u0447\u0430:  MasterKey  \u0438  WebSocketKey . \u042d\u0442\u043e \u0441\u0432\u044f\u0437\u0430\u043d\u043e \u0441 \u0442\u0435\u043c, \u0447\u0442\u043e\n\u043a\u043e\u043d\u0441\u043e\u043b\u044c\u043d\u044b\u0439 \u0432\u044b\u0432\u043e\u0434 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c\u043e\u0433\u043e \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435 \u0441\u043a\u0440\u0438\u043f\u0442\u0430 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0447\u0435\u0440\u0435\u0437 websockets \u043d\u0430 \u0432\u044b\u0437\u044b\u0432\u0430\u044e\u0449\u0435\u0433\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0430.  \u0414\u043b\u044f \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0440\u0435\u0436\u0438\u043c\u0430 \u043e\u0442\u043b\u0430\u0434\u043a\u0438 \u0442\u0430\u043a\u0436\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043e\u0431\u044a\u0435\u043a\u0442  Logger .  Example  var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey , \n     ScriptKey :   scriptKey \n     MasterKey :   masterKey   // necessary for debug \n     WebSocketKey :   websocketKey   // necessary for debug  });  var   Prompt   =   require ( prompt );  Prompt . start ();  Prompt . get ([ email ,   password ,   username ],   function   ( err ,   result )   {  // \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043d\u043e\u0432\u044b\u0439 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u043c\u0443 \u0441\u043a\u0440\u0438\u043f\u0442\u0443  574860d2781267d34f7a2415 .  // \u0412\u0442\u043e\u0440\u044b\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u0432\u043d\u043e\u0432\u044c \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 Logger  var   newUserRegistration   =   new   Scorocode . CloudCode ( 574860d2781267d34f7a2415 ,   { logger :   new   Scorocode . Logger ()});  // \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u0443\u0434\u0443\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u044b \u0441\u043a\u0440\u0438\u043f\u0442\u0443 \u043f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435  var   pool   =   { \n     email : result . email , \n     password : result . password , \n     username : result . username  };  // \u0417\u0430\u043f\u0443\u0441\u0442\u0438\u043c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0433\u043e \u043a\u043e\u0434\u0430  // \u0412\u0442\u043e\u0440\u044b\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c true - \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u0440\u0435\u0436\u0438\u043c \u043e\u0442\u043b\u0430\u0434\u043a\u0438  // \u0422\u0435\u043f\u0435\u0440\u044c \u0435\u0441\u043b\u0438 \u0432 \u0441\u043a\u0440\u0438\u043f\u0442\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c console.log( Hello, Scorocode! ), \u044d\u0442\u043e \u0432\u044b\u0432\u0435\u0434\u0435\u0442\u0441\u044f \u0432 \u0432\u0430\u0448\u0443 \u043a\u043e\u043d\u0441\u043e\u043b\u044c  newUserRegistration . run ( pool ,   true ) \n     . then (( success ) = { \n         console . log ( success ); \n     }) \n     . catch (( error ) = { \n         console . log ( error ) \n     });  });", 
            "title": "Debug"
        }, 
        {
            "location": "/JS/Scorocode.Bot/", 
            "text": "\u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435\n\n\n\n\n.Bot\n\n\nnew Bot(botId)\n\n\n.send(data)\n \n\n\n\n\n\n\n\n\n\n\n\n\nnew Bot(botId)\n\n\n\u041a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440 sc.Bot\n\n\n\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\n: \nsc.Bot\n - \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 sc.Bot\n\n\n\n\n\n\n\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n\n\n\u0422\u0438\u043f\n\n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\n\n\n\n\n\n\n\n\n\n\nbotId\n\n\nString\n\n\nTelegram id \u0431\u043e\u0442\u0430, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u043e\u0442 \n@BotFather\n\n\n\n\n\n\n\n\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440\n\n\nvar\n \nsc\n \n=\n \nrequire\n(\nscorocode\n);\n\n\n\nsc\n.\nInit\n({\n\n    \nApplicationID\n:\n \nxxx\n,\n \n// \n- \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c xxx \u043d\u0430 \u043a\u043b\u044e\u0447 appId \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\n\n    \nJavaScriptKey\n:\n \nxxx\n,\n \n// \n- \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c xxx \u043d\u0430 \u043a\u043b\u044e\u0447 javascript \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\n\n    \nMasterKey\n:\n \nxxx\n \n// \n- \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c xxx \u043d\u0430 \u043a\u043b\u044e\u0447 masterKey \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\n\n\n});\n\n\n\nvar\n \nbot\n \n=\n \nnew\n \nsc\n.\nBot\n(\n321196098:AAEDbOYD6iLWsHD7w28vqf3a9oBeJAPXXpg\n);\n\n\n\nvar\n \ndata\n \n=\n \n{\n\n    \nmethod\n:\n \nmethodname\n,\n \n//\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u0430 Telegram bot API \n\n    \nmethod_params\n:\n \n{\n\n        \n// \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043c\u0435\u0442\u043e\u0434\u0430 Telegram Bot API\n\n    \n}};\n\n\nbot\n.\nsend\n(\ndata\n)\n\n\n\n\n\n\n\n\n\n\n.send(pool, callbacks)\n\n\n\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0433\u043e \u043a\u043e\u0434\u0430\n\n\n\n\n\n\n\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n\n\n\u0422\u0438\u043f\n\n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\n\n\n\n\n\n\n\n\ndata\n\n\nObject\n\n\n\u041e\u0431\u044a\u0435\u043a\u0442, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 Telegram Bot API\n\n\n\n\n\n\n\n\n\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \ndata\n\n\n\n\n\n\n\n\n\u0418\u043c\u044f\n\n\n\u0422\u0438\u043f\n\n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\n\n\n\n\n\n\n\n\nmethod\n\n\nString\n\n\n\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u0430 Telegram bot API\n\n\n\n\n\n\nmethod_params\n\n\nObject\n\n\n\u041e\u0431\u044a\u0435\u043a\u0442 \u0441 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 \u0434\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430\n\n\n\n\n\n\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440\n\n\nvar\n \nsc\n \n=\n \nrequire\n(\nscorocode\n);\n\n\n\nsc\n.\nInit\n({\n\n    \nApplicationID\n:\n \nxxx\n,\n \n// \n- \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c xxx \u043d\u0430 \u043a\u043b\u044e\u0447 appId \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\n\n    \nJavaScriptKey\n:\n \nxxx\n,\n \n// \n- \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c xxx \u043d\u0430 \u043a\u043b\u044e\u0447 javascript \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\n\n    \nMasterKey\n:\n \nxxx\n \n// \n- \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c xxx \u043d\u0430 \u043a\u043b\u044e\u0447 masterKey \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\n\n\n});\n\n\n\nvar\n \nbot\n \n=\n \nnew\n \nsc\n.\nBot\n(\n321196098:AAEDbOYD6iLWsHD7w28vqf3a9oBeJAPXXpg\n);\n\n\n\nvar\n \ndata\n \n=\n \n{\n\n    \nmethod\n:\n \nmethodname\n,\n \n//\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u0430 Telegram bot API \n\n    \nmethod_params\n:\n \n{\n\n        \n// \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043c\u0435\u0442\u043e\u0434\u0430 Telegram Bot API\n\n    \n}};\n\n\n\nbot\n.\nsend\n(\ndata\n);", 
            "title": "Scorocode.Bot"
        }, 
        {
            "location": "/JS/Scorocode.Bot/#new-botbotid", 
            "text": "\u041a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440 sc.Bot  \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 :  sc.Bot  - \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 sc.Bot     \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440  \u0422\u0438\u043f  \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435       botId  String  Telegram id \u0431\u043e\u0442\u0430, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u043e\u0442  @BotFather      \u041f\u0440\u0438\u043c\u0435\u0440  var   sc   =   require ( scorocode );  sc . Init ({ \n     ApplicationID :   xxx ,   //  - \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c xxx \u043d\u0430 \u043a\u043b\u044e\u0447 appId \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \n     JavaScriptKey :   xxx ,   //  - \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c xxx \u043d\u0430 \u043a\u043b\u044e\u0447 javascript \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \n     MasterKey :   xxx   //  - \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c xxx \u043d\u0430 \u043a\u043b\u044e\u0447 masterKey \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f  });  var   bot   =   new   sc . Bot ( 321196098:AAEDbOYD6iLWsHD7w28vqf3a9oBeJAPXXpg );  var   data   =   { \n     method :   methodname ,   //\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u0430 Telegram bot API  \n     method_params :   { \n         // \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043c\u0435\u0442\u043e\u0434\u0430 Telegram Bot API \n     }};  bot . send ( data )", 
            "title": "new Bot(botId)"
        }, 
        {
            "location": "/JS/Scorocode.Bot/#sendpool-callbacks", 
            "text": "\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0433\u043e \u043a\u043e\u0434\u0430     \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440  \u0422\u0438\u043f  \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435      data  Object  \u041e\u0431\u044a\u0435\u043a\u0442, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 Telegram Bot API     \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430  data     \u0418\u043c\u044f  \u0422\u0438\u043f  \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435      method  String  \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u0430 Telegram bot API    method_params  Object  \u041e\u0431\u044a\u0435\u043a\u0442 \u0441 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 \u0434\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430     \u041f\u0440\u0438\u043c\u0435\u0440  var   sc   =   require ( scorocode );  sc . Init ({ \n     ApplicationID :   xxx ,   //  - \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c xxx \u043d\u0430 \u043a\u043b\u044e\u0447 appId \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \n     JavaScriptKey :   xxx ,   //  - \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c xxx \u043d\u0430 \u043a\u043b\u044e\u0447 javascript \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \n     MasterKey :   xxx   //  - \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c xxx \u043d\u0430 \u043a\u043b\u044e\u0447 masterKey \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f  });  var   bot   =   new   sc . Bot ( 321196098:AAEDbOYD6iLWsHD7w28vqf3a9oBeJAPXXpg );  var   data   =   { \n     method :   methodname ,   //\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u0430 Telegram bot API  \n     method_params :   { \n         // \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043c\u0435\u0442\u043e\u0434\u0430 Telegram Bot API \n     }};  bot . send ( data );", 
            "title": ".send(pool, callbacks)"
        }, 
        {
            "location": "/JS/Scorocode.Websocket/", 
            "text": "Class for WebSocket connection handling.\n\n\nAn example of implementing a chat application using Scorocode.WebSocket \u2013 \nScorochat\n. The application's source code is published on GitHub in the following repository:\nNikSmith/niksmith.github.io\n\n\n\n\n.WebSocket\n\n\nnew WebSocket(channame)\n\n\n.on(event, callback)\n \n\n\n.send(message)\n \n\n\n\n\n\n\n\n\n\n\n\n\nnew WebSocket(channame)\n\n\nWebSocket channel opening.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nchanname\n\n\nString\n\n\nMandatory\n\n\nChannel name\n\n\n\"chatroom\"\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nWS\n \n=\n \nnew\n \nScorocode\n.\nWebSocket\n(\nchatroom\n);\n\n\n\n\n\n\n\n\n\n\n.on(event, callback)\n\n\nMethod for assigning a callback to one of the events:\n\n\n\n\nopen - Connection established\n\n\nclose - Connection closed\n\n\nerror - Error\n\n\nmessage -  Data received\n\n\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nevent\n\n\nString\n\n\nMandatory, value from the list\n\n\nEvent to which a callback is assigned\n\n\n\"open\", \"message\", \"error\", \"close\"\n\n\n\n\n\n\ncallback\n\n\nObject\n\n\n\n\nCallback for an event\n\n\n\n\n\n\n\n\n\n\nExample\n  \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n,\n\n    \nWebSocketKey\n:\n \nwebSocketKey\n\n\n});\n\n\n\n\nvar\n \nWS\n \n=\n \nnew\n \nScorocode\n.\nWebSocket\n(\nHelloworld\n);\n\n\n\n\nWS\n.\non\n(\nopen\n,\n \nonOpen\n \n()\n \n{});\n\n\nWS\n.\non\n(\nclose\n,\n \nonClose\n \n()\n \n{});\n\n\nWS\n.\non\n(\nerror\n,\n \nonError\n \n()\n \n{});\n\n\nWS\n.\non\n(\nmessage\n,\n \nonMessage\n(\ndata\n)\n \n{\n\n    \nconsole\n.\nlog\n(\ndata\n)\n\n    \n});\n\n\n\n\nvar\n \ndata\n \n=\n \nWello Horld\n;\n\n\nWS\n.\nsend\n(\ndata\n);\n\n\n\n\n\n\n\n\n.send(message)\n\n\nMethod for sending a message to channel\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nmessage\n\n\nString\n\n\nMandatory\n\n\nMessage to be sent to the channel\n\n\n\"Wello Horld\"\n\n\n\n\n\n\n\n\nExample\n  \n\n\nvar\n \nScorocode\n \n=\n \nrequire\n(\nscorocode\n);\n\n\nScorocode\n.\nInit\n({\n\n    \nApplicationID\n:\n \napplicationId\n,\n\n    \nJavaScriptKey\n:\n \njavascriptKey\n,\n\n    \nWebSocketKey\n:\n \nwebSocketKey\n\n\n});\n\n\n\nvar\n \nWS\n \n=\n \nnew\n \nScorocode\n.\nWebSocket\n(\nHelloworld\n);\n\n\nvar\n \ndata\n \n=\n \nWello Horld\n;\n\n\n\nWS\n.\non\n(\nopen\n,\n \nfunction\n(){\n\n    \nWS\n.\nsend\n(\ndata\n);\n\n\n});", 
            "title": "Scorocode.WebSocket"
        }, 
        {
            "location": "/JS/Scorocode.Websocket/#new-websocketchanname", 
            "text": "WebSocket channel opening.     Parameter  Type  Properties  Description  Value example      channame  String  Mandatory  Channel name  \"chatroom\"     Example  var   WS   =   new   Scorocode . WebSocket ( chatroom );", 
            "title": "new WebSocket(channame)"
        }, 
        {
            "location": "/JS/Scorocode.Websocket/#onevent-callback", 
            "text": "Method for assigning a callback to one of the events:   open - Connection established  close - Connection closed  error - Error  message -  Data received      Parameter  Type  Properties  Description  Value example      event  String  Mandatory, value from the list  Event to which a callback is assigned  \"open\", \"message\", \"error\", \"close\"    callback  Object   Callback for an event      Example", 
            "title": ".on(event, callback)"
        }, 
        {
            "location": "/JS/Scorocode.Websocket/#var-scorocode-requirescorocode-scorocodeinit-applicationid-applicationid-javascriptkey-javascriptkey-websocketkey-websocketkey-var-ws-new-scorocodewebsockethelloworld-wsonopen-onopen-wsonclose-onclose-wsonerror-onerror-wsonmessage-onmessagedata-consolelogdata-var-data-wello-horld-wssenddata", 
            "text": "", 
            "title": "var Scorocode = require(&#39;scorocode&#39;);"
        }, 
        {
            "location": "/JS/Scorocode.Websocket/#sendmessage", 
            "text": "Method for sending a message to channel     Parameter  Type  Properties  Description  Value example      message  String  Mandatory  Message to be sent to the channel  \"Wello Horld\"     Example     var   Scorocode   =   require ( scorocode );  Scorocode . Init ({ \n     ApplicationID :   applicationId , \n     JavaScriptKey :   javascriptKey , \n     WebSocketKey :   webSocketKey  });  var   WS   =   new   Scorocode . WebSocket ( Helloworld );  var   data   =   Wello Horld ;  WS . on ( open ,   function (){ \n     WS . send ( data );  });", 
            "title": ".send(message)"
        }, 
        {
            "location": "/JS/Scorocode.System/", 
            "text": "\u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435\n\n\n\n\n.System\n\n\nnew System()\n\n\n.getDataStats(callbacks)\n \n\n\n.getApp(callbacks)\n \n\n\nApp.getCollections(callbacks)\n\n\nApp.getFolderContent(path, callbacks)\n\n\nApp.getScript(id, callbacks}\n\n\nApp.getBots(skip, limit, callbacks)\n\n\n\n\n\n\n\n\n\n\n\n\nnew System()\n\n\n\u041a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440 Scorocode.System.\n\n\nvar\n \nsys\n \n=\n \nnew\n \nsc\n.\nSystem\n();\n\n\n\n\n\n\n\n\n\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435\n\n\n\u0414\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f SDK \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c MasterKey.\n\n\n\n\n\n\n\n\n.getDataStats(callbacks)\n\n\n\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.\n\n\n\n\n\n\n\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n\n\n\u0422\u0438\u043f\n\n\n\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430\n\n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n\n\n\n\n\n\n\n\n\n\ncallbacks\n\n\nObject\n\n\n\u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\n\u041a\u043e\u043b\u043b\u0431\u044d\u043a\u0438 success \u0438 error \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\n\n\nvar\n \nsc\n \n=\n \nrequire\n(\nscorocode\n);\n\n\n\nsc\n.\nInit\n({\n\n    \nApplicationID\n:\n \n5c46ec2f6f94aa92sdfef83122ff1gc\n,\n\n    \nJavaScriptKey\n:\n \n86df1sd52d81dbhskn32f1d6a8e15936\n,\n\n    \nMasterKey\n:\n \ne9c6vf5b9d6acd5tyu3aav1405c1e6dc3\n\n\n});\n\n\n\nvar\n \nsys\n \n=\n \nnew\n \nsc\n.\nSystem\n();\n\n\n\nsys\n.\ngetDataStats\n()\n\n   \n.\nthen\n((\nstats\n)\n=\n{\n\n        \nconsole\n.\nlog\n(\nstats\n);\n\n    \n})\n\n    \n.\ncatch\n((\nerror\n)\n=\n{\n\n        \nconsole\n.\nlog\n(\nerror\n)\n\n    \n});\n\n\n\n\n\n\n\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\n: \npromise.{dataSize: int, filesSize: int, indexSize: int, store: int}\n - \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 promise, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442 \u0441\u043e \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u043e\u0439 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f:\n\n\n\n\ndataSize - \u043e\u0431\u044a\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f;\n\n\nfileSize - \u043e\u0431\u044a\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0445, \u0437\u0430\u043d\u044f\u0442\u044b\u0439 \u0444\u0430\u0439\u043b\u0430\u043c\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f;\n\n\nindexSixe - \u043e\u0431\u044a\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0445, \u0437\u0430\u043d\u044f\u0442\u044b\u0439 \u0438\u043d\u0434\u0435\u043a\u0441\u0430\u043c\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f;\n\n\nstore - \u043e\u0431\u044a\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0445, \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044e.\n\n\n\n\n\n\n\n\n.getApp(callbacks)\n\n\n\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438.\n\n\n\n\n\n\n\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n\n\n\u0422\u0438\u043f\n\n\n\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430\n\n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n\n\n\n\n\n\n\n\n\n\ncallbacks\n\n\nObject\n\n\n\u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\n\u041a\u043e\u043b\u043b\u0431\u044d\u043a\u0438 success \u0438 error \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\n\n\nvar\n \nsc\n \n=\n \nrequire\n(\nscorocode\n);\n\n\n\nsc\n.\nInit\n({\n\n    \nApplicationID\n:\n \n5c46ec2f6f94aa92sdfef83122ff1gc\n,\n\n    \nJavaScriptKey\n:\n \n86df1sd52d81dbhskn32f1d6a8e15936\n,\n\n    \nMasterKey\n:\n \ne9c6vf5b9d6acd5tyu3aav1405c1e6dc3\n\n\n});\n\n\n\nvar\n \nsys\n \n=\n \nnew\n \nsc\n.\nSystem\n();\n\n\n\nsys\n.\ngetApp\n()\n\n   \n.\nthen\n((\napp\n)\n=\n{\n\n        \nconsole\n.\nlog\n(\napp\n);\n\n    \n})\n\n    \n.\ncatch\n((\nerror\n)\n=\n{\n\n        \nconsole\n.\nlog\n(\nerror\n)\n\n    \n});\n\n\n\n\n\n\n\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\n: \npromise.\nApp\n - \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 promise, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442 \nApp\n.\n\n\n\n\n\n\nApp.getCollections(callbacks)\n\n\n\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043f\u0438\u0441\u043a\u0430 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0439 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.\n\n\n\n\n\n\n\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n\n\n\u0422\u0438\u043f\n\n\n\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430\n\n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n\n\n\n\n\n\n\n\n\n\ncallbacks\n\n\nObject\n\n\n\u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\n\u041a\u043e\u043b\u043b\u0431\u044d\u043a\u0438 success \u0438 error \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\n\n\nvar\n \nsc\n \n=\n \nrequire\n(\nscorocode\n);\n\n\n\nsc\n.\nInit\n({\n\n    \nApplicationID\n:\n \n5c46ec2f6f94aa92sdfef83122ff1gc\n,\n\n    \nJavaScriptKey\n:\n \n86df1sd52d81dbhskn32f1d6a8e15936\n,\n\n    \nMasterKey\n:\n \ne9c6vf5b9d6acd5tyu3aav1405c1e6dc3\n\n\n});\n\n\n\nvar\n \nsystem\n \n=\n \nnew\n \nsc\n.\nSystem\n();\n\n\nsystem\n.\ngetApp\n()\n\n  \n.\nthen\n((\napp\n)\n=\n{\n\n        \napp\n.\ngetCollections\n()\n\n            \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n                \nconsole\n.\nlog\n(\nresult\n);\n\n          \n})\n\n  \n})\n\n  \n.\ncatch\n((\nerror\n)\n=\n{\n\n      \nconsole\n.\nlog\n(\nerror\n)\n\n  \n});\n\n\n\n\n\n\n\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\n: \npromise.[Collection]\n - \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 promise, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \nCollection\n.\n\n\n\n\n\n\nApp.getFolderContent(path, callbacks)\n\n\n\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043f\u0430\u043f\u043a\u0438 \u043f\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u043f\u0443\u0442\u0438.\n\n\n\n\n\n\n\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n\n\n\u0422\u0438\u043f\n\n\n\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430\n\n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n\n\n\n\n\n\n\n\n\n\npath\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\n\u041f\u0443\u0442\u044c \u043a \u043f\u0430\u043f\u043a\u0435\n\n\n\"/\"\n\n\n\n\n\n\ncallbacks\n\n\nObject\n\n\n\u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\n\u041a\u043e\u043b\u043b\u0431\u044d\u043a\u0438 success \u0438 error \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\n\n\nvar\n \nsc\n \n=\n \nrequire\n(\nscorocode\n);\n\n\n\nsc\n.\nInit\n({\n\n    \nApplicationID\n:\n \n5c46ec2f6f94aa92sdfef83122ff1gc\n,\n\n    \nJavaScriptKey\n:\n \n86df1sd52d81dbhskn32f1d6a8e15936\n,\n\n    \nMasterKey\n:\n \ne9c6vf5b9d6acd5tyu3aav1405c1e6dc3\n\n\n});\n\n\n\nvar\n \nsystem\n \n=\n \nnew\n \nsc\n.\nSystem\n();\n\n\nsystem\n.\ngetApp\n()\n\n  \n.\nthen\n((\napp\n)\n=\n{\n\n        \napp\n.\ngetFolderContent\n(\n/\n)\n\n            \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n                \nconsole\n.\nlog\n(\nresult\n);\n\n          \n})\n\n  \n})\n\n  \n.\ncatch\n((\nerror\n)\n=\n{\n\n      \nconsole\n.\nlog\n(\nerror\n)\n\n  \n});\n\n\n\n\n\n\n\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\n: \npromise.[Script, Folder]\n - \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 promise, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \nScript\n \u0438 \nFolder\n\n\n\n\n\n\nApp.getScript(id, callbacks}\n\n\n\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043a\u0440\u0438\u043f\u0442\u0430 \u043f\u043e \u0435\u0433\u043e id.\n\n\n\n\n\n\n\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n\n\n\u0422\u0438\u043f\n\n\n\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430\n\n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n\n\n\n\n\n\n\n\n\n\nid\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\n\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0441\u043a\u0440\u0438\u043f\u0442\u0430\n\n\n\"574860d2781267d34f7a2415\"\n\n\n\n\n\n\ncallbacks\n\n\nObject\n\n\n\u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\n\u041a\u043e\u043b\u043b\u0431\u044d\u043a\u0438 success \u0438 error \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\n\n\nvar\n \nsc\n \n=\n \nrequire\n(\nscorocode\n);\n\n\n\nsc\n.\nInit\n({\n\n    \nApplicationID\n:\n \n5c46ec2f6f94aa92sdfef83122ff1gc\n,\n\n    \nJavaScriptKey\n:\n \n86df1sd52d81dbhskn32f1d6a8e15936\n,\n\n    \nMasterKey\n:\n \ne9c6vf5b9d6acd5tyu3aav1405c1e6dc3\n\n\n});\n\n\n\nvar\n \nsystem\n \n=\n \nnew\n \nsc\n.\nSystem\n();\n\n\nsystem\n.\ngetApp\n()\n\n  \n.\nthen\n((\napp\n)\n=\n{\n\n        \napp\n.\ngetScript\n(\n57c941e50293e02aea8b5b14\n)\n\n            \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n                \nconsole\n.\nlog\n(\nresult\n);\n\n          \n})\n\n  \n})\n\n  \n.\ncatch\n((\nerror\n)\n=\n{\n\n      \nconsole\n.\nlog\n(\nerror\n)\n\n  \n});\n\n\n\n\n\n\n\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\n: \npromise.Script\n - \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 promise, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442 \nScript\n\n\n\n\n\n\nApp.getBots(skip, limit, callbacks)\n\n\n\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043f\u0438\u0441\u043a\u0430 \u0431\u043e\u0442\u043e\u0432.\n\n\n\n\n\n\n\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n\n\n\u0422\u0438\u043f\n\n\n\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430\n\n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n\n\n\n\n\n\n\n\n\n\nskip\n\n\nNumber\n\n\n\u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439, \u043f\u043e-\u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e 0\n\n\n\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430\u0435\u043c\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432\n\n\n1\n\n\n\n\n\n\nlimit\n\n\nNumber\n\n\n\u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439, \u043f\u043e-\u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e 50\n\n\n\u041b\u0438\u043c\u0438\u0442 \u0432\u044b\u0431\u043e\u0440\u043a\u0438\n\n\n5\n\n\n\n\n\n\ncallbacks\n\n\nObject\n\n\n\u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\n\u041a\u043e\u043b\u043b\u0431\u044d\u043a\u0438 success \u0438 error \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\n\n\nvar\n \nsc\n \n=\n \nrequire\n(\nscorocode\n);\n\n\n\nsc\n.\nInit\n({\n\n    \nApplicationID\n:\n \n5c46ec2f6f94aa92sdfef83122ff1gc\n,\n\n    \nJavaScriptKey\n:\n \n86df1sd52d81dbhskn32f1d6a8e15936\n,\n\n    \nMasterKey\n:\n \ne9c6vf5b9d6acd5tyu3aav1405c1e6dc3\n\n\n});\n\n\n\nvar\n \nsystem\n \n=\n \nnew\n \nsc\n.\nSystem\n();\n\n\nsystem\n.\ngetApp\n()\n\n  \n.\nthen\n((\napp\n)\n=\n{\n\n        \napp\n.\ngetBots\n()\n\n            \n.\nthen\n((\nresult\n)\n \n=\n \n{\n\n                \nconsole\n.\nlog\n(\nresult\n);\n\n          \n})\n\n  \n})\n\n  \n.\ncatch\n((\nerror\n)\n=\n{\n\n      \nconsole\n.\nlog\n(\nerror\n)\n\n  \n});\n\n\n\n\n\n\n\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\n: \npromise.\nBot\n - \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 promise, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \nBot", 
            "title": "Scorocode.System"
        }, 
        {
            "location": "/JS/Scorocode.System/#new-system", 
            "text": "\u041a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440 Scorocode.System.  var   sys   =   new   sc . System ();    \u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435  \u0414\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f SDK \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c MasterKey.", 
            "title": "new System()"
        }, 
        {
            "location": "/JS/Scorocode.System/#getdatastatscallbacks", 
            "text": "\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.     \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440  \u0422\u0438\u043f  \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430  \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435  \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f      callbacks  Object  \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  \u041a\u043e\u043b\u043b\u0431\u044d\u043a\u0438 success \u0438 error \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430.  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435     var   sc   =   require ( scorocode );  sc . Init ({ \n     ApplicationID :   5c46ec2f6f94aa92sdfef83122ff1gc , \n     JavaScriptKey :   86df1sd52d81dbhskn32f1d6a8e15936 , \n     MasterKey :   e9c6vf5b9d6acd5tyu3aav1405c1e6dc3  });  var   sys   =   new   sc . System ();  sys . getDataStats () \n    . then (( stats ) = { \n         console . log ( stats ); \n     }) \n     . catch (( error ) = { \n         console . log ( error ) \n     });   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 :  promise.{dataSize: int, filesSize: int, indexSize: int, store: int}  - \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 promise, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442 \u0441\u043e \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u043e\u0439 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f:   dataSize - \u043e\u0431\u044a\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f;  fileSize - \u043e\u0431\u044a\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0445, \u0437\u0430\u043d\u044f\u0442\u044b\u0439 \u0444\u0430\u0439\u043b\u0430\u043c\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f;  indexSixe - \u043e\u0431\u044a\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0445, \u0437\u0430\u043d\u044f\u0442\u044b\u0439 \u0438\u043d\u0434\u0435\u043a\u0441\u0430\u043c\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f;  store - \u043e\u0431\u044a\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0445, \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044e.", 
            "title": ".getDataStats(callbacks)"
        }, 
        {
            "location": "/JS/Scorocode.System/#getappcallbacks", 
            "text": "\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438.     \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440  \u0422\u0438\u043f  \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430  \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435  \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f      callbacks  Object  \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  \u041a\u043e\u043b\u043b\u0431\u044d\u043a\u0438 success \u0438 error \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430.  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435     var   sc   =   require ( scorocode );  sc . Init ({ \n     ApplicationID :   5c46ec2f6f94aa92sdfef83122ff1gc , \n     JavaScriptKey :   86df1sd52d81dbhskn32f1d6a8e15936 , \n     MasterKey :   e9c6vf5b9d6acd5tyu3aav1405c1e6dc3  });  var   sys   =   new   sc . System ();  sys . getApp () \n    . then (( app ) = { \n         console . log ( app ); \n     }) \n     . catch (( error ) = { \n         console . log ( error ) \n     });   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 :  promise. App  - \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 promise, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442  App .", 
            "title": ".getApp(callbacks)"
        }, 
        {
            "location": "/JS/Scorocode.System/#appgetcollectionscallbacks", 
            "text": "\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043f\u0438\u0441\u043a\u0430 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0439 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.     \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440  \u0422\u0438\u043f  \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430  \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435  \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f      callbacks  Object  \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  \u041a\u043e\u043b\u043b\u0431\u044d\u043a\u0438 success \u0438 error \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430.  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435     var   sc   =   require ( scorocode );  sc . Init ({ \n     ApplicationID :   5c46ec2f6f94aa92sdfef83122ff1gc , \n     JavaScriptKey :   86df1sd52d81dbhskn32f1d6a8e15936 , \n     MasterKey :   e9c6vf5b9d6acd5tyu3aav1405c1e6dc3  });  var   system   =   new   sc . System ();  system . getApp () \n   . then (( app ) = { \n         app . getCollections () \n             . then (( result )   =   { \n                 console . log ( result ); \n           }) \n   }) \n   . catch (( error ) = { \n       console . log ( error ) \n   });   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 :  promise.[Collection]  - \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 promise, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432  Collection .", 
            "title": "App.getCollections(callbacks)"
        }, 
        {
            "location": "/JS/Scorocode.System/#appgetfoldercontentpath-callbacks", 
            "text": "\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043f\u0430\u043f\u043a\u0438 \u043f\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u043f\u0443\u0442\u0438.     \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440  \u0422\u0438\u043f  \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430  \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435  \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f      path  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  \u041f\u0443\u0442\u044c \u043a \u043f\u0430\u043f\u043a\u0435  \"/\"    callbacks  Object  \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  \u041a\u043e\u043b\u043b\u0431\u044d\u043a\u0438 success \u0438 error \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430.  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435     var   sc   =   require ( scorocode );  sc . Init ({ \n     ApplicationID :   5c46ec2f6f94aa92sdfef83122ff1gc , \n     JavaScriptKey :   86df1sd52d81dbhskn32f1d6a8e15936 , \n     MasterKey :   e9c6vf5b9d6acd5tyu3aav1405c1e6dc3  });  var   system   =   new   sc . System ();  system . getApp () \n   . then (( app ) = { \n         app . getFolderContent ( / ) \n             . then (( result )   =   { \n                 console . log ( result ); \n           }) \n   }) \n   . catch (( error ) = { \n       console . log ( error ) \n   });   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 :  promise.[Script, Folder]  - \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 promise, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432  Script  \u0438  Folder", 
            "title": "App.getFolderContent(path, callbacks)"
        }, 
        {
            "location": "/JS/Scorocode.System/#appgetscriptid-callbacks", 
            "text": "\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043a\u0440\u0438\u043f\u0442\u0430 \u043f\u043e \u0435\u0433\u043e id.     \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440  \u0422\u0438\u043f  \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430  \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435  \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f      id  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  \u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0441\u043a\u0440\u0438\u043f\u0442\u0430  \"574860d2781267d34f7a2415\"    callbacks  Object  \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  \u041a\u043e\u043b\u043b\u0431\u044d\u043a\u0438 success \u0438 error \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430.  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435     var   sc   =   require ( scorocode );  sc . Init ({ \n     ApplicationID :   5c46ec2f6f94aa92sdfef83122ff1gc , \n     JavaScriptKey :   86df1sd52d81dbhskn32f1d6a8e15936 , \n     MasterKey :   e9c6vf5b9d6acd5tyu3aav1405c1e6dc3  });  var   system   =   new   sc . System ();  system . getApp () \n   . then (( app ) = { \n         app . getScript ( 57c941e50293e02aea8b5b14 ) \n             . then (( result )   =   { \n                 console . log ( result ); \n           }) \n   }) \n   . catch (( error ) = { \n       console . log ( error ) \n   });   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 :  promise.Script  - \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 promise, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442  Script", 
            "title": "App.getScript(id, callbacks}"
        }, 
        {
            "location": "/JS/Scorocode.System/#appgetbotsskip-limit-callbacks", 
            "text": "\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043f\u0438\u0441\u043a\u0430 \u0431\u043e\u0442\u043e\u0432.     \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440  \u0422\u0438\u043f  \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430  \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435  \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f      skip  Number  \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439, \u043f\u043e-\u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e 0  \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430\u0435\u043c\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432  1    limit  Number  \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439, \u043f\u043e-\u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e 50  \u041b\u0438\u043c\u0438\u0442 \u0432\u044b\u0431\u043e\u0440\u043a\u0438  5    callbacks  Object  \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  \u041a\u043e\u043b\u043b\u0431\u044d\u043a\u0438 success \u0438 error \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430.  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435     var   sc   =   require ( scorocode );  sc . Init ({ \n     ApplicationID :   5c46ec2f6f94aa92sdfef83122ff1gc , \n     JavaScriptKey :   86df1sd52d81dbhskn32f1d6a8e15936 , \n     MasterKey :   e9c6vf5b9d6acd5tyu3aav1405c1e6dc3  });  var   system   =   new   sc . System ();  system . getApp () \n   . then (( app ) = { \n         app . getBots () \n             . then (( result )   =   { \n                 console . log ( result ); \n           }) \n   }) \n   . catch (( error ) = { \n       console . log ( error ) \n   });   \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 :  promise. Bot  - \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 promise, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432  Bot", 
            "title": "App.getBots(skip, limit, callbacks)"
        }, 
        {
            "location": "/SWIFT/SWIFT/", 
            "text": "SDK integration\n\n\nSDK provides access to the Scorocode platform for creating swift-based applications. Details can be found on our website: https://scorocode.ru Scorocode SWIFT SDK distribution pack can be found in the repository (https://github.com/Scorocode/scorocode-sdk-swift)\n\n\nInstallation\n\n\nConnecting a library to a project\n\n\nInstall \nCarthage\n\n\nCreate an application\n\n\nCreate the \"Cartfile\" file in the project root and write the following lines in it:\n\n\ngithub \nAlamofire/Alamofire\n ~\n 3.3\ngithub \nSwiftyJSON/SwiftyJSON\n\ngithub \ndaltoniam/Starscream\n\n\n\n\n\n\nClose the project in Xcode, start in the console:\n\n\ncarthage update --platform iOS,Mac\n\n\n\nRe-open the project in Xcode. To Target -\n General -\n Linked Frameworks and Libraries from \n -\n Carthage -\n Build -\n iOS, drag and drop 3 files:\n\n\nAlamofire.framework\nSwiftyJSON.framework\nStarscream.framework\n\n\n\n\n\nTo Target -\n Build Phases, add New Run Script Phase:\n\n\nScript:\n\n\n/usr/local/bin/carthage copy-frameworks\n\n\n\nThree Input Files:\n\n\n$(SRCROOT)/Carthage/Build/iOS/Alamofire.framework\n\n\n\n\n$(SRCROOT)/Carthage/Build/iOS/SwiftyJSON.framework\n\n\n\nand\n\n$(SRCROOT)/Carthage/Build/iOS/Starscream.framework\n\n\n\n\n\nIf bridging header is missing, create it with the following contents:\n\n\n#import \nBSONSerialization.h\n\n\n\n\n\n\nCreate a new group in the project (for example, SCLib).\n\n\nAdd three folders to it (BSON, API, Model) from the SCLib project folder retrieved from the repository.", 
            "title": "SWIFT SDK"
        }, 
        {
            "location": "/SWIFT/SWIFT/#sdk-integration", 
            "text": "SDK provides access to the Scorocode platform for creating swift-based applications. Details can be found on our website: https://scorocode.ru Scorocode SWIFT SDK distribution pack can be found in the repository (https://github.com/Scorocode/scorocode-sdk-swift)", 
            "title": "SDK integration"
        }, 
        {
            "location": "/SWIFT/SWIFT/#installation", 
            "text": "Connecting a library to a project  Install  Carthage  Create an application  Create the \"Cartfile\" file in the project root and write the following lines in it:  github  Alamofire/Alamofire  ~  3.3\ngithub  SwiftyJSON/SwiftyJSON \ngithub  daltoniam/Starscream   Close the project in Xcode, start in the console:  carthage update --platform iOS,Mac \n\nRe-open the project in Xcode. To Target -  General -  Linked Frameworks and Libraries from   -  Carthage -  Build -  iOS, drag and drop 3 files:  Alamofire.framework\nSwiftyJSON.framework\nStarscream.framework  To Target -  Build Phases, add New Run Script Phase:  Script:  /usr/local/bin/carthage copy-frameworks \n\nThree Input Files:  $(SRCROOT)/Carthage/Build/iOS/Alamofire.framework  $(SRCROOT)/Carthage/Build/iOS/SwiftyJSON.framework \n\nand $(SRCROOT)/Carthage/Build/iOS/Starscream.framework   If bridging header is missing, create it with the following contents:  #import  BSONSerialization.h   Create a new group in the project (for example, SCLib).  Add three folders to it (BSON, API, Model) from the SCLib project folder retrieved from the repository.", 
            "title": "Installation"
        }, 
        {
            "location": "/SWIFT/SC/", 
            "text": "Core class for SDK handling\n\n\n\n\nSC\n\n\n.initWith(opt)\n\n\n\n\n\n\n\n\n\n\n\n\n.initWith(applicationId, clientId, accessKey, fileKey, messageKey)\n\n\nSDK initialization. Parameter values are defined in AppDelegate.swift\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\napplicationId\n\n\nString\n\n\nMandatory\n\n\nApplication identifier\n\n\n\"db8a1b41b8543397a798a181d9891b4c\"\n\n\n\n\n\n\nclientId\n\n\nString\n\n\nMandatory\n\n\nClient key for the iOs platform\n\n\n\"563452bbc611d8106d5da767365897de\"\n\n\n\n\n\n\naccessKey\n\n\nString\n\n\nMandatory\n\n\nAuthentication key (master key, script key)\n\n\n\"28f06b89b62165c33de55265166d8781\"\n\n\n\n\n\n\nfileKey\n\n\nString\n\n\n\n\nAuthentication keys for access to files\n\n\n\"6305ee7ac8023191a333d9267f1a07e8\"\n\n\n\n\n\n\nmessageKey\n\n\nString\n\n\n\n\nAuthentication key for sending messages\n\n\n\"9d774f6fa704f192e6aef53933f44e4f\"\n\n\n\n\n\n\n\n\nExample\n  \n\n\nIn \nAppDelegate.swift\n, specify initialization parameter values in the \ndidFinishLaunchingWithOptions\n method:\n\n\nlet\n \napplicationId\n \n=\n \ndb8a1b41b8543397a798a181d9891b4c\n\n\nlet\n \nclientId\n \n=\n \n563452bbc611d8106d5da767365897de\n\n\nlet\n \naccessKey\n \n=\n \n28f06b89b62165c33de55265166d8781\n\n\nlet\n \nfileKey\n \n=\n \n6305ee7ac8023191a333d9267f1a07e8\n\n\nlet\n \nmessageKey\n \n=\n \n9d774f6fa704f192e6aef53933f44e4f\n\n\n\n\n\n\nSDK initialization\n\n\nSC\n.\ninitWith\n(\napplicationId\n:\n \napplicationId\n,\n \nclientId\n:\n \nclientId\n,\n \naccessKey\n:\n \naccessKey\n,\n \nfileKey\n:\n \nfileKey\n,\n \nmessageKey\n:\n \nmessageKey\n)", 
            "title": "SC"
        }, 
        {
            "location": "/SWIFT/SC/#initwithapplicationid-clientid-accesskey-filekey-messagekey", 
            "text": "SDK initialization. Parameter values are defined in AppDelegate.swift     Parameter  Type  Properties  Description  Value example      applicationId  String  Mandatory  Application identifier  \"db8a1b41b8543397a798a181d9891b4c\"    clientId  String  Mandatory  Client key for the iOs platform  \"563452bbc611d8106d5da767365897de\"    accessKey  String  Mandatory  Authentication key (master key, script key)  \"28f06b89b62165c33de55265166d8781\"    fileKey  String   Authentication keys for access to files  \"6305ee7ac8023191a333d9267f1a07e8\"    messageKey  String   Authentication key for sending messages  \"9d774f6fa704f192e6aef53933f44e4f\"     Example     In  AppDelegate.swift , specify initialization parameter values in the  didFinishLaunchingWithOptions  method:  let   applicationId   =   db8a1b41b8543397a798a181d9891b4c  let   clientId   =   563452bbc611d8106d5da767365897de  let   accessKey   =   28f06b89b62165c33de55265166d8781  let   fileKey   =   6305ee7ac8023191a333d9267f1a07e8  let   messageKey   =   9d774f6fa704f192e6aef53933f44e4f   SDK initialization  SC . initWith ( applicationId :   applicationId ,   clientId :   clientId ,   accessKey :   accessKey ,   fileKey :   fileKey ,   messageKey :   messageKey )", 
            "title": ".initWith(applicationId, clientId, accessKey, fileKey, messageKey)"
        }, 
        {
            "location": "/SWIFT/SCValue/", 
            "text": "Protocol for data handling.\n\n\n\n\nSCValue\n\n\nSCBool(value)\n\n\nSCString(value)\n \n\n\nSCInt(value)\n\n\nSCDouble(value)\n  \n\n\nSCDate(value)\n \n\n\nSCArray(value)\n \n\n\nSCDictionary(value)\n\n\n\n\n\n\n\n\n\n\n \n\n\nSCBool(value)\n\n\nScorocode Boolean type\n\n\nParameters\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nvalue\n\n\nBool\n\n\nMandatory\n\n\nLogical value\n\n\ntrue\n or \nfalse\n\n\n\n\n\n\n\n\nlet\n \ndataBool\n \n=\n \nSCBool\n(\ntrue\n)\n\n\n\n\n\n\n\n\n \n\n\nSCString(value)\n\n\nScorocode String type\n\n\nParameters\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nvalue\n\n\nString\n\n\nMandatory\n\n\nString value\n\n\n\"This is string\"\n\n\n\n\n\n\n\n\nlet\n \ndataString\n \n=\n \nSCString\n(\nAbCdE\n)\n\n\n\n\n\n\n\n\n \n\n\nSCInt(value)\n\n\nScorocode Boolean type\n\n\nParameters\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nvalue\n\n\nInt\n\n\nMandatory\n\n\nInteger value\n\n\n-42\n\n\n\n\n\n\n\n\nlet\n \ndataInt\n \n=\n \nSCInt\n(\n5\n)\n\n\n\n\n\n\n\n\n \n\n\nSCDouble(value)\n\n\nScorocode Double type\n\n\nParameters\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nvalue\n\n\nDouble\n\n\nMandatory\n\n\nFloating-point value\n\n\n3.1415926\n\n\n\n\n\n\n\n\nlet\n \ndataDouble\n \n=\n \nSCDouble\n(\n3.1415926\n)\n\n\n\n\n\n\n\n\n \n\n\nSCDate(value)\n\n\nScorocode Date type\n\n\nParameters\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nvalue\n\n\nNSDate\n\n\nMandatory\n\n\nDate value\n\n\n2016-05-31\n\n\n\n\n\n\n\n\nlet\n \ndataDate\n \n=\n \nSCDate\n(\ndateFormatter\n.\ndateFromString\n(\n2016-05-31\n)\n!\n)\n\n\n\n\n\n\n\n\n \n\n\nSCArray(value)\n\n\nScorocode Boolean type\n\n\nParameters\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nvalue\n\n\n[SCValue]\n\n\nMandatory\n\n\nArray value\n\n\n[SCInt(4), SCInt(8), SCInt(15), SCInt(16), SCInt(23), SCInt(42)]\n\n\n\n\n\n\n\n\nlet\n \ndataBool\n \n=\n \nSCBool\n(\ntrue\n)\n\n\nlet\n \ndataString\n \n=\n \nSCString\n(\nAbCdE\n)\n\n\nlet\n \ndataInt\n \n=\n \nSCInt\n(\n5\n)\n\n\nlet\n \ndataDouble\n \n=\n \nSCDouble\n(\n3.1415926\n)\n\n\nlet\n \ndataDate\n \n=\n \nSCDate\n(\ndateFormatter\n.\ndateFromString\n(\n2016-05-31\n)\n!\n)\n\n\nlet\n \ndataDictionary\n \n=\n \nSCDictionary\n([\nname\n \n:\n \ndataString\n,\n \ndate\n \n:\n \ndataDate\n])\n\n\n\nlet\n \ndataArray\n \n=\n \nSCArray\n([\ndataBool\n,\n \ndataString\n,\n \ndataInt\n,\n \ndataDouble\n,\n \ndataDate\n,\n \ndataDictionary\n])\n\n\n\n\n\n\n\n\n\n\nSCDictionary(value)\n\n\nScorocode Boolean type\n\n\nParameters\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nvalue\n\n\n[String: SCValue]\n\n\nMandatory\n\n\nObject with the \"key\" type of data: \"value\"\n\n\n[\"key1\" : SCString(\"A\"), \"key2\" : SCString(\"B\")]\n\n\n\n\n\n\n\n\nlet\n \ndataDictionary\n \n=\n \nSCDictionary\n([\nkey1\n \n:\n \nSCString\n(\nA\n),\n \nkey2\n \n:\n \nSCString\n(\nB\n)])", 
            "title": "SCValue"
        }, 
        {
            "location": "/SWIFT/SCValue/#scboolvalue", 
            "text": "Scorocode Boolean type  Parameters     Parameter  Type  Properties  Description  Value example      value  Bool  Mandatory  Logical value  true  or  false     let   dataBool   =   SCBool ( true )", 
            "title": "SCBool(value)"
        }, 
        {
            "location": "/SWIFT/SCValue/#scstringvalue", 
            "text": "Scorocode String type  Parameters     Parameter  Type  Properties  Description  Value example      value  String  Mandatory  String value  \"This is string\"     let   dataString   =   SCString ( AbCdE )", 
            "title": "SCString(value)"
        }, 
        {
            "location": "/SWIFT/SCValue/#scintvalue", 
            "text": "Scorocode Boolean type  Parameters     Parameter  Type  Properties  Description  Value example      value  Int  Mandatory  Integer value  -42     let   dataInt   =   SCInt ( 5 )", 
            "title": "SCInt(value)"
        }, 
        {
            "location": "/SWIFT/SCValue/#scdoublevalue", 
            "text": "Scorocode Double type  Parameters     Parameter  Type  Properties  Description  Value example      value  Double  Mandatory  Floating-point value  3.1415926     let   dataDouble   =   SCDouble ( 3.1415926 )", 
            "title": "SCDouble(value)"
        }, 
        {
            "location": "/SWIFT/SCValue/#scdatevalue", 
            "text": "Scorocode Date type  Parameters     Parameter  Type  Properties  Description  Value example      value  NSDate  Mandatory  Date value  2016-05-31     let   dataDate   =   SCDate ( dateFormatter . dateFromString ( 2016-05-31 ) ! )", 
            "title": "SCDate(value)"
        }, 
        {
            "location": "/SWIFT/SCValue/#scarrayvalue", 
            "text": "Scorocode Boolean type  Parameters     Parameter  Type  Properties  Description  Value example      value  [SCValue]  Mandatory  Array value  [SCInt(4), SCInt(8), SCInt(15), SCInt(16), SCInt(23), SCInt(42)]     let   dataBool   =   SCBool ( true )  let   dataString   =   SCString ( AbCdE )  let   dataInt   =   SCInt ( 5 )  let   dataDouble   =   SCDouble ( 3.1415926 )  let   dataDate   =   SCDate ( dateFormatter . dateFromString ( 2016-05-31 ) ! )  let   dataDictionary   =   SCDictionary ([ name   :   dataString ,   date   :   dataDate ])  let   dataArray   =   SCArray ([ dataBool ,   dataString ,   dataInt ,   dataDouble ,   dataDate ,   dataDictionary ])", 
            "title": "SCArray(value)"
        }, 
        {
            "location": "/SWIFT/SCValue/#scdictionaryvalue", 
            "text": "Scorocode Boolean type  Parameters     Parameter  Type  Properties  Description  Value example      value  [String: SCValue]  Mandatory  Object with the \"key\" type of data: \"value\"  [\"key1\" : SCString(\"A\"), \"key2\" : SCString(\"B\")]     let   dataDictionary   =   SCDictionary ([ key1   :   SCString ( A ),   key2   :   SCString ( B )])", 
            "title": "SCDictionary(value)"
        }, 
        {
            "location": "/SWIFT/SCObject/", 
            "text": "SCObject\n\n\ninit Object(collection, id?)\n\n\n.set(dic)\n\n\n.save(callback\n  \n\n\n.getById(id, collection, callback)\n\n\n.get(name)\n\n\n.upload(field, filename, data, callback\n\n\n.getFileLink(fieldName, callback)\n\n\n.deleteFile (field, filename, callback)\n  \n\n\n.remove(callback)\n \n\n\n.push(name, _ value)\n\n\n.pushEach(name, _ value)\n  \n\n\n.pull(name, _ value)\n \n\n\n.pullAll(name, _ value)\n \n\n\n.addToSet(name, _ value)\n\n\n.addToSetEach(name, _ value)\n \n\n\n.pop(name, _ value)\n \n\n\n.inc(name, _ value)\n\n\n.currentDate(name, typeSpec)\n\n\n.mul(name, _ value)\n\n\n.min(name, _ value)\n\n\n.max(name, _ value)\n\n\n\n\n\n\n\n\n\n\n\n\ninit Object(collection, id?)\n\n\nSCObject represents the application data object and includes methods for handling this data. The constructor creates a minimal basic \"wrap\" for user data.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\ncollection\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435\n\n\n\u0418\u043c\u044f \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u0432 \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043e\u0431\u044a\u0435\u043a\u0442\n\n\n\"testcoll\"\n\n\n\n\n\n\nid\n\n\nString\n\n\n\n\n_id \u043e\u0431\u044a\u0435\u043a\u0442\u0430\n\n\n\"huNr3L7QDh\"\n\n\n\n\n\n\n\n\nExample\n \n\n\n// \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043d\u043e\u0432\u044b\u0439 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 items.\n\n\nlet\n \nobj1\n \n=\n \nSCObject\n(\ncollection\n:\n \nitems\n,\n \nid\n:\n \nhuNr3L7QDh\n)\n\n\nlet\n \nobj2\n \n=\n \nSCObject\n(\ncollection\n:\n \nitems\n)\n\n\n\n\n\n\n\n\n\n\n.set(dic)\n\n\nMethod for setting data to object\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\ndic\n\n\n[String: SCValue]\n\n\n\n\nDictionary with data to be transferred to document\n\n\n[\"fieldString\": SCString(\"NewValue\")]\n\n\n\n\n\n\n\n\nExample\n \n\n\nlet\n \nnewItem\n \n=\n \nSCObject\n(\ncollection\n:\n \nitems\n)\n\n\nnewItem\n.\nset\n([\n\n    \nfieldString\n:\n \nSCString\n(\nSome test string\n),\n\n    \nreadACL\n:\n \nSCArray\n([\nSCString\n(\n*\n),\n \nSCString\n(\n0123456789\n)])\n\n    \n])\n\n\nnewItem\n.\nsave\n()\n \n{\n\n    \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n    \nif\n \nsuccess\n \n{\n\n        \n// ... \n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \n// ...\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\n\n.save(callback)\n\n\nThe method saves the object in the data warehouse or updates an object that already exists there\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\ncallback\n\n\n(Bool, SCError?, [String: AnyObject]?)\n\n\n\n\nCallback for the request being executed.\n\n\n\n\n\n\n\n\n\n\nExample\n  \n\n\nlet\n \nnewItem\n \n=\n \nSCObject\n(\ncollection\n:\n \nitems\n)\n\n\nnewItem\n.\nset\n([\nfieldName\n:\n \nSCString\n(\nValue\n)])\n\n\nnewItem\n.\nsave\n()\n \n{\n\n    \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n    \nif\n \nsuccess\n \n{\n\n        \n// ... \n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \n// ...\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\n\n.getById(id, collection, callback)\n\n\nMethod for retrieving a collection object from DB by its _id.\n\n\nExample\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nid\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nDocument identifier\n\n\n\"huNr3L7QDh\"\n\n\n\n\n\n\ncollection\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nCollection name\n\n\n\"items\"\n\n\n\n\n\n\ncallback\n\n\n(Bool, SCError?, [String: AnyObject]?) -\n Void\n\n\n\n\nCallback for the request being executed.\n\n\n\n\n\n\n\n\n\n\nExample\n  \n\n\nSCObject\n.\ngetById\n(\np3OtsLXw8p\n,\n \ncollection\n:\n \nitems\n)\n \n{\n\n    \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n    \nif\n \nsuccess\n \n{\n\n        \nprint\n(\nSuccess\n)\n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \nprint\n(\nError\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\n\n.get(name)\n\n\nMethod for retrieving data from a specified object field.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nField name\n\n\n\"price\"\n\n\n\n\n\n\n\n\nExample\n  \n\n\nlet\n \ndataItem\n \n=\n \nSCObject\n(\ncollection\n:\n \nitems\n,\n \nid\n:\n \nhuNr3L7QDh\n)\n\n\ndataItem\n.\nget\n(\nprice\n)\n\n\n\n\n\n\n\n\n.upload(field, filename, data, callback)\n\n\nFile upload method\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\nField name\n\n\n\"attachments\"\n\n\n\n\n\n\nfilename\n\n\nString\n\n\nMandatory\n\n\nFile name\n\n\n\"docname.pdf\"\n\n\n\n\n\n\ndata\n\n\nNSData\n\n\nMandatory\n\n\nFile content\n\n\n\n\n\n\n\n\ncallback\n\n\n(Bool, SCError?)\n\n\n\n\nCallback for the request being executed.\n\n\n\n\n\n\n\n\n\n\nExample\n  \n\n\nlet\n \nnewItem\n \n=\n \nSCObject\n(\ncollection\n:\n \nitems\n)\n\n\nlet\n \nimage\n \n=\n \nUIImage\n(\nnamed\n:\nforupload\n)\n\n\nnewItem\n.\nset\n([\n\n    \ndescription\n:\n \nSCString\n(\nExample upload\n)\n\n    \n])\n\n\nnewItem\n.\nsave\n()\n \n{\n\n    \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n    \nif\n \nsuccess\n \n{\n\n        \nnewItem\n.\nupload\n(\nattachment\n,\n \nimage.jpg\n,\n \ndata\n:\n \nimage\n)\n \n{\n\n            \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n            \nif\n \nsuccess\n \n{\n\n                \nprint\n(\nSuccess\n)\n\n            \n}\n \nelse\n \n{\n\n            \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n                    \nprint\n(\nError\n)\n\n                \n}\n\n            \n}\n\n        \n}\n   \n    \n}\n \nelse\n \n{\n\n        \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n             \nprint\n(\nError\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\n\n.getFile(field, filename, callback)\n\n\nMethod for retrieving file contents\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\nField name\n\n\n\"attachments\"\n\n\n\n\n\n\nfilename\n\n\nString\n\n\nMandatory\n\n\nFile name\n\n\n\"docname.pdf\"\n\n\n\n\n\n\ncallback\n\n\n(Bool, SCError?)\n\n\n\n\nCallback for the request being executed.\n\n\n\n\n\n\n\n\n\n\nExample\n\n\nlet\n \nitem\n \n=\n \nSCObject\n(\ncollection\n:\n \nitems\n,\n \nid\n:\n \nhuNr3L7QDh\n)\n\n\nitem\n.\ngetFileLink\n(\nattachment\n)\n\n    \nif\n \nsuccess\n \n{\n\n        \nprint\n(\nSuccess\n)\n\n    \n}\n \nelse\n \n{\n\n    \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \nprint\n(\nError\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\n\n\n\n.deleteFile(field, filename, callback)\n\n\nMethod for file deletion\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\nField name\n\n\n\"attachments\"\n\n\n\n\n\n\nfilename\n\n\nString\n\n\nMandatory\n\n\nFile name\n\n\n\"docname.pdf\"\n\n\n\n\n\n\ncallback\n\n\n(Bool, SCError?)\n\n\n\n\nCallback for the request being executed.\n\n\n\n\n\n\n\n\n\n\nExample\n \n\n\nlet\n \nitem\n \n=\n \nSCObject\n(\ncollection\n:\n \nitems\n,\n \nid\n:\n \nhuNr3L7QDh\n)\n\n\nitem\n.\ndelete\n(\nattachment\n,\n \nswiftDocs.pdf\n)\n\n    \nif\n \nsuccess\n \n{\n\n        \nprint\n(\nSuccess\n)\n\n    \n}\n \nelse\n \n{\n\n    \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \nprint\n(\nError\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\n\n\n\n.remove(callback)\n\n\nMethod for removing the selected document\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\ncallback\n\n\n(Bool, SCError?)\n\n\n\n\nCallback for the request being executed.\n\n\n\n\n\n\n\n\n\n\nExample\n  \n\n\nlet\n \nitem\n \n=\n \nSCObject\n(\ncollection\n:\n \nitems\n,\n \nid\n:\n \nhuNr3L7QDh\n)\n\n\nobj\n.\nremove\n()\n \n{\n\n    \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n \nif\n \nsuccess\n \n{\n\n        \nprint\n(\nSuccess\n)\n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \nprint\n(\nError\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\nException\n\n\n\"Id is not specified\" - \nString\n\n\n\n\n\n\n.push(name, _ value)\n\n\nMethod for adding an element to an array\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nName of the field whose value should be updated\n\n\n\"tags\"\n\n\n\n\n\n\n_ value\n\n\nSCValue\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nValue of the new array element\n\n\n42\n\n\n\n\n\n\n\n\nExample\n\n\nlet\n \neditItem\n \n=\n \nSCObject\n(\ncollection\n:\n \nitems\n)\n\n\neditItem\n.\npush\n(\nlocation\n,\n \nSCString\n(\nSierra Army Depot\n))\n\n\n\n\n\n\n\n\n\n\n.pushEach(name, _ value)\n\n\nMethod for adding several elements to an array.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nName of the field whose value should be updated\n\n\n\"tags\"\n\n\n\n\n\n\n_ value\n\n\nSCValue\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nValues of new array elements\n\n\n42, [43,43], 44\n\n\n\n\n\n\n\n\nExample\n\n\nlet\n \neditItem\n \n=\n \nSCObject\n(\ncollection\n:\n \ncollection\n)\n\n\neditItem\n.\npushEach\n(\nlocation\n,\n \nSCArray\n([\nSCString\n(\nSierra Army Depot\n),\n \nSCString\n(\nNavarro\n)]))\n\n\n\n\n\n\n\n\n\n\n.pull(name, _ value)\n\n\nMethod for removing all array elements whose values are the same as the specified one.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nName of the field whose value should be updated\n\n\n\"tags\"\n\n\n\n\n\n\n_ value\n\n\nSCPullable\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nValue to be removed\n\n\n42\n\n\n\n\n\n\n\n\n\n\n\n\n.pullAll(name, _ value)\n\n\nMethod for removing all array elements whose values are the same as one of the specified values.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nName of the field whose value should be updated\n\n\n\"tags\"\n\n\n\n\n\n\n_ value\n\n\nSCValue\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nArray of values to be removed\n\n\n[42, 44]\n\n\n\n\n\n\n\n\n\n\n\n\n.addToSet(name, _ value)\n\n\nMethod for adding an element to an array only if there are no elements with the same name in the array.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nName of the field whose value should be updated\n\n\n\"tags\"\n\n\n\n\n\n\n_ value\n\n\nSCValue\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nValue of the new array element\n\n\n42\n\n\n\n\n\n\n\n\nExample\n\n\nlet\n \neditItem\n \n=\n \nSCObject\n(\ncollection\n:\n \nitems\n)\n\n\neditItem\n.\naddToSet\n(\nlocation\n,\n \nSCString\n(\nA\n))\n\n\n\n\n\n\n\n\n\n\n.addToSetEach(name, _ value)\n\n\nMethod for adding elements to an array only if there are no elements with the same name in the array.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nName of the field whose value should be updated\n\n\n\"tags\"\n\n\n\n\n\n\n_ value\n\n\nSCValue\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nArray of new array element values\n\n\n[42, 43]\n\n\n\n\n\n\n\n\nExample\n\n\nlet\n \neditItem\n \n=\n \nSCObject\n(\ncollection\n:\n \nitems\n)\n\n\neditItem\n.\naddToSetEach\n(\nlocation\n,\n \nSCArray\n([\nSCString\n(\nSierra Army Depot\n),\n \nSCString\n(\nNavarro\n)]))\n\n\n\n\n\n\n\n\n\n\n.pop(name, _ value)\n\n\nMethod for removing the first or the last array element\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nName of the field whose value should be updated\n\n\n\"tags\"\n\n\n\n\n\n\n_ value\n\n\nInt\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nPosition of the element to be removed in the array: -1 for the first element and 1 for the last\n\n\n-1\n\n\n\n\n\n\n\n\nExample\n \n\n\nlet\n \neditItem\n \n=\n \nSCObject\n(\ncollection\n:\n \nitems\n)\n\n\neditItem\n.\npop\n(\nlocation\n,\n \n1\n)\n\n\n\n\n\n\n\n\n\n\n.inc(name, _ value)\n\n\nThe method increments the numeric field value by a defined number\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nName of the field whose value should be updated\n\n\n\"price\"\n\n\n\n\n\n\n_ value\n\n\nSCValue\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nIncrement step\n\n\n5\n\n\n\n\n\n\n\n\nExample\n \n\n\nlet\n \neditItem\n \n=\n \nSCObject\n(\ncollection\n:\n \nitems\n)\n\n\neditItem\n.\ninc\n(\namount\n,\n \nSCInt\n(\n-\n14\n))\n\n\n\n\n\n\n\n\n\n\n.currentDate(name, typeSpec)\n\n\nSets the current time as the field's value\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nName of the field whose value should be updated\n\n\n\"price\"\n\n\n\n\n\n\ntypeSpec\n\n\nSCValue\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nDate type. Accepts the following values: true, \"date\" or \"timestamp\"\n\n\n\"timestamp\"\n\n\n\n\n\n\n\n\nExample\n:\n\n\nlet\n \neditItem\n \n=\n \nSCObject\n(\ncollection\n:\n \nitems\n)\n\n\neditItem\n.\ncurrentDate\n(\nsomeDate\n,\n \ntypeSpec\n:\n \ndate\n)\n\n\n\n\n\n\n\n\n\n\n.mul(name, _ value)\n\n\nThe method multiplies the numeric field value by a defined number\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nName of the field whose value should be updated\n\n\n\"price\"\n\n\n\n\n\n\n_ value\n\n\nSCValue\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nMultiplier\n\n\n2.5\n\n\n\n\n\n\n\n\nExample\n  \n\n\nlet\n \neditItem\n \n=\n \nSCObject\n(\ncollection\n:\n \nitems\n)\n\n\neditItem\n.\nmin\n(\nprice\n,\n \nSCDouble\n(\n42.42\n))\n\n\n\n\n\n\n\n\n\n\n.min(name, _ value)\n\n\nThe method updates the numeric field value only if the new value is less than the current field value\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nName of the field whose value should be updated\n\n\n\"price\"\n\n\n\n\n\n\n_ value\n\n\nSCValue\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nNew value\n\n\n42\n\n\n\n\n\n\n\n\nExample\n  \n\n\nlet\n \neditItem\n \n=\n \nSCObject\n(\ncollection\n:\n \nitems\n)\n\n\neditItem\n.\nmin\n(\nprice\n,\n \nSCInt\n(\n42\n))\n\n\n\n\n\n\n\n\n\n\n.max(name, _ value)\n\n\nThe method updates the numeric field value only if the new value is greater than the current field value\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nName of the field whose value should be updated\n\n\n\"price\"\n\n\n\n\n\n\n_ value\n\n\nSCValue\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nNew value\n\n\n43\n\n\n\n\n\n\n\n\nExample\n  \n\n\nlet\n \neditItem\n \n=\n \nSCObject\n(\ncollection\n:\n \nitems\n)", 
            "title": "SCObject"
        }, 
        {
            "location": "/SWIFT/SCObject/#init-objectcollection-id", 
            "text": "SCObject represents the application data object and includes methods for handling this data. The constructor creates a minimal basic \"wrap\" for user data.     Parameter  Type  Properties  Description  Value example      collection  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435  \u0418\u043c\u044f \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u0432 \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043e\u0431\u044a\u0435\u043a\u0442  \"testcoll\"    id  String   _id \u043e\u0431\u044a\u0435\u043a\u0442\u0430  \"huNr3L7QDh\"     Example    // \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043d\u043e\u0432\u044b\u0439 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 items.  let   obj1   =   SCObject ( collection :   items ,   id :   huNr3L7QDh )  let   obj2   =   SCObject ( collection :   items )", 
            "title": "init Object(collection, id?)"
        }, 
        {
            "location": "/SWIFT/SCObject/#setdic", 
            "text": "Method for setting data to object     Parameter  Type  Properties  Description  Value example      dic  [String: SCValue]   Dictionary with data to be transferred to document  [\"fieldString\": SCString(\"NewValue\")]     Example", 
            "title": ".set(dic)"
        }, 
        {
            "location": "/SWIFT/SCObject/#let-newitem-scobjectcollection-items-newitemset-fieldstring-scstringsome-test-string-readacl-scarrayscstring-scstring0123456789-newitemsave-success-error-result-in-if-success-else-if-let-error-error", 
            "text": "", 
            "title": "let newItem = SCObject(collection: &quot;items&quot;)"
        }, 
        {
            "location": "/SWIFT/SCObject/#savecallback", 
            "text": "The method saves the object in the data warehouse or updates an object that already exists there     Parameter  Type  Properties  Description  Value example      callback  (Bool, SCError?, [String: AnyObject]?)   Callback for the request being executed.      Example", 
            "title": ".save(callback)"
        }, 
        {
            "location": "/SWIFT/SCObject/#let-newitem-scobjectcollection-items-newitemsetfieldname-scstringvalue-newitemsave-success-error-result-in-if-success-else-if-let-error-error", 
            "text": "", 
            "title": "let newItem = SCObject(collection: &quot;items&quot;)"
        }, 
        {
            "location": "/SWIFT/SCObject/#getbyidid-collection-callback", 
            "text": "Method for retrieving a collection object from DB by its _id.  Example     Parameter  Type  Properties  Description  Value example      id  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Document identifier  \"huNr3L7QDh\"    collection  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Collection name  \"items\"    callback  (Bool, SCError?, [String: AnyObject]?) -  Void   Callback for the request being executed.      Example", 
            "title": ".getById(id, collection, callback)"
        }, 
        {
            "location": "/SWIFT/SCObject/#scobjectgetbyidp3otslxw8p-collection-items-success-error-result-in-if-success-printsuccess-else-if-let-error-error-printerror", 
            "text": "", 
            "title": "SCObject.getById(&quot;p3OtsLXw8p&quot;, collection: &quot;items&quot;) {"
        }, 
        {
            "location": "/SWIFT/SCObject/#getname", 
            "text": "Method for retrieving data from a specified object field.     Parameter  Type  Properties  Description  Value example      name  String  Mandatory  Field name  \"price\"     Example", 
            "title": ".get(name)"
        }, 
        {
            "location": "/SWIFT/SCObject/#let-dataitem-scobjectcollection-items-id-hunr3l7qdh-dataitemgetprice", 
            "text": "", 
            "title": "let dataItem = SCObject(collection: &quot;items&quot;, id: &quot;huNr3L7QDh&quot;)"
        }, 
        {
            "location": "/SWIFT/SCObject/#uploadfield-filename-data-callback", 
            "text": "File upload method     Parameter  Type  Properties  Description  Value example      field  String  Mandatory  Field name  \"attachments\"    filename  String  Mandatory  File name  \"docname.pdf\"    data  NSData  Mandatory  File content     callback  (Bool, SCError?)   Callback for the request being executed.      Example", 
            "title": ".upload(field, filename, data, callback)"
        }, 
        {
            "location": "/SWIFT/SCObject/#let-newitem-scobjectcollection-items-let-image-uiimagenamedforupload-newitemset-description-scstringexample-upload-newitemsave-success-error-result-in-if-success-newitemuploadattachment-imagejpg-data-image-success-error-result-in-if-success-printsuccess-else-if-let-error-error-printerror-else-if-let-error-error-printerror", 
            "text": "", 
            "title": "let newItem = SCObject(collection: &quot;items&quot;)"
        }, 
        {
            "location": "/SWIFT/SCObject/#getfilefield-filename-callback", 
            "text": "Method for retrieving file contents     Parameter  Type  Properties  Description  Value example      field  String  Mandatory  Field name  \"attachments\"    filename  String  Mandatory  File name  \"docname.pdf\"    callback  (Bool, SCError?)   Callback for the request being executed.      Example  let   item   =   SCObject ( collection :   items ,   id :   huNr3L7QDh )  item . getFileLink ( attachment ) \n     if   success   { \n         print ( Success ) \n     }   else   { \n     if   let   error   =   error   { \n             print ( Error ) \n         } \n     }  }", 
            "title": ".getFile(field, filename, callback)"
        }, 
        {
            "location": "/SWIFT/SCObject/#deletefilefield-filename-callback", 
            "text": "Method for file deletion     Parameter  Type  Properties  Description  Value example      field  String  Mandatory  Field name  \"attachments\"    filename  String  Mandatory  File name  \"docname.pdf\"    callback  (Bool, SCError?)   Callback for the request being executed.      Example    let   item   =   SCObject ( collection :   items ,   id :   huNr3L7QDh )  item . delete ( attachment ,   swiftDocs.pdf ) \n     if   success   { \n         print ( Success ) \n     }   else   { \n     if   let   error   =   error   { \n             print ( Error ) \n         } \n     }  }", 
            "title": ".deleteFile(field, filename, callback)"
        }, 
        {
            "location": "/SWIFT/SCObject/#removecallback", 
            "text": "Method for removing the selected document     Parameter  Type  Properties  Description  Value example      callback  (Bool, SCError?)   Callback for the request being executed.      Example     let   item   =   SCObject ( collection :   items ,   id :   huNr3L7QDh )  obj . remove ()   { \n     success ,   error ,   result   in \n  if   success   { \n         print ( Success ) \n     }   else   { \n         if   let   error   =   error   { \n             print ( Error ) \n         } \n     }  }   Exception  \"Id is not specified\" -  String", 
            "title": ".remove(callback)"
        }, 
        {
            "location": "/SWIFT/SCObject/#pushname-_-value", 
            "text": "Method for adding an element to an array     Parameter  Type  Properties  Description  Value example      name  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Name of the field whose value should be updated  \"tags\"    _ value  SCValue  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Value of the new array element  42     Example  let   editItem   =   SCObject ( collection :   items )  editItem . push ( location ,   SCString ( Sierra Army Depot ))", 
            "title": ".push(name, _ value)"
        }, 
        {
            "location": "/SWIFT/SCObject/#pusheachname-_-value", 
            "text": "Method for adding several elements to an array.     Parameter  Type  Properties  Description  Value example      name  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Name of the field whose value should be updated  \"tags\"    _ value  SCValue  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Values of new array elements  42, [43,43], 44     Example  let   editItem   =   SCObject ( collection :   collection )  editItem . pushEach ( location ,   SCArray ([ SCString ( Sierra Army Depot ),   SCString ( Navarro )]))", 
            "title": ".pushEach(name, _ value)"
        }, 
        {
            "location": "/SWIFT/SCObject/#pullname-_-value", 
            "text": "Method for removing all array elements whose values are the same as the specified one.     Parameter  Type  Properties  Description  Value example      name  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Name of the field whose value should be updated  \"tags\"    _ value  SCPullable  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Value to be removed  42", 
            "title": ".pull(name, _ value)"
        }, 
        {
            "location": "/SWIFT/SCObject/#pullallname-_-value", 
            "text": "Method for removing all array elements whose values are the same as one of the specified values.     Parameter  Type  Properties  Description  Value example      name  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Name of the field whose value should be updated  \"tags\"    _ value  SCValue  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Array of values to be removed  [42, 44]", 
            "title": ".pullAll(name, _ value)"
        }, 
        {
            "location": "/SWIFT/SCObject/#addtosetname-_-value", 
            "text": "Method for adding an element to an array only if there are no elements with the same name in the array.     Parameter  Type  Properties  Description  Value example      name  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Name of the field whose value should be updated  \"tags\"    _ value  SCValue  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Value of the new array element  42     Example  let   editItem   =   SCObject ( collection :   items )  editItem . addToSet ( location ,   SCString ( A ))", 
            "title": ".addToSet(name, _ value)"
        }, 
        {
            "location": "/SWIFT/SCObject/#addtoseteachname-_-value", 
            "text": "Method for adding elements to an array only if there are no elements with the same name in the array.     Parameter  Type  Properties  Description  Value example      name  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Name of the field whose value should be updated  \"tags\"    _ value  SCValue  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Array of new array element values  [42, 43]     Example  let   editItem   =   SCObject ( collection :   items )  editItem . addToSetEach ( location ,   SCArray ([ SCString ( Sierra Army Depot ),   SCString ( Navarro )]))", 
            "title": ".addToSetEach(name, _ value)"
        }, 
        {
            "location": "/SWIFT/SCObject/#popname-_-value", 
            "text": "Method for removing the first or the last array element     Parameter  Type  Properties  Description  Value example      name  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Name of the field whose value should be updated  \"tags\"    _ value  Int  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Position of the element to be removed in the array: -1 for the first element and 1 for the last  -1     Example    let   editItem   =   SCObject ( collection :   items )  editItem . pop ( location ,   1 )", 
            "title": ".pop(name, _ value)"
        }, 
        {
            "location": "/SWIFT/SCObject/#incname-_-value", 
            "text": "The method increments the numeric field value by a defined number     Parameter  Type  Properties  Description  Value example      name  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Name of the field whose value should be updated  \"price\"    _ value  SCValue  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Increment step  5     Example    let   editItem   =   SCObject ( collection :   items )  editItem . inc ( amount ,   SCInt ( - 14 ))", 
            "title": ".inc(name, _ value)"
        }, 
        {
            "location": "/SWIFT/SCObject/#currentdatename-typespec", 
            "text": "Sets the current time as the field's value     Parameter  Type  Properties  Description  Value example      name  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Name of the field whose value should be updated  \"price\"    typeSpec  SCValue  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Date type. Accepts the following values: true, \"date\" or \"timestamp\"  \"timestamp\"     Example :  let   editItem   =   SCObject ( collection :   items )  editItem . currentDate ( someDate ,   typeSpec :   date )", 
            "title": ".currentDate(name, typeSpec)"
        }, 
        {
            "location": "/SWIFT/SCObject/#mulname-_-value", 
            "text": "The method multiplies the numeric field value by a defined number     Parameter  Type  Properties  Description  Value example      name  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Name of the field whose value should be updated  \"price\"    _ value  SCValue  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Multiplier  2.5     Example     let   editItem   =   SCObject ( collection :   items )  editItem . min ( price ,   SCDouble ( 42.42 ))", 
            "title": ".mul(name, _ value)"
        }, 
        {
            "location": "/SWIFT/SCObject/#minname-_-value", 
            "text": "The method updates the numeric field value only if the new value is less than the current field value     Parameter  Type  Properties  Description  Value example      name  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Name of the field whose value should be updated  \"price\"    _ value  SCValue  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  New value  42     Example     let   editItem   =   SCObject ( collection :   items )  editItem . min ( price ,   SCInt ( 42 ))", 
            "title": ".min(name, _ value)"
        }, 
        {
            "location": "/SWIFT/SCObject/#maxname-_-value", 
            "text": "The method updates the numeric field value only if the new value is greater than the current field value     Parameter  Type  Properties  Description  Value example      name  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Name of the field whose value should be updated  \"price\"    _ value  SCValue  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  New value  43     Example     let   editItem   =   SCObject ( collection :   items )", 
            "title": ".max(name, _ value)"
        }, 
        {
            "location": "/SWIFT/SCQuery/", 
            "text": ".Query\n\n\n.init(collection)\n\n\n.find(callback -\n Void)\n \n\n\n.count(callback -\n Void)\n\n\n.update(update, callback -\n Void)\n \n\n\n.remove(callback)\n \n\n\n.limit(limit)\n\n\n.skip(skip)\n\n\n.page(page)\n\n\n.raw(json)\n\n\n.reset()\n\n\n.ascending(name)\n\n\n.descending(name)\n \n\n\n.fields(names)\n \n\n\n.addOperator(name, oper)\n \n\n\n.equalTo(name, _ value)\n \n\n\n.notEqualTo(name, _ value)\n\n\n.containedIn(name, _ value)\n \n\n\n.containsAll(name, _ value)\n \n\n\n.notContainedIn(name, _ value)\n\n\n.greaterThan(name, _ value)\n\n\n.greaterThanOrEqualTo(name, _ value)\n\n\n.lessThan(name, _ value)\n\n\n.lessThanOrEqualTo(name, _ value)\n\n\n.exists(name)\n\n\n.doesNotExist(name)\n\n\n.contains(name, _ pattern)\n\n\n.startsWith(name, _ pattern)\n\n\n.endsWith(name, _ pattern)\n\n\n.and(operators)\n\n\n.or(operators)\n\n\n\n\n\n\n\n\n\n\n\n\ninit(collection)\n\n\nInitialization of collection data query.\n\n\nProperties\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\ncollection\n\n\nString\n\n\nMandatory\n\n\nName of the collection where the object is added\n\n\n\"items\"\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nquery\n \n=\n \nSCQuery\n(\ncollection\n:\n \nusers\n)\n\n\n\n\n\n\n\n\n \n\n\n.find(callback)\n\n\nMethod for searching objects based on the created sampling condition.\n\n\nProperties\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\ncallback\n\n\n(Bool, SCError?, [String: AnyObject]?) -\n Void\n\n\n\n\nCallback for the request being executed.\n\n\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nquery\n \n=\n \nSCQuery\n(\ncollection\n:\n \nusers\n)\n\n\nquery\n.\nfind\n()\n \n{\n\n    \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n    \nif\n \nsuccess\n \n{\n\n        \nprint\n(\nSuccess\n)\n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \nprint\n(\nError\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n \n\n\n.count(callback)\n\n\nMethod for counting objects that meet the query conditions.\n\n\nProperties\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\ncallback\n\n\n(Bool, SCError?, Int?) -\n Void\n\n\n\n\nCallback for the request being executed.\n\n\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nquery\n \n=\n \nSCQuery\n(\ncollection\n:\n \nusers\n)\n\n\nquery\n.\ncount\n()\n \n{\n\n    \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n    \nif\n \nsuccess\n \n{\n\n        \nprint\n(\nSuccess\n)\n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \nprint\n(\nError\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n \n\n\n.update(update, callback)\n\n\nMethod for updating the objects matching the sampling conditions.\n\n\nProperties\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nupdate\n\n\nSCUpdate\n\n\nMandatory\n\n\nSCUpdate object to which data for updating is transferred\n\n\n\n\n\n\n\n\ncallback()\n\n\n(Bool, SCError?, [String: AnyObject]?) -\n Void\n\n\n\n\nCallback for the request being executed.\n\n\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nuserArrivalTime\n \n=\n \nSCUpdate\n()\n\n\nlet\n \ncurrentDate\n \n=\n \nSCUpdateOperator\n.\ncurrentDate\n(\nfieldName\n,\n \ntypeSpec\n:\n \ntimestamp\n)\n\n\nlogArrivalTime\n.\naddOperator\n(\ncurrentDate\n)\n\n\n\nvar\n \narrivedUsers\n \n=\n \nSCQuery\n(\ncollection\n:\n \nusers\n)\n\n\narrivedUsers\n.\nequalTo\n(\nflightRace\n,\n \nSCString\n(\nAF4926\n))\n\n\narrivedUsers\n.\nupdate\n(\nuserArrivalTime\n)\n \n{\n\n    \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n    \nif\n \nsuccess\n \n{\n\n        \nprint\n(\nSuccess\n)\n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \nprint\n(\nError\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\n\n.remove(callback)\n\n\nMethod for removing the objects matching the sampling conditions.\n\n\nProperties\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\ncallback()\n\n\n(Bool, SCError?, [String: AnyObject]?) -\n Void\n\n\n\n\nCallback for the request being executed.\n\n\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \noldStuff\n \n=\n \nSCQuery\n(\ncollection\n:\n \nStuff\n)\n\n\noldStuff\n.\nlessThan\n(\ncreatedAt\n,\n \nSCDate\n(\n2016-06-54T17:24:23.091+03:00\n))\n\n\noldStuff\n.\nremove\n()\n \n{\n\n    \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n    \nif\n \nsuccess\n \n{\n\n        \nprint\n(\nSuccess\n)\n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \nprint\n(\nError\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n \n\n\n.limit(limit)\n\n\nMethod for setting the sampling limit.\n\n\nProperties\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nlimit\n\n\nInt\n\n\nMandatory\n\n\nSampling limit\n\n\n100\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nquery\n \n=\n \nSCQuery\n(\ncollection\n:\n \nitems\n)\n\n\nquery\n.\nlimit\n(\n25\n)\n\n\nquery\n.\nfind\n()\n \n{\n\n    \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n    \nif\n \nsuccess\n \n{\n\n        \nprint\n(\nSuccess\n)\n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \nprint\n(\nError\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\n\n.skip(skip)\n\n\nMethod for defining the number of documents to be skipped before document sampling\n\n\nProperties\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nlimit\n\n\nInt\n\n\nMandatory\n\n\nNumber of skipped documents\n\n\n1000\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nquery\n \n=\n \nSCQuery\n(\ncollection\n:\n \nitems\n)\n\n\nquery\n.\nskip\n(\n1000\n)\n\n\nquery\n.\nfind\n()\n \n{\n\n    \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n    \nif\n \nsuccess\n \n{\n\n        \nprint\n(\nSuccess\n)\n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \nprint\n(\nError\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\n\n.page(page)\n\n\nMethod for \"per-page\" output of sampling results in accordance with the specified sampling limit.\n\n\nProperties\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\npage\n\n\nInt\n\n\nMandatory\n\n\nPage number\n\n\n4\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nquery\n \n=\n \nSCQuery\n(\ncollection\n:\n \nitems\n)\n\n\nquery\n.\nlimit\n(\n25\n)\n\n\nquery\n.\npage\n(\n4\n)\n\n\nquery\n.\nfind\n()\n \n{\n\n    \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n    \nif\n \nsuccess\n \n{\n\n        \nprint\n(\nSuccess\n)\n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \nprint\n(\nError\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n \n\n\n.raw(json)\n\n\nMethod for defining sampling conditions in the form of a JSON structure to create a DB query in MongoDB language.\n\n\nProperties\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\njson\n\n\nString\n\n\nMandatory\n\n\nSampling conditions\n\n\n{location: {$in: ['New California Republic', 'Vault City']}}\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nquery\n \n=\n \nSCQuery\n(\ncollection\n:\n \nitems\n)\n\n\nquery\n.\nraw\n(\n{ \n\\\nfieldString\n\\\n : \n\\\n\u0421\u0442\u0440\u043e\u043a\u0430\n\\\n }\n)\n\n\nquery\n.\nfind\n()\n \n{\n\n    \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n    \nif\n \nsuccess\n \n{\n\n        \nprint\n(\nSuccess\n)\n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \nprint\n(\nError\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n \n\n\n.reset()\n\n\nMethod for resetting the sampling conditions\n\n\nExample\n\n\nvar\n \nquery\n \n=\n \nSCQuery\n(\ncollection\n:\n \nitems\n)\n\n\n\nquery\n.\nequalTo\n(\nfieldName\n,\n \nSCString\n(\nJohn Doe\n))\n\n\nquery\n.\nraw\n(\n{ \n\\\nfieldString\n\\\n : \n\\\n\u0421\u0442\u0440\u043e\u043a\u0430\n\\\n }\n)\n\n\nquery\n.\nascending\n(\nfield1\n)\n\n\nquery\n.\ndescending\n(\nfield2\n)\n\n\nquery\n.\nfields\n([\nfield1\n,\n \nfield2\n])\n\n\nlet\n \nand1\n \n=\n \nSCOperator\n.\nEqualTo\n(\nfieldString\n,\n \nSCString\n(\n\u0421\u0442\u0440\u043e\u043a\u0430\n))\n\n\nlet\n \nand2\n \n=\n \nSCOperator\n.\nEqualTo\n(\nfieldNumber\n,\n \nSCInt\n(\n33\n))\n\n\nquery\n.\nand\n([\nand1\n,\n \nand2\n])\n\n\n\nquery\n.\nreset\n()\n\n\n\n\n\n\n \n\n\n.ascending(name)\n\n\nMethod for sorting data in ascending order of specified field values before sampling.\n\n\nProperties\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nField name\n\n\n\"price\"\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nsortByPrice\n \n=\n \nSCQuery\n(\ncollection\n:\n \nitems\n)\n\n\nsortByPrice\n.\nascending\n(\nprice\n)\n\n\nsortByPrice\n.\nfind\n()\n \n{\n\n    \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n    \nif\n \nsuccess\n \n{\n\n        \nprint\n(\nSuccess\n)\n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \nprint\n(\nError\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\n\n.descending(name)\n\n\nMethod for sorting data in the descending order of specified field values before sampling.\n\n\nProperties\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nField name\n\n\n\"reward\"\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nsortByReward\n \n=\n \nSCQuery\n(\ncollection\n:\n \nitems\n)\n\n\nsortByReward\n.\ndescending\n(\nreward\n)\n\n\nsortByReward\n.\nfind\n()\n \n{\n\n    \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n    \nif\n \nsuccess\n \n{\n\n        \nprint\n(\nSuccess\n)\n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \nprint\n(\nError\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\n\n\n\n.fields(names)\n\n\nMethod for specifying a list of returned fields.\n\n\nProperties\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nnames\n\n\n[String]\n\n\nMandatory\n\n\nArray of requested field values\n\n\n[\"price\", \"reward\"]\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \ngetPriceAndReward\n \n=\n \nSCQuery\n(\ncollection\n:\n \nitems\n)\n\n\ngetPriceAndReward\n.\nfields\n([\nprice\n,\n \nreward\n])\n\n\ngetPriceAndReward\n.\nfind\n()\n \n{\n\n    \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n    \nif\n \nsuccess\n \n{\n\n        \nprint\n(\nSuccess\n)\n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \nprint\n(\nError\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\n\n \n\n\n.addOperator(name, oper)\n\n\nMethod for transferring a sampling condition to SCQuery\n\n\nProperties\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nName of the field to which the condition is assigned\n\n\n\"testcoll\"\n\n\n\n\n\n\noper\n\n\nSCOperator\n\n\nMandatory\n\n\nThe assigned condition\n\n\n\n\n\n\n\n\n\n\nExample\n\n\nlet\n \nlessNorEqual\n \n=\n \nSCOperator\n.\nLessThanOrEqualTo\n(\nprice\n,\n \n42\n)\n\n\nSCQuery\n.\naddOperator\n(\nname\n,\n \noper\n:\n \nlessNorEqual\n)\n\n\n\n\n\n\n \n\n\n.equalTo(name, _ value)\n\n\nMethod for retrieving all documents with the field value indicated in the condition.\n\n\nProperties\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nName of the field to which the condition is assigned\n\n\n\"tags\"\n\n\n\n\n\n\n_ value\n\n\nSCValue\n\n\nMandatory\n\n\nField value\n\n\n42\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nquery\n \n=\n \nSCQuery\n(\ncollection\n:\n \nitems\n)\n\n\nquery\n.\nequalTo\n(\nequality\n,\n \nSCString\n(\nyep\n))\n\n\nquery\n.\nfind\n()\n \n{\n\n    \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n    \nif\n \nsuccess\n \n{\n\n        \nprint\n(\nSuccess\n)\n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \nprint\n(\nError\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\n\n.notEqualTo(name, _ value)\n\n\nMethod for retrieving all documents except for objects with the field value indicated in the condition.\n\n\nProperties\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nName of the field to which the condition is assigned\n\n\n\"tags\"\n\n\n\n\n\n\n_ value\n\n\nSCValue\n\n\nMandatory\n\n\nField value\n\n\n43\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nquery\n \n=\n \nSCQuery\n(\ncollection\n:\n \nitems\n)\n\n\nquery\n.\nnotEqualTo\n(\nunequality\n,\n \nSCString\n(\nnope\n))\n\n\nquery\n.\nfind\n()\n \n{\n\n    \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n    \nif\n \nsuccess\n \n{\n\n        \nprint\n(\nSuccess\n)\n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \nprint\n(\nError\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n \n\n\n.containedIn(name, _ value)\n\n\nMethod for retrieving all objects whose field value contains the array elements specified in the query.\n\n\nProperties\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nName of the field to which the condition is assigned\n\n\n\"price\"\n\n\n\n\n\n\n_ value\n\n\nSCArray\n\n\nMandatory\n\n\nArray of values\n\n\n[-42, 41.999, 42]\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nquery\n \n=\n \nSCQuery\n(\ncollection\n:\n \nitems\n)\n\n\nquery\n.\ncontainedIn\n(\nsomeField\n,\n \nSCArray\n([\nSCString\n(\nA\n),\n \nSCString\n(\nB\n)]))\n\n\nquery\n.\nfind\n()\n \n{\n\n    \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n    \nif\n \nsuccess\n \n{\n\n        \nprint\n(\nSuccess\n)\n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \nprint\n(\nError\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n \n\n\n.containsAll(name, _ value)\n\n\nMethod for retrieving all objects whose field value contains all array elements specified in the query.\n\n\nProperties\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nName of the field to which the condition is assigned\n\n\n\"strangeNumbers\"\n\n\n\n\n\n\n_ value\n\n\nSCArray\n\n\nMandatory\n\n\nArray of values\n\n\n[4, 8, 15, 16, 23, 42]\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nquery\n \n=\n \nSCQuery\n(\ncollection\n:\n \nitems\n)\n\n\nquery\n.\ncontainsAll\n(\nsomeField\n,\n \nSCArray\n([\nSCString\n(\nA\n),\n \nSCString\n(\nB\n)]))\n\n\nquery\n.\nfind\n()\n \n{\n\n    \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n    \nif\n \nsuccess\n \n{\n\n        \nprint\n(\nSuccess\n)\n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \nprint\n(\nError\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\n\n.notContainedIn(name, _ value)\n\n\nMethod for retrieving all objects whose field value does not contain the array elements specified in the query.\n\n\nProperties\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nName of the field to which the condition is assigned\n\n\n\"tags\"\n\n\n\n\n\n\n_ value\n\n\nSCArray\n\n\nMandatory\n\n\nArray of values\n\n\n42\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nquery\n \n=\n \nSCQuery\n(\ncollection\n:\n \nitems\n)\n\n\nquery\n.\nnotContainedIn\n(\nsomeField\n,\n \nSCArray\n([\nSCString\n(\nA\n),\n \nSCString\n(\nB\n)]))\n\n\nquery\n.\nfind\n()\n \n{\n\n    \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n    \nif\n \nsuccess\n \n{\n\n        \nprint\n(\nSuccess\n)\n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \nprint\n(\nError\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\n\n.greaterThan(name, _ value)\n\n\nMethod for retrieving all objects whose field value is greater than the number specified in the query.\n\n\nProperties\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nName of the field to which the condition is assigned\n\n\n\"reward\"\n\n\n\n\n\n\n_ value\n\n\nSCValue\n\n\nMandatory\n\n\nCondition value\n\n\n42\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nquery\n \n=\n \nSCQuery\n(\ncollection\n:\n \nitems\n)\n\n\nquery\n.\ngreaterThan\n(\nreward\n,\n \nSCInt\n(\n100\n))\n\n\nquery\n.\nfind\n()\n \n{\n\n    \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n    \nif\n \nsuccess\n \n{\n\n        \nprint\n(\nSuccess\n)\n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \nprint\n(\nError\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\n\n.greaterThanOrEqualTo(name, _ value)\n\n\nMethod for retrieving all objects whose field value is no less than the number specified in the query.\n\n\nProperties\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nName of the field to which the condition is assigned\n\n\n\"reward\"\n\n\n\n\n\n\n_ value\n\n\nSCValue\n\n\nMandatory\n\n\nCondition value\n\n\n42\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nquery\n \n=\n \nSCQuery\n(\ncollection\n:\n \nitems\n)\n\n\nquery\n.\ngreaterThanOrEqualTo\n(\ncreatedAt\n,\n \nSCDate\n(\n2016-06-04T17:24:23.091+03:00\n))\n\n\nquery\n.\nfind\n()\n \n{\n\n    \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n    \nif\n \nsuccess\n \n{\n\n        \nprint\n(\nSuccess\n)\n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \nprint\n(\nError\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\n\n.lessThan(name, _ value)\n\n\nMethod for retrieving all objects whose field value is less than the number specified in the query.\n\n\nProperties\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nName of the field whose value should be updated\n\n\n\"price\"\n\n\n\n\n\n\n_ value\n\n\nSCValue\n\n\nMandatory\n\n\nCondition value\n\n\n42\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nquery\n \n=\n \nSCQuery\n(\ncollection\n:\n \nitems\n)\n\n\nquery\n.\nlessThan\n(\nprice\n,\n \nSCInt\n(\n42\n))\n\n\nquery\n.\nfind\n()\n \n{\n\n    \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n    \nif\n \nsuccess\n \n{\n\n        \nprint\n(\nSuccess\n)\n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \nprint\n(\nError\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\n\n.lessThanOrEqualTo(name, _ value)\n\n\nMethod for retrieving all objects whose field value is no greater than the number specified in the query.\n\n\nProperties\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nName of the field whose value should be updated\n\n\n\"price\"\n\n\n\n\n\n\n_ value\n\n\nSCValue\n\n\nMandatory\n\n\nCondition value\n\n\n42\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nquery\n \n=\n \nSCQuery\n(\ncollection\n:\n \nitems\n)\n\n\nquery\n.\nlessThanOrEqualTo\n(\nprice\n,\n \nSCInt\n(\n42\n))\n\n\nquery\n.\nfind\n()\n \n{\n\n    \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n    \nif\n \nsuccess\n \n{\n\n        \nprint\n(\nSuccess\n)\n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \nprint\n(\nError\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\n\n.exists(name)\n\n\nMethod for retrieving all objects with an existing value of a defined field\n\n\nProperties\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nName of the field for which a condition is defined\n\n\n\"price\"\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nquery\n \n=\n \nSCQuery\n(\ncollection\n:\n \nitems\n)\n\n\nquery\n.\nexists\n(\nreward\n)\n\n\nquery\n.\nfind\n()\n \n{\n\n    \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n    \nif\n \nsuccess\n \n{\n\n        \nprint\n(\nSuccess\n)\n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \nprint\n(\nError\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\n\n.doesNotExist(name)\n\n\nMethod for retrieving all objects with a missing value in a defined field.\n\n\nProperties\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nName of the field for which a condition is defined\n\n\n\"price\"\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nquery\n \n=\n \nSCQuery\n(\ncollection\n:\n \nitems\n)\n\n\nquery\n.\ndoesNotExist\n(\nprice\n)\n\n\nquery\n.\nfind\n()\n \n{\n\n    \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n    \nif\n \nsuccess\n \n{\n\n        \nprint\n(\nSuccess\n)\n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \nprint\n(\nError\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\n\n.contains(name, _ pattern)\n\n\nMethod for retrieving all objects with a value of a defined field that matches a defined regular expression.\n\n\nProperties\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nName of the field for which a condition is defined\n\n\n\"stringsWithNumbers\"\n\n\n\n\n\n\n_ pattern\n\n\nString\n\n\nMandatory\n\n\nRegular expression\n\n\n[0-9]\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nquery\n \n=\n \nSCQuery\n(\ncollection\n:\n \nitems\n)\n\n\nquery\n.\ncontains\n(\ndescription\n,\n \n[a-zA-Z0-9]\n)\n\n\nquery\n.\nfind\n()\n \n{\n\n    \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n    \nif\n \nsuccess\n \n{\n\n        \nprint\n(\nSuccess\n)\n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \nprint\n(\nError\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\n\n.startsWith(name, _ pattern)\n\n\nMethod for retrieving all objects with a value of a defined field starting from a specified string.\n\n\nProperties\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nName of the field for which a condition is defined\n\n\n\"labels\"\n\n\n\n\n\n\n_ pattern\n\n\nString\n\n\nMandatory\n\n\nCondition value\n\n\n\"neverendi\"\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nquery\n \n=\n \nSCQuery\n(\ncollection\n:\n \nitems\n)\n\n\nquery\n.\nstartsWith\n(\nfieldString\n,\n \n[A-Z]\n)\n\n\nquery\n.\nfind\n()\n \n{\n\n    \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n    \nif\n \nsuccess\n \n{\n\n        \nprint\n(\nSuccess\n)\n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \nprint\n(\nError\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\n\n.endsWith(name, _ pattern)\n\n\nMethod for retrieving all objects with a value of a defined field ending with a specified string.\n\n\nProperties\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nName of the field whose value should be updated\n\n\n\"labels\"\n\n\n\n\n\n\n_ pattern\n\n\nString\n\n\nMandatory\n\n\nCondition value\n\n\n\"ngdocuments\"\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nquery\n \n=\n \nSCQuery\n(\ncollection\n:\n \nitems\n)\n\n\nquery\n.\nendsWith\n(\nfieldString\n,\n \ning\n)\n\n\nquery\n.\nfind\n()\n \n{\n\n    \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n    \nif\n \nsuccess\n \n{\n\n        \nprint\n(\nSuccess\n)\n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \nprint\n(\nError\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\n\n.and(operators)\n\n\nMethod for logical multiplication of conditions of several samplings\n\n\nProperties\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\noperators\n\n\n[SCOperator]\n\n\nMandatory\n\n\nSampling condition which is included in the conjunction\n\n\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nquery\n \n=\n \nSCQuery\n(\ncollection\n:\n \nitems\n)\n\n\nquery\n.\nnotEqualTo\n(\nunequality\n,\n \nSCString\n(\nnope\n))\n\n\nquery\n.\nfind\n()\n \n{\n\n    \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n    \nif\n \nsuccess\n \n{\n\n        \nprint\n(\nSuccess\n)\n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \nprint\n(\nError\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\n\n.or(operators)\n\n\nMethod for Boolean addition of conditions of several samplings\n\n\nProperties\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\noperators\n\n\n[SCOperator]\n\n\nMandatory\n\n\nSampling condition which is included in the disjunction\n\n\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nquery\n \n=\n \nSCQuery\n(\ncollection\n:\n \nitems\n)\n\n\nquery\n.\nnotEqualTo\n(\nunequality\n,\n \nSCString\n(\nnope\n))\n\n\nquery\n.\nfind\n()\n \n{\n\n    \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n    \nif\n \nsuccess\n \n{\n\n        \nprint\n(\nSuccess\n)\n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \nprint\n(\nError\n)\n\n        \n}\n\n    \n}\n\n\n}", 
            "title": "SCQuery"
        }, 
        {
            "location": "/SWIFT/SCQuery/#initcollection", 
            "text": "Initialization of collection data query.  Properties     Parameter  Type  Properties  Description  Value example      collection  String  Mandatory  Name of the collection where the object is added  \"items\"     Example  var   query   =   SCQuery ( collection :   users )", 
            "title": "init(collection)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#findcallback", 
            "text": "Method for searching objects based on the created sampling condition.  Properties     Parameter  Type  Properties  Description  Value example      callback  (Bool, SCError?, [String: AnyObject]?) -  Void   Callback for the request being executed.      Example", 
            "title": ".find(callback)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#var-query-scquerycollection-users-queryfind-success-error-result-in-if-success-printsuccess-else-if-let-error-error-printerror", 
            "text": "", 
            "title": "var query = SCQuery(collection: &quot;users&quot;)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#countcallback", 
            "text": "Method for counting objects that meet the query conditions.  Properties     Parameter  Type  Properties  Description  Value example      callback  (Bool, SCError?, Int?) -  Void   Callback for the request being executed.      Example", 
            "title": ".count(callback)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#var-query-scquerycollection-users-querycount-success-error-result-in-if-success-printsuccess-else-if-let-error-error-printerror", 
            "text": "", 
            "title": "var query = SCQuery(collection: &quot;users&quot;)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#updateupdate-callback", 
            "text": "Method for updating the objects matching the sampling conditions.  Properties     Parameter  Type  Properties  Description  Value example      update  SCUpdate  Mandatory  SCUpdate object to which data for updating is transferred     callback()  (Bool, SCError?, [String: AnyObject]?) -  Void   Callback for the request being executed.      Example", 
            "title": ".update(update, callback)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#var-userarrivaltime-scupdate-let-currentdate-scupdateoperatorcurrentdatefieldname-typespec-timestamp-logarrivaltimeaddoperatorcurrentdate-var-arrivedusers-scquerycollection-users-arrivedusersequaltoflightrace-scstringaf4926-arrivedusersupdateuserarrivaltime-success-error-result-in-if-success-printsuccess-else-if-let-error-error-printerror", 
            "text": "", 
            "title": "var userArrivalTime = SCUpdate()"
        }, 
        {
            "location": "/SWIFT/SCQuery/#removecallback", 
            "text": "Method for removing the objects matching the sampling conditions.  Properties     Parameter  Type  Properties  Description  Value example      callback()  (Bool, SCError?, [String: AnyObject]?) -  Void   Callback for the request being executed.      Example", 
            "title": ".remove(callback)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#var-oldstuff-scquerycollection-stuff-oldstufflessthancreatedat-scdate2016-06-54t1724230910300-oldstuffremove-success-error-result-in-if-success-printsuccess-else-if-let-error-error-printerror", 
            "text": "", 
            "title": "var oldStuff = SCQuery(collection: &quot;Stuff&quot;)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#limitlimit", 
            "text": "Method for setting the sampling limit.  Properties     Parameter  Type  Properties  Description  Value example      limit  Int  Mandatory  Sampling limit  100     Example", 
            "title": ".limit(limit)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#var-query-scquerycollection-items-querylimit25-queryfind-success-error-result-in-if-success-printsuccess-else-if-let-error-error-printerror", 
            "text": "", 
            "title": "var query = SCQuery(collection: &quot;items&quot;)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#skipskip", 
            "text": "Method for defining the number of documents to be skipped before document sampling  Properties     Parameter  Type  Properties  Description  Value example      limit  Int  Mandatory  Number of skipped documents  1000     Example", 
            "title": ".skip(skip)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#var-query-scquerycollection-items-queryskip1000-queryfind-success-error-result-in-if-success-printsuccess-else-if-let-error-error-printerror", 
            "text": "", 
            "title": "var query = SCQuery(collection: &quot;items&quot;)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#pagepage", 
            "text": "Method for \"per-page\" output of sampling results in accordance with the specified sampling limit.  Properties     Parameter  Type  Properties  Description  Value example      page  Int  Mandatory  Page number  4     Example", 
            "title": ".page(page)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#var-query-scquerycollection-items-querylimit25-querypage4-queryfind-success-error-result-in-if-success-printsuccess-else-if-let-error-error-printerror", 
            "text": "", 
            "title": "var query = SCQuery(collection: &quot;items&quot;)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#rawjson", 
            "text": "Method for defining sampling conditions in the form of a JSON structure to create a DB query in MongoDB language.  Properties     Parameter  Type  Properties  Description  Value example      json  String  Mandatory  Sampling conditions  {location: {$in: ['New California Republic', 'Vault City']}}     Example", 
            "title": ".raw(json)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#var-query-scquerycollection-items-queryraw-fieldstring-queryfind-success-error-result-in-if-success-printsuccess-else-if-let-error-error-printerror", 
            "text": "", 
            "title": "var query = SCQuery(collection: &quot;items&quot;)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#reset", 
            "text": "Method for resetting the sampling conditions  Example", 
            "title": ".reset()"
        }, 
        {
            "location": "/SWIFT/SCQuery/#var-query-scquerycollection-items-queryequaltofieldname-scstringjohn-doe-queryraw-fieldstring-queryascendingfield1-querydescendingfield2-queryfieldsfield1-field2-let-and1-scoperatorequaltofieldstring-scstring-let-and2-scoperatorequaltofieldnumber-scint33-queryandand1-and2-queryreset", 
            "text": "", 
            "title": "var query = SCQuery(collection: &quot;items&quot;)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#ascendingname", 
            "text": "Method for sorting data in ascending order of specified field values before sampling.  Properties     Parameter  Type  Properties  Description  Value example      name  String  Mandatory  Field name  \"price\"     Example", 
            "title": ".ascending(name)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#var-sortbyprice-scquerycollection-items-sortbypriceascendingprice-sortbypricefind-success-error-result-in-if-success-printsuccess-else-if-let-error-error-printerror", 
            "text": "", 
            "title": "var sortByPrice = SCQuery(collection: &quot;items&quot;)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#descendingname", 
            "text": "Method for sorting data in the descending order of specified field values before sampling.  Properties     Parameter  Type  Properties  Description  Value example      name  String  Mandatory  Field name  \"reward\"     Example  var   sortByReward   =   SCQuery ( collection :   items )  sortByReward . descending ( reward )  sortByReward . find ()   { \n     success ,   error ,   result   in \n     if   success   { \n         print ( Success ) \n     }   else   { \n         if   let   error   =   error   { \n             print ( Error ) \n         } \n     }  }", 
            "title": ".descending(name)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#fieldsnames", 
            "text": "Method for specifying a list of returned fields.  Properties     Parameter  Type  Properties  Description  Value example      names  [String]  Mandatory  Array of requested field values  [\"price\", \"reward\"]     Example  var   getPriceAndReward   =   SCQuery ( collection :   items )  getPriceAndReward . fields ([ price ,   reward ])  getPriceAndReward . find ()   { \n     success ,   error ,   result   in \n     if   success   { \n         print ( Success ) \n     }   else   { \n         if   let   error   =   error   { \n             print ( Error ) \n         } \n     }  }", 
            "title": ".fields(names)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#addoperatorname-oper", 
            "text": "Method for transferring a sampling condition to SCQuery  Properties     Parameter  Type  Properties  Description  Value example      name  String  Mandatory  Name of the field to which the condition is assigned  \"testcoll\"    oper  SCOperator  Mandatory  The assigned condition      Example", 
            "title": ".addOperator(name, oper)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#let-lessnorequal-scoperatorlessthanorequaltoprice-42-scqueryaddoperatorname-oper-lessnorequal", 
            "text": "", 
            "title": "let lessNorEqual = SCOperator.LessThanOrEqualTo(&quot;price&quot;, 42)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#equaltoname-_-value", 
            "text": "Method for retrieving all documents with the field value indicated in the condition.  Properties     Parameter  Type  Properties  Description  Value example      name  String  Mandatory  Name of the field to which the condition is assigned  \"tags\"    _ value  SCValue  Mandatory  Field value  42     Example", 
            "title": ".equalTo(name, _ value)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#var-query-scquerycollection-items-queryequaltoequality-scstringyep-queryfind-success-error-result-in-if-success-printsuccess-else-if-let-error-error-printerror", 
            "text": "", 
            "title": "var query = SCQuery(collection: &quot;items&quot;)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#notequaltoname-_-value", 
            "text": "Method for retrieving all documents except for objects with the field value indicated in the condition.  Properties     Parameter  Type  Properties  Description  Value example      name  String  Mandatory  Name of the field to which the condition is assigned  \"tags\"    _ value  SCValue  Mandatory  Field value  43     Example", 
            "title": ".notEqualTo(name, _ value)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#var-query-scquerycollection-items-querynotequaltounequality-scstringnope-queryfind-success-error-result-in-if-success-printsuccess-else-if-let-error-error-printerror", 
            "text": "", 
            "title": "var query = SCQuery(collection: &quot;items&quot;)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#containedinname-_-value", 
            "text": "Method for retrieving all objects whose field value contains the array elements specified in the query.  Properties     Parameter  Type  Properties  Description  Value example      name  String  Mandatory  Name of the field to which the condition is assigned  \"price\"    _ value  SCArray  Mandatory  Array of values  [-42, 41.999, 42]     Example", 
            "title": ".containedIn(name, _ value)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#var-query-scquerycollection-items-querycontainedinsomefield-scarrayscstringa-scstringb-queryfind-success-error-result-in-if-success-printsuccess-else-if-let-error-error-printerror", 
            "text": "", 
            "title": "var query = SCQuery(collection: &quot;items&quot;)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#containsallname-_-value", 
            "text": "Method for retrieving all objects whose field value contains all array elements specified in the query.  Properties     Parameter  Type  Properties  Description  Value example      name  String  Mandatory  Name of the field to which the condition is assigned  \"strangeNumbers\"    _ value  SCArray  Mandatory  Array of values  [4, 8, 15, 16, 23, 42]     Example", 
            "title": ".containsAll(name, _ value)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#var-query-scquerycollection-items-querycontainsallsomefield-scarrayscstringa-scstringb-queryfind-success-error-result-in-if-success-printsuccess-else-if-let-error-error-printerror", 
            "text": "", 
            "title": "var query = SCQuery(collection: &quot;items&quot;)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#notcontainedinname-_-value", 
            "text": "Method for retrieving all objects whose field value does not contain the array elements specified in the query.  Properties     Parameter  Type  Properties  Description  Value example      name  String  Mandatory  Name of the field to which the condition is assigned  \"tags\"    _ value  SCArray  Mandatory  Array of values  42     Example", 
            "title": ".notContainedIn(name, _ value)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#var-query-scquerycollection-items-querynotcontainedinsomefield-scarrayscstringa-scstringb-queryfind-success-error-result-in-if-success-printsuccess-else-if-let-error-error-printerror", 
            "text": "", 
            "title": "var query = SCQuery(collection: &quot;items&quot;)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#greaterthanname-_-value", 
            "text": "Method for retrieving all objects whose field value is greater than the number specified in the query.  Properties     Parameter  Type  Properties  Description  Value example      name  String  Mandatory  Name of the field to which the condition is assigned  \"reward\"    _ value  SCValue  Mandatory  Condition value  42     Example", 
            "title": ".greaterThan(name, _ value)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#var-query-scquerycollection-items-querygreaterthanreward-scint100-queryfind-success-error-result-in-if-success-printsuccess-else-if-let-error-error-printerror", 
            "text": "", 
            "title": "var query = SCQuery(collection: &quot;items&quot;)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#greaterthanorequaltoname-_-value", 
            "text": "Method for retrieving all objects whose field value is no less than the number specified in the query.  Properties     Parameter  Type  Properties  Description  Value example      name  String  Mandatory  Name of the field to which the condition is assigned  \"reward\"    _ value  SCValue  Mandatory  Condition value  42     Example", 
            "title": ".greaterThanOrEqualTo(name, _ value)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#var-query-scquerycollection-items-querygreaterthanorequaltocreatedat-scdate2016-06-04t1724230910300-queryfind-success-error-result-in-if-success-printsuccess-else-if-let-error-error-printerror", 
            "text": "", 
            "title": "var query = SCQuery(collection: &quot;items&quot;)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#lessthanname-_-value", 
            "text": "Method for retrieving all objects whose field value is less than the number specified in the query.  Properties     Parameter  Type  Properties  Description  Value example      name  String  Mandatory  Name of the field whose value should be updated  \"price\"    _ value  SCValue  Mandatory  Condition value  42     Example", 
            "title": ".lessThan(name, _ value)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#var-query-scquerycollection-items-querylessthanprice-scint42-queryfind-success-error-result-in-if-success-printsuccess-else-if-let-error-error-printerror", 
            "text": "", 
            "title": "var query = SCQuery(collection: &quot;items&quot;)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#lessthanorequaltoname-_-value", 
            "text": "Method for retrieving all objects whose field value is no greater than the number specified in the query.  Properties     Parameter  Type  Properties  Description  Value example      name  String  Mandatory  Name of the field whose value should be updated  \"price\"    _ value  SCValue  Mandatory  Condition value  42     Example", 
            "title": ".lessThanOrEqualTo(name, _ value)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#var-query-scquerycollection-items-querylessthanorequaltoprice-scint42-queryfind-success-error-result-in-if-success-printsuccess-else-if-let-error-error-printerror", 
            "text": "", 
            "title": "var query = SCQuery(collection: &quot;items&quot;)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#existsname", 
            "text": "Method for retrieving all objects with an existing value of a defined field  Properties     Parameter  Type  Properties  Description  Value example      name  String  Mandatory  Name of the field for which a condition is defined  \"price\"     Example", 
            "title": ".exists(name)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#var-query-scquerycollection-items-queryexistsreward-queryfind-success-error-result-in-if-success-printsuccess-else-if-let-error-error-printerror", 
            "text": "", 
            "title": "var query = SCQuery(collection: &quot;items&quot;)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#doesnotexistname", 
            "text": "Method for retrieving all objects with a missing value in a defined field.  Properties     Parameter  Type  Properties  Description  Value example      name  String  Mandatory  Name of the field for which a condition is defined  \"price\"     Example", 
            "title": ".doesNotExist(name)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#var-query-scquerycollection-items-querydoesnotexistprice-queryfind-success-error-result-in-if-success-printsuccess-else-if-let-error-error-printerror", 
            "text": "", 
            "title": "var query = SCQuery(collection: &quot;items&quot;)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#containsname-_-pattern", 
            "text": "Method for retrieving all objects with a value of a defined field that matches a defined regular expression.  Properties     Parameter  Type  Properties  Description  Value example      name  String  Mandatory  Name of the field for which a condition is defined  \"stringsWithNumbers\"    _ pattern  String  Mandatory  Regular expression  [0-9]     Example", 
            "title": ".contains(name, _ pattern)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#var-query-scquerycollection-items-querycontainsdescription-a-za-z0-9-queryfind-success-error-result-in-if-success-printsuccess-else-if-let-error-error-printerror", 
            "text": "", 
            "title": "var query = SCQuery(collection: &quot;items&quot;)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#startswithname-_-pattern", 
            "text": "Method for retrieving all objects with a value of a defined field starting from a specified string.  Properties     Parameter  Type  Properties  Description  Value example      name  String  Mandatory  Name of the field for which a condition is defined  \"labels\"    _ pattern  String  Mandatory  Condition value  \"neverendi\"     Example", 
            "title": ".startsWith(name, _ pattern)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#var-query-scquerycollection-items-querystartswithfieldstring-a-z-queryfind-success-error-result-in-if-success-printsuccess-else-if-let-error-error-printerror", 
            "text": "", 
            "title": "var query = SCQuery(collection: &quot;items&quot;)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#endswithname-_-pattern", 
            "text": "Method for retrieving all objects with a value of a defined field ending with a specified string.  Properties     Parameter  Type  Properties  Description  Value example      name  String  Mandatory  Name of the field whose value should be updated  \"labels\"    _ pattern  String  Mandatory  Condition value  \"ngdocuments\"     Example", 
            "title": ".endsWith(name, _ pattern)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#var-query-scquerycollection-items-queryendswithfieldstring-ing-queryfind-success-error-result-in-if-success-printsuccess-else-if-let-error-error-printerror", 
            "text": "", 
            "title": "var query = SCQuery(collection: &quot;items&quot;)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#andoperators", 
            "text": "Method for logical multiplication of conditions of several samplings  Properties     Parameter  Type  Properties  Description  Value example      operators  [SCOperator]  Mandatory  Sampling condition which is included in the conjunction      Example", 
            "title": ".and(operators)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#var-query-scquerycollection-items-querynotequaltounequality-scstringnope-queryfind-success-error-result-in-if-success-printsuccess-else-if-let-error-error-printerror_1", 
            "text": "", 
            "title": "var query = SCQuery(collection: &quot;items&quot;)"
        }, 
        {
            "location": "/SWIFT/SCQuery/#oroperators", 
            "text": "Method for Boolean addition of conditions of several samplings  Properties     Parameter  Type  Properties  Description  Value example      operators  [SCOperator]  Mandatory  Sampling condition which is included in the disjunction      Example  var   query   =   SCQuery ( collection :   items )  query . notEqualTo ( unequality ,   SCString ( nope ))  query . find ()   { \n     success ,   error ,   result   in \n     if   success   { \n         print ( Success ) \n     }   else   { \n         if   let   error   =   error   { \n             print ( Error ) \n         } \n     }  }", 
            "title": ".or(operators)"
        }, 
        {
            "location": "/SWIFT/SCUpdate/", 
            "text": "SCUpdate\n\n\n.addOperator(oper: SCUpdateOperator)\n\n\n.set(dic: [String: SCValue])\n \n\n\n.push(name: String, _ value: SCValue)\n\n\n.pushEach(name: String, _ value: SCValue)\n  \n\n\n.pull(name: String, _ value: SCPullable)\n \n\n\n.pullAll(name: String, _ value: SCValue)\n \n\n\n.addToSet(name: String, _ value: SCValue)\n\n\n.addToSetEach(name: String, _ value: SCValue)\n \n\n\n.pop(name: String, _ value: Int)\n \n\n\n.inc(name: String, _ value: SCValue)\n\n\n.currentDate(name: String, typeSpec: String)\n\n\n.mul(name: String, _ value: SCValue)\n\n\n.min(name: String, _ value: SCValue)\n\n\n.max(name: String, _ value: SCValue)\n\n\n\n\n\n\n\n\n\n\n \n\n\n.addOperator(name, oper)\n\n\nMethod for transferring the SCUpdate operator to modify data\n\n\nParameters\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\noper\n\n\nSCUpdateOperator\n\n\nMandatory\n\n\nSampling condition\n\n\n\n\n\n\n\n\n\n\nvar\n \nupdate\n \n=\n \nSCUpdate\n()\n\n\nlet\n \ncurrentDate\n \n=\n \nSCUpdateOperator\n.\ncurrentDate\n(\nfieldName\n,\n \ntypeSpec\n:\n \ntimestamp\n)\n\n\nupdate\n.\naddOperator\n(\ncurrentDate\n)\n\n\n\n\n\n\n\n\n\n\n.set(dic: [String: SCValue])\n\n\nMethod for transferring data to object\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\ndic\n\n\n[String: SCValue]\n\n\n\n\nObject with data to be transferred to object\n\n\n[\"fieldString\": SCString(\"NewValue\")]\n\n\n\n\n\n\n\n\nExample\n  \n\n\nvar\n \nupdate\n \n=\n \nSCUpdate\n()\n\n\nupdate\n.\nset\n([\nfieldName\n:\n \nSCString\n(\nA\n)])\n\n\n\n\n\n\n\n\n\n\n.push(name: String, _ value: SCValue))\n\n\nMethod for adding an element to an array\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nName of the field whose value should be updated\n\n\n\"tags\"\n\n\n\n\n\n\n_ value\n\n\nSCValue\n\n\nMandatory\n\n\nValue of the new array element\n\n\n42\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nupdate\n \n=\n \nSCUpdate\n()\n\n\nupdate\n.\npush\n(\nfieldName\n,\n \nSCString\n(\nA\n))\n\n\nupdate\n.\nsave\n()\n\n\n\n\n\n\n\n\n\n\n.pushEach(name: String, _ value: SCValue))\n\n\nMethod for adding several elements to an array.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nName of the field whose value should be updated\n\n\n\"tags\"\n\n\n\n\n\n\n_ value\n\n\nSCValue\n\n\nMandatory\n\n\nValue of the new array element\n\n\n42, [43,43], 44\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nupdate\n \n=\n \nSCUpdate\n()\n\n\nupdate\n.\npushEach\n(\nfieldName\n,\n \nSCArray\n([\nSCString\n(\nA\n)]))\n\n\n\n\n\n\n\n\n\n\n.pull(name: String, _ value: SCPullable)\n\n\nMethod for removing all array elements whose values are the same as the specified one.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nName of the field whose value should be updated\n\n\n\"tags\"\n\n\n\n\n\n\n_ value\n\n\nSCPullable\n\n\nMandatory\n\n\nValue to be removed\n\n\n42\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nupdate\n \n=\n \nSCUpdate\n()\n\n\nupdate\n.\npull\n(\nfieldName\n,\n \nSCString\n(\nA\n))\n\n\n\n\n\n\n\n\n\n\n.pullAll(name: String, _ value: SCValue)\n\n\nMethod for removing all array elements whose values are the same as one of the specified values.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nName of the field whose value should be updated\n\n\n\"tags\"\n\n\n\n\n\n\n_ value\n\n\nSCValue\n\n\nMandatory\n\n\nArray of values to be removed\n\n\n[42, 44]\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nupdate\n \n=\n \nSCUpdate\n()\n\n\nupdate\n.\npullAll\n(\nfieldName\n,\n \nSCArray\n([\nSCString\n(\nA\n)]))\n\n\n\n\n\n\n\n\n\n\n.addToSet(name: String, _ value: SCValue)\n\n\nMethod for adding an element to an array only if there are no elements with the same name in the array.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nName of the field whose value should be updated\n\n\n\"tags\"\n\n\n\n\n\n\n_ value\n\n\nSCValue\n\n\nMandatory\n\n\nValue of the new array element\n\n\n42\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nupdate\n \n=\n \nSCUpdate\n()\n\n\nupdate\n.\naddToSet\n(\nfieldName\n,\n \nSCString\n(\nA\n))\n\n\n\n\n\n\n\n\n\n\n.addToSetEach(name: String, _ value: SCValue)\n\n\nMethod for adding elements to an array only if there are no elements with the same name in the array.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nName of the field whose value should be updated\n\n\n\"tags\"\n\n\n\n\n\n\n_ value\n\n\nSCValue\n\n\nMandatory\n\n\nArray of new array element values\n\n\n[42, 43]\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nupdate\n \n=\n \nSCUpdate\n()\n\n\nupdate\n.\naddToSetEach\n(\nfieldName\n,\n \nSCArray\n(\nSCString\n(\nA\n))\n\n\n\n\n\n\n\n\n\n\n.pop(name: String, _ value: Int)\n\n\nMethod for removing the first or the last array element\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nName of the field whose value should be updated\n\n\n\"tags\"\n\n\n\n\n\n\n_ value\n\n\nInt\n\n\nMandatory\n\n\nPosition of the element to be removed in the array: -1 for the first element and 1 for the last\n\n\n-1\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nupdate\n \n=\n \nSCUpdate\n()\n\n\nupdate\n.\npop\n(\nfieldName\n,\n \n1\n)\n\n\n\n\n\n\n\n\n\n\n.inc(name: String, _ value: SCValue)\n\n\nThe method increments the numeric field value by a defined number\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nName of the field whose value should be updated\n\n\n\"price\"\n\n\n\n\n\n\n_ value\n\n\nSCValue\n\n\nMandatory\n\n\nIncrement step\n\n\n5\n\n\n\n\n\n\n\n\nExample\n \n\n\nvar\n \nupdate\n \n=\n \nSCUpdate\n()\n\n\nupdate\n.\ninc\n(\nfieldName\n,\n \nSCInt\n(\n1\n))\n\n\n\n\n\n\n\n\n\n\n.currentDate(name: String, typeSpec: String)\n\n\nSets the current time as the field's value\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nName of the field whose value should be updated\n\n\n\"price\"\n\n\n\n\n\n\ntypeSpec\n\n\nSCValue\n\n\nMandatory\n\n\nDate type. Accepts the following values: true, \"date\" or \"timestamp\"\n\n\n\"timestamp\"\n\n\n\n\n\n\n\n\nExample\n\n\nvar\n \nupdate\n \n=\n \nSCUpdate\n()\n\n\nupdate\n.\ncurrentDate\n(\nfieldName\n,\n \ntypeSpec\n:\n \ndate\n)\n\n\n\n\n\n\n\n\n\n\n.mul(name: String, _ value: SCValue)\n\n\nThe method multiplies the numeric field value by a defined number\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nName of the field whose value should be updated\n\n\n\"price\"\n\n\n\n\n\n\n_ value\n\n\nSCValue\n\n\nMandatory\n\n\nMultiplier\n\n\n2.5\n\n\n\n\n\n\n\n\nExample\n  \n\n\nvar\n \nupdate\n \n=\n \nSCUpdate\n()\n\n\nupdate\n.\nmul\n(\nfieldName\n,\n \nSCInt\n(\n5\n))\n\n\n\n\n\n\n\n\n\n\n.min(name: String, _ value: SCValue)\n\n\nThe method updates the numeric field value only if the new value is less than the current field value\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nName of the field whose value should be updated\n\n\n\"price\"\n\n\n\n\n\n\n_ value\n\n\nSCValue\n\n\nMandatory\n\n\nNew value\n\n\n42\n\n\n\n\n\n\n\n\nExample\n  \n\n\nvar\n \nupdate\n \n=\n \nSCUpdate\n()\n\n\nupdate\n.\nmin\n(\nfieldName\n,\n \nSCInt\n(\n5\n))\n\n\n\n\n\n\n\n\n\n\n.max(name: String, _ value: SCValue)\n\n\nThe method updates the numeric field value only if the new value is greater than the current field value\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nMandatory\n\n\nName of the field whose value should be updated\n\n\n\"price\"\n\n\n\n\n\n\n_ value\n\n\nSCValue\n\n\nMandatory\n\n\nNew value\n\n\n42\n\n\n\n\n\n\n\n\nExample\n  \n\n\nvar\n \nupdate\n \n=\n \nSCUpdate\n()\n\n\nupdate\n.\nmax\n(\nfieldName\n,\n \nSCInt\n(\n5\n))", 
            "title": "SCUpdate"
        }, 
        {
            "location": "/SWIFT/SCUpdate/#addoperatorname-oper", 
            "text": "Method for transferring the SCUpdate operator to modify data  Parameters     Parameter  Type  Properties  Description  Value example      oper  SCUpdateOperator  Mandatory  Sampling condition      var   update   =   SCUpdate ()  let   currentDate   =   SCUpdateOperator . currentDate ( fieldName ,   typeSpec :   timestamp )  update . addOperator ( currentDate )", 
            "title": ".addOperator(name, oper)"
        }, 
        {
            "location": "/SWIFT/SCUpdate/#setdic-string-scvalue", 
            "text": "Method for transferring data to object     Parameter  Type  Properties  Description  Value example      dic  [String: SCValue]   Object with data to be transferred to object  [\"fieldString\": SCString(\"NewValue\")]     Example     var   update   =   SCUpdate ()  update . set ([ fieldName :   SCString ( A )])", 
            "title": ".set(dic: [String: SCValue])"
        }, 
        {
            "location": "/SWIFT/SCUpdate/#pushname-string-_-value-scvalue", 
            "text": "Method for adding an element to an array     Parameter  Type  Properties  Description  Value example      name  String  Mandatory  Name of the field whose value should be updated  \"tags\"    _ value  SCValue  Mandatory  Value of the new array element  42     Example  var   update   =   SCUpdate ()  update . push ( fieldName ,   SCString ( A ))  update . save ()", 
            "title": ".push(name: String, _ value: SCValue))"
        }, 
        {
            "location": "/SWIFT/SCUpdate/#pusheachname-string-_-value-scvalue", 
            "text": "Method for adding several elements to an array.     Parameter  Type  Properties  Description  Value example      name  String  Mandatory  Name of the field whose value should be updated  \"tags\"    _ value  SCValue  Mandatory  Value of the new array element  42, [43,43], 44     Example  var   update   =   SCUpdate ()  update . pushEach ( fieldName ,   SCArray ([ SCString ( A )]))", 
            "title": ".pushEach(name: String, _ value: SCValue))"
        }, 
        {
            "location": "/SWIFT/SCUpdate/#pullname-string-_-value-scpullable", 
            "text": "Method for removing all array elements whose values are the same as the specified one.     Parameter  Type  Properties  Description  Value example      name  String  Mandatory  Name of the field whose value should be updated  \"tags\"    _ value  SCPullable  Mandatory  Value to be removed  42     Example  var   update   =   SCUpdate ()  update . pull ( fieldName ,   SCString ( A ))", 
            "title": ".pull(name: String, _ value: SCPullable)"
        }, 
        {
            "location": "/SWIFT/SCUpdate/#pullallname-string-_-value-scvalue", 
            "text": "Method for removing all array elements whose values are the same as one of the specified values.     Parameter  Type  Properties  Description  Value example      name  String  Mandatory  Name of the field whose value should be updated  \"tags\"    _ value  SCValue  Mandatory  Array of values to be removed  [42, 44]     Example  var   update   =   SCUpdate ()  update . pullAll ( fieldName ,   SCArray ([ SCString ( A )]))", 
            "title": ".pullAll(name: String, _ value: SCValue)"
        }, 
        {
            "location": "/SWIFT/SCUpdate/#addtosetname-string-_-value-scvalue", 
            "text": "Method for adding an element to an array only if there are no elements with the same name in the array.     Parameter  Type  Properties  Description  Value example      name  String  Mandatory  Name of the field whose value should be updated  \"tags\"    _ value  SCValue  Mandatory  Value of the new array element  42     Example  var   update   =   SCUpdate ()  update . addToSet ( fieldName ,   SCString ( A ))", 
            "title": ".addToSet(name: String, _ value: SCValue)"
        }, 
        {
            "location": "/SWIFT/SCUpdate/#addtoseteachname-string-_-value-scvalue", 
            "text": "Method for adding elements to an array only if there are no elements with the same name in the array.     Parameter  Type  Properties  Description  Value example      name  String  Mandatory  Name of the field whose value should be updated  \"tags\"    _ value  SCValue  Mandatory  Array of new array element values  [42, 43]     Example  var   update   =   SCUpdate ()  update . addToSetEach ( fieldName ,   SCArray ( SCString ( A ))", 
            "title": ".addToSetEach(name: String, _ value: SCValue)"
        }, 
        {
            "location": "/SWIFT/SCUpdate/#popname-string-_-value-int", 
            "text": "Method for removing the first or the last array element     Parameter  Type  Properties  Description  Value example      name  String  Mandatory  Name of the field whose value should be updated  \"tags\"    _ value  Int  Mandatory  Position of the element to be removed in the array: -1 for the first element and 1 for the last  -1     Example  var   update   =   SCUpdate ()  update . pop ( fieldName ,   1 )", 
            "title": ".pop(name: String, _ value: Int)"
        }, 
        {
            "location": "/SWIFT/SCUpdate/#incname-string-_-value-scvalue", 
            "text": "The method increments the numeric field value by a defined number     Parameter  Type  Properties  Description  Value example      name  String  Mandatory  Name of the field whose value should be updated  \"price\"    _ value  SCValue  Mandatory  Increment step  5     Example    var   update   =   SCUpdate ()  update . inc ( fieldName ,   SCInt ( 1 ))", 
            "title": ".inc(name: String, _ value: SCValue)"
        }, 
        {
            "location": "/SWIFT/SCUpdate/#currentdatename-string-typespec-string", 
            "text": "Sets the current time as the field's value     Parameter  Type  Properties  Description  Value example      name  String  Mandatory  Name of the field whose value should be updated  \"price\"    typeSpec  SCValue  Mandatory  Date type. Accepts the following values: true, \"date\" or \"timestamp\"  \"timestamp\"     Example  var   update   =   SCUpdate ()  update . currentDate ( fieldName ,   typeSpec :   date )", 
            "title": ".currentDate(name: String, typeSpec: String)"
        }, 
        {
            "location": "/SWIFT/SCUpdate/#mulname-string-_-value-scvalue", 
            "text": "The method multiplies the numeric field value by a defined number     Parameter  Type  Properties  Description  Value example      name  String  Mandatory  Name of the field whose value should be updated  \"price\"    _ value  SCValue  Mandatory  Multiplier  2.5     Example     var   update   =   SCUpdate ()  update . mul ( fieldName ,   SCInt ( 5 ))", 
            "title": ".mul(name: String, _ value: SCValue)"
        }, 
        {
            "location": "/SWIFT/SCUpdate/#minname-string-_-value-scvalue", 
            "text": "The method updates the numeric field value only if the new value is less than the current field value     Parameter  Type  Properties  Description  Value example      name  String  Mandatory  Name of the field whose value should be updated  \"price\"    _ value  SCValue  Mandatory  New value  42     Example     var   update   =   SCUpdate ()  update . min ( fieldName ,   SCInt ( 5 ))", 
            "title": ".min(name: String, _ value: SCValue)"
        }, 
        {
            "location": "/SWIFT/SCUpdate/#maxname-string-_-value-scvalue", 
            "text": "The method updates the numeric field value only if the new value is greater than the current field value     Parameter  Type  Properties  Description  Value example      name  String  Mandatory  Name of the field whose value should be updated  \"price\"    _ value  SCValue  Mandatory  New value  42     Example     var   update   =   SCUpdate ()  update . max ( fieldName ,   SCInt ( 5 ))", 
            "title": ".max(name: String, _ value: SCValue)"
        }, 
        {
            "location": "/SWIFT/SCUser/", 
            "text": "SCUser\n\n\ninit()\n\n\n.login(email, password, callback)\n\n\n.logout(callback)\n\n\n.signup(username, email, password, callback)\n\n\n.signup(callback)\n\n\n\n\n\n\n\n\n\n\n\n\ninit()\n\n\nSCUser initialization\n\n\nExample\n\n\nlet\n \nappUser\n \n=\n \nSCUser\n()\n\n\n\n\n\n\n\n\n\n\n.login(email, password, callback)\n\n\nMethod for application user authentication\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nemail\n\n\nString\n\n\nMandatory\n\n\nUser email\n\n\n\"user@domain.zone\"\n\n\n\n\n\n\npassword\n\n\nString\n\n\nMandatory\n\n\nUser password\n\n\n\"CorrectHorseBatteryStaple\"\n\n\n\n\n\n\ncallback\n\n\n(Bool, SCError?, [String: AnyObject]?) -\n Void\n\n\n\n\nCallback for the request being executed.\n\n\n\n\n\n\n\n\n\n\nExample\n   \n\n\n    \n@IBAction\n \nprivate\n \nfunc\n \nloginPressed\n()\n \n{\n\n\n        \nguard\n \nlet\n \nemail\n \n=\n \nemailTextField\n.\ntext\n \nwhere\n \nemail\n \n!=\n \n,\n\n            \nlet\n \npassword\n \n=\n \npasswordTextField\n.\ntext\n \nwhere\n \npassword\n \n!=\n \n \nelse\n \n{\n\n                \nlet\n \nalert\n \n=\n \nUIAlertController\n(\ntitle\n:\n \n\u0412\u0445\u043e\u0434 \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u0435\u043d\n,\n \nmessage\n:\n \n\u041d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d email \u0438\u043b\u0438 \u043f\u0430\u0440\u043e\u043b\u044c\n,\n \npreferredStyle\n:\n \n.\nAlert\n)\n\n                \nlet\n \nok\n \n=\n \nUIAlertAction\n(\ntitle\n:\n \nOK\n,\n \nstyle\n:\n \n.\nDefault\n)\n \n{\n\n                    \naction\n \nin\n\n                    \nreturn\n\n                \n}\n\n                \nalert\n.\naddAction\n(\nok\n)\n\n                \npresentViewController\n(\nalert\n,\n \nanimated\n:\n \ntrue\n,\n \ncompletion\n:\n \nnil\n)\n\n                \nreturn\n\n        \n}\n\n\n        \nlet\n \nuser\n \n=\n \nSCUser\n()\n\n        \nuser\n.\nlogin\n(\nemail\n,\n \npassword\n:\n \npassword\n)\n \n{\n\n            \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n            \nif\n \nsuccess\n \n{\n\n                \nlet\n \nalert\n \n=\n \nUIAlertController\n(\ntitle\n:\n \n\u0412\u0445\u043e\u0434 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\n,\n \nmessage\n:\n \nnil\n,\n \npreferredStyle\n:\n \n.\nAlert\n)\n\n                \nlet\n \nok\n \n=\n \nUIAlertAction\n(\ntitle\n:\n \nOK\n,\n \nstyle\n:\n \n.\nDefault\n)\n \n{\n\n                    \naction\n \nin\n\n                    \nself\n.\nperformSegueWithIdentifier\n(\nToObjects\n,\n \nsender\n:\n \nnil\n)\n\n                \n}\n\n                \nalert\n.\naddAction\n(\nok\n)\n\n                \nself\n.\npresentViewController\n(\nalert\n,\n \nanimated\n:\n \ntrue\n,\n \ncompletion\n:\n \nnil\n)\n\n            \n}\n\n        \n}\n\n\n\n\n\n\n\n\n\n\n.logout(callback)\n\n\nMethod for application user deauthentication. \n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\ncallback\n\n\n(Bool, SCError?, [String: AnyObject]?) -\n Void\n\n\n\n\nCallback for the request being executed.\n\n\n\n\n\n\n\n\n\n\nExample\n   \n\n\n    \n@IBAction\n \nprivate\n \nfunc\n \nlogoutPressed\n()\n \n{\n\n        \nSCUser\n.\nlogout\n()\n \n{\n\n            \nsuccess\n,\n \nerror\n \nin\n\n            \nif\n \nsuccess\n \n{\n\n                \nself\n.\ndismissViewControllerAnimated\n(\ntrue\n,\n \ncompletion\n:\n \nnil\n)\n\n            \n}\n\n        \n}\n\n    \n}\n\n\n\n\n\n\n\n\n.signup(username, email, password, callback)\n\n\nMethod for application user registration.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nusername\n\n\nString\n\n\nMandatory\n\n\n\u0418\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\n\n\n\"Jovan\"\n\n\n\n\n\n\nemail\n\n\nString\n\n\nMandatory\n\n\nEmail \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\n\n\n\"user@domain.zone\"\n\n\n\n\n\n\npassword\n\n\nString\n\n\nMandatory\n\n\n\u041f\u0430\u0440\u043e\u043b\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\n\n\n\"CorrectHorseBatteryStaple\"\n\n\n\n\n\n\ncallback\n\n\n(Bool, SCError?, [String: AnyObject]?) -\n Void\n\n\n\n\nCallback for the request being executed.\n\n\n\n\n\n\n\n\n\n\nExample\n   \n\n\n@IBAction\n \nprivate\n \nfunc\n \nsignupPressed\n()\n \n{\n\n    \nguard\n \nlet\n \nemail\n \n=\n \nemailTextField\n.\ntext\n \nwhere\n \nemail\n \n!=\n \n,\n\n        \nlet\n \npassword\n \n=\n \npasswordTextField\n.\ntext\n \nwhere\n \npassword\n \n!=\n \n,\n\n    \nlet\n \nusername\n \n=\n \nusernameTextField\n.\ntext\n \nwhere\n \nusername\n \n!=\n \n \nelse\n \n{\n\n            \nlet\n \nalert\n \n=\n \nUIAlertController\n(\ntitle\n:\n \n\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u0430\n,\n \nmessage\n:\n \n\u041d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d email, \u043f\u0430\u0440\u043e\u043b\u044c \u0438\u043b\u0438 \u0438\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\n,\n \npreferredStyle\n:\n \n.\nAlert\n)\n\n            \nlet\n \nok\n \n=\n \nUIAlertAction\n(\ntitle\n:\n \nOK\n,\n \nstyle\n:\n \n.\nDefault\n)\n \n{\n\n                \naction\n \nin\n\n                \nreturn\n\n            \n}\n\n            \nalert\n.\naddAction\n(\nok\n)\n\n            \npresentViewController\n(\nalert\n,\n \nanimated\n:\n \ntrue\n,\n \ncompletion\n:\n \nnil\n)\n\n            \nreturn\n\n    \n}\n\n\n    \nlet\n \nuser\n \n=\n \nSCUser\n()\n\n    \nuser\n.\nsignup\n(\nusername\n,\n \nemail\n:\n \nemail\n,\n \npassword\n:\n \npassword\n)\n \n{\n\n        \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n        \nif\n \nsuccess\n \n{\n\n            \nlet\n \nalert\n \n=\n \nUIAlertController\n(\ntitle\n:\n \n\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\n,\n \nmessage\n:\n \nnil\n,\n \npreferredStyle\n:\n \n.\nAlert\n)\n\n            \nlet\n \nok\n \n=\n \nUIAlertAction\n(\ntitle\n:\n \nOK\n,\n \nstyle\n:\n \n.\nDefault\n)\n \n{\n\n                \naction\n \nin\n\n                \nself\n.\ndismissViewControllerAnimated\n(\ntrue\n,\n \ncompletion\n:\n \nnil\n)\n\n            \n}\n\n            \nalert\n.\naddAction\n(\nok\n)\n\n            \nself\n.\npresentViewController\n(\nalert\n,\n \nanimated\n:\n \ntrue\n,\n \ncompletion\n:\n \nnil\n)\n\n        \n}\n \nelse\n \n{\n\n            \nvar\n \nmessage\n \n=\n \n\n            \nswitch\n \nerror\n!\n \n{\n\n            \ncase\n \n.\nAPI\n(\n_\n,\n \nlet\n \napiMessage\n):\n\n                \nmessage\n \n=\n \napiMessage\n\n            \ndefault\n:\n\n                \nbreak\n\n            \n}\n\n            \nlet\n \nalert\n \n=\n \nUIAlertController\n(\ntitle\n:\n \n\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438\n,\n \nmessage\n:\n \nmessage\n,\n \npreferredStyle\n:\n \n.\nAlert\n)\n\n            \nlet\n \nok\n \n=\n \nUIAlertAction\n(\ntitle\n:\n \nOK\n,\n \nstyle\n:\n \n.\nDefault\n)\n \n{\n\n                \naction\n \nin\n\n            \n}\n\n            \nalert\n.\naddAction\n(\nok\n)\n\n            \nself\n.\npresentViewController\n(\nalert\n,\n \nanimated\n:\n \ntrue\n,\n \ncompletion\n:\n \nnil\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\n\n\n\n.signup(callback)\n\n\nMethod for application user registration. Fields are defined using the Object parent class methods.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\ncallback\n\n\n(Bool, SCError?, [String: AnyObject]?) -\n Void\n\n\n\n\nCallback for the request being executed.", 
            "title": "SCUser"
        }, 
        {
            "location": "/SWIFT/SCUser/#init", 
            "text": "SCUser initialization  Example  let   appUser   =   SCUser ()", 
            "title": "init()"
        }, 
        {
            "location": "/SWIFT/SCUser/#loginemail-password-callback", 
            "text": "Method for application user authentication     Parameter  Type  Properties  Description  Value example      email  String  Mandatory  User email  \"user@domain.zone\"    password  String  Mandatory  User password  \"CorrectHorseBatteryStaple\"    callback  (Bool, SCError?, [String: AnyObject]?) -  Void   Callback for the request being executed.      Example           @IBAction   private   func   loginPressed ()   { \n\n         guard   let   email   =   emailTextField . text   where   email   !=   , \n             let   password   =   passwordTextField . text   where   password   !=     else   { \n                 let   alert   =   UIAlertController ( title :   \u0412\u0445\u043e\u0434 \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u0435\u043d ,   message :   \u041d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d email \u0438\u043b\u0438 \u043f\u0430\u0440\u043e\u043b\u044c ,   preferredStyle :   . Alert ) \n                 let   ok   =   UIAlertAction ( title :   OK ,   style :   . Default )   { \n                     action   in \n                     return \n                 } \n                 alert . addAction ( ok ) \n                 presentViewController ( alert ,   animated :   true ,   completion :   nil ) \n                 return \n         } \n\n         let   user   =   SCUser () \n         user . login ( email ,   password :   password )   { \n             success ,   error ,   result   in \n             if   success   { \n                 let   alert   =   UIAlertController ( title :   \u0412\u0445\u043e\u0434 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d ,   message :   nil ,   preferredStyle :   . Alert ) \n                 let   ok   =   UIAlertAction ( title :   OK ,   style :   . Default )   { \n                     action   in \n                     self . performSegueWithIdentifier ( ToObjects ,   sender :   nil ) \n                 } \n                 alert . addAction ( ok ) \n                 self . presentViewController ( alert ,   animated :   true ,   completion :   nil ) \n             } \n         }", 
            "title": ".login(email, password, callback)"
        }, 
        {
            "location": "/SWIFT/SCUser/#logoutcallback", 
            "text": "Method for application user deauthentication.      Parameter  Type  Properties  Description  Value example      callback  (Bool, SCError?, [String: AnyObject]?) -  Void   Callback for the request being executed.      Example", 
            "title": ".logout(callback)"
        }, 
        {
            "location": "/SWIFT/SCUser/#ibaction-private-func-logoutpressed-scuserlogout-success-error-in-if-success-selfdismissviewcontrolleranimatedtrue-completion-nil", 
            "text": "", 
            "title": "    @IBAction private func logoutPressed() {"
        }, 
        {
            "location": "/SWIFT/SCUser/#signupusername-email-password-callback", 
            "text": "Method for application user registration.     Parameter  Type  Properties  Description  Value example      username  String  Mandatory  \u0418\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f  \"Jovan\"    email  String  Mandatory  Email \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f  \"user@domain.zone\"    password  String  Mandatory  \u041f\u0430\u0440\u043e\u043b\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f  \"CorrectHorseBatteryStaple\"    callback  (Bool, SCError?, [String: AnyObject]?) -  Void   Callback for the request being executed.      Example      @IBAction   private   func   signupPressed ()   { \n     guard   let   email   =   emailTextField . text   where   email   !=   , \n         let   password   =   passwordTextField . text   where   password   !=   , \n     let   username   =   usernameTextField . text   where   username   !=     else   { \n             let   alert   =   UIAlertController ( title :   \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u0430 ,   message :   \u041d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d email, \u043f\u0430\u0440\u043e\u043b\u044c \u0438\u043b\u0438 \u0438\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f ,   preferredStyle :   . Alert ) \n             let   ok   =   UIAlertAction ( title :   OK ,   style :   . Default )   { \n                 action   in \n                 return \n             } \n             alert . addAction ( ok ) \n             presentViewController ( alert ,   animated :   true ,   completion :   nil ) \n             return \n     } \n\n     let   user   =   SCUser () \n     user . signup ( username ,   email :   email ,   password :   password )   { \n         success ,   error ,   result   in \n         if   success   { \n             let   alert   =   UIAlertController ( title :   \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d ,   message :   nil ,   preferredStyle :   . Alert ) \n             let   ok   =   UIAlertAction ( title :   OK ,   style :   . Default )   { \n                 action   in \n                 self . dismissViewControllerAnimated ( true ,   completion :   nil ) \n             } \n             alert . addAction ( ok ) \n             self . presentViewController ( alert ,   animated :   true ,   completion :   nil ) \n         }   else   { \n             var   message   =   \n             switch   error !   { \n             case   . API ( _ ,   let   apiMessage ): \n                 message   =   apiMessage \n             default : \n                 break \n             } \n             let   alert   =   UIAlertController ( title :   \u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 ,   message :   message ,   preferredStyle :   . Alert ) \n             let   ok   =   UIAlertAction ( title :   OK ,   style :   . Default )   { \n                 action   in \n             } \n             alert . addAction ( ok ) \n             self . presentViewController ( alert ,   animated :   true ,   completion :   nil ) \n         } \n     }  }", 
            "title": ".signup(username, email, password, callback)"
        }, 
        {
            "location": "/SWIFT/SCUser/#signupcallback", 
            "text": "Method for application user registration. Fields are defined using the Object parent class methods.     Parameter  Type  Properties  Description  Value example      callback  (Bool, SCError?, [String: AnyObject]?) -  Void   Callback for the request being executed.", 
            "title": ".signup(callback)"
        }, 
        {
            "location": "/SWIFT/SCMessage/", 
            "text": "SCMessage\n\n\n.sendPush(query: SCQuery, subject: String, text: String, callback: (Bool, SCError?, Int?) -\n Void)\n\n\n.sendSms(query: SCQuery, subject: String, text: String, callback: (Bool, SCError?, Int?) -\n Void)\n\n\n\n\n\n\n\n\n\n\n\n\n.sendPush(query, subject, text, callback)\n\n\nPush sending method\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nquery\n\n\nSCQuery\n\n\n\n\nUsers/Devices collection query for sampling addressees\n\n\n\n\n\n\n\n\ntext\n\n\nString\n\n\n\n\nPush text\n\n\n\"Push text\"\n\n\n\n\n\n\ncallback\n\n\n(Bool, SCError?, Int?) -\n Void\n\n\n\n\nCallback for the request being executed.\n\n\n\n\n\n\n\n\n\n\nExample\n   \n\n\nvar\n \nqueryUserDevices\n \n=\n \nSCQuery\n(\ncollection\n:\n \ndevices\n)\n\n\nvar\n \nbroadcast\n \n=\n \nSCMessage\n()\n\n\n\nqueryUserDevices\n.\nexists\n(\nuserRelation\n)\n\n\nbroadcast\n.\nsendPush\n(\nqueryUserDevices\n,\n \ntext\n:\nPush text\n)\n \n{\n\n    \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n    \nif\n \nsuccess\n \n{\n\n        \nprint\n(\nSuccess\n)\n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \nprint\n(\nError\n)\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\n\n.sendSms(query, subject, text, callback)\n\n\nSMS sending method\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nquery\n\n\nSCQuery\n\n\n\n\nUsers collection query for sampling addressees\n\n\n\n\n\n\n\n\ntext\n\n\nString\n\n\n\n\nSMS text\n\n\n\"SMS text\"\n\n\n\n\n\n\ncallback\n\n\n(Bool, SCError?, Int?) -\n Void\n\n\n\n\nCallback for the request being executed.\n\n\n\n\n\n\n\n\n\n\nExample\n   \n\n\nvar\n \nqueryUsersWithPhone\n \n=\n \nSCQuery\n(\ncollection\n:\n \nusers\n)\n\n\nvar\n \nbroadcast\n \n=\n \nSCMessage\n()\n\n\n\nqueryUsersWithPhone\n.\nexists\n(\nphone\n)\n\n\nbroadcast\n.\nsendSms\n(\nqueryUsersWithPhone\n,\n \ntext\n:\nSMS text\n)\n \n{\n\n    \nsuccess\n,\n \nerror\n,\n \nresult\n \nin\n\n    \nif\n \nsuccess\n \n{\n\n        \nprint\n(\nSuccess\n)\n\n    \n}\n \nelse\n \n{\n\n        \nif\n \nlet\n \nerror\n \n=\n \nerror\n \n{\n\n            \nprint\n(\nError\n)\n\n        \n}\n\n    \n}\n\n\n}", 
            "title": "SCMessage"
        }, 
        {
            "location": "/SWIFT/SCMessage/#sendpushquery-subject-text-callback", 
            "text": "Push sending method     Parameter  Type  Properties  Description  Value example      query  SCQuery   Users/Devices collection query for sampling addressees     text  String   Push text  \"Push text\"    callback  (Bool, SCError?, Int?) -  Void   Callback for the request being executed.      Example", 
            "title": ".sendPush(query, subject, text, callback)"
        }, 
        {
            "location": "/SWIFT/SCMessage/#var-queryuserdevices-scquerycollection-devices-var-broadcast-scmessage-queryuserdevicesexistsuserrelation-broadcastsendpushqueryuserdevices-textpush-text-success-error-result-in-if-success-printsuccess-else-if-let-error-error-printerror", 
            "text": "", 
            "title": "var queryUserDevices = SCQuery(collection: &quot;devices&quot;)"
        }, 
        {
            "location": "/SWIFT/SCMessage/#sendsmsquery-subject-text-callback", 
            "text": "SMS sending method     Parameter  Type  Properties  Description  Value example      query  SCQuery   Users collection query for sampling addressees     text  String   SMS text  \"SMS text\"    callback  (Bool, SCError?, Int?) -  Void   Callback for the request being executed.      Example      var   queryUsersWithPhone   =   SCQuery ( collection :   users )  var   broadcast   =   SCMessage ()  queryUsersWithPhone . exists ( phone )  broadcast . sendSms ( queryUsersWithPhone ,   text : SMS text )   { \n     success ,   error ,   result   in \n     if   success   { \n         print ( Success ) \n     }   else   { \n         if   let   error   =   error   { \n             print ( Error ) \n         } \n     }  }", 
            "title": ".sendSms(query, subject, text, callback)"
        }, 
        {
            "location": "/SWIFT/SCScript/", 
            "text": "A class that works with the server-side scripts of the application\n\n\n\n\nSCScript\n\n\n.run(scriptId, pool, callback)\n\n\n\n\n\n\n\n\n\n\n\n\n.run(scriptID, pool, callback)\n\n\nA method that calls a server-side script\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nscriptID\n\n\nString\n\n\nMandatory\n\n\nServer script ID\n\n\n\"57484fb91c5666544db25675\"\n\n\n\n\n\n\npool\n\n\n[String: AnyObject]\n\n\n\n\nData pool to be passed to the server-side script\n\n\n[\"data\": {\"array\": [0,1,2,3,\"\u0441\u0442\u0440\u043e\u043a\u0430\"], \"logic\": false}, \"weekday\": \"friday\"]\n\n\n\n\n\n\ncallback\n\n\n(Bool, SCError?) -\n Void\n\n\n\n\nCallback for the request being executed\n\n\n\n\n\n\n\n\n\n\nExample\n   \n\n\nSCScript\n.\nrun\n(\n57484fb91c5666544db25675\n,\n \n[\ncollname\n:\n \nitems\n,\n \nkey\n:\n \nrelToQuests\n,\n \nval\n:\n \n[\nCF4Gk9WP6L\n,\n \nMwORD9llTM\n,\n \nJw4INX328A\n]])\n \n{\n\n    \nsuccess\n,\n \nerror\n \nin\n\n\n}", 
            "title": "SCScript"
        }, 
        {
            "location": "/SWIFT/SCScript/#runscriptid-pool-callback", 
            "text": "A method that calls a server-side script     Parameter  Type  Properties  Description  Value example      scriptID  String  Mandatory  Server script ID  \"57484fb91c5666544db25675\"    pool  [String: AnyObject]   Data pool to be passed to the server-side script  [\"data\": {\"array\": [0,1,2,3,\"\u0441\u0442\u0440\u043e\u043a\u0430\"], \"logic\": false}, \"weekday\": \"friday\"]    callback  (Bool, SCError?) -  Void   Callback for the request being executed      Example      SCScript . run ( 57484fb91c5666544db25675 ,   [ collname :   items ,   key :   relToQuests ,   val :   [ CF4Gk9WP6L ,   MwORD9llTM ,   Jw4INX328A ]])   { \n     success ,   error   in  }", 
            "title": ".run(scriptID, pool, callback)"
        }, 
        {
            "location": "/SWIFT/WebSocket/", 
            "text": "WebSocket\n\n\nTo use WebSocket in your project, you can use the \ndaltoniam/Starscream\n library with the following url scheme when initializing WebSocket:\n\n\n    \nvar\n \nsocket\n \n=\n \nWebSocket\n(\nurl\n:\n \nNSURL\n(\nstring\n:\n \nwss://wss.scorocode.ru/{appID}/{wsKey}/{chanName}\n)\n!\n)\n\n    \nsocket\n.\nconnect\n()\n\n\n\n\nwhere\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nappID\n\n\nString\n\n\nMandatory\n\n\nThe appld key of your application\n\n\na3d04e75e157b2f7ae20c2fce02f63d6\n\n\n\n\n\n\nwsKey\n\n\nString\n\n\nMandatory\n\n\nThe websocketKey of your application\n\n\n563452bbc611d8106d5da767365897de\n\n\n\n\n\n\nchanName\n\n\nString\n\n\nMandatory\n\n\nArbitrary channel name\n\n\nchatroom\n\n\n\n\n\n\n\n\nExample\n\n\n    \nvar\n \nsocket\n \n=\n \nWebSocket\n(\nurl\n:\n \nNSURL\n(\nstring\n:\n \nwss://wss.scorocode.ru/a3d04e75e157b2f7ae20c2fce02f63d6/563452bbc611d8106d5da767365897de/chatroom\n)\n!\n)\n\n    \nsocket\n.\nconnect\n()\n\n\n\n\n\n\nConnection of the Starscream library\n\n\nSee Readme.md of the \ndaltoniam/Starscream\n repository for details of the Starscream library connection.\n\n\nCarthage\n must be installed to connect the library to your project.\n\n\nCreate the \"Cartfile\" file in the Xcode project root or modify an existing \"Cartfile\" by writing the following string in it:\n\n\ngithub\n \ndaltoniam/Starscream\n\n\n\n\n\n\nClose the project in xcode, start in the console:\n\n\ncarthage\n \nupdate\n \n--\nplatform\n \niOS\n,\nMac\n\n\n\n\n\n\nRe-open the project in Xcode. To Target -\n General -\n Linked Frameworks and Libraries from \n -\n Carthage -\n Build -\n iOS drag and drop 1 file:\n\n\nStarscream\n.\nframework\n\n\n\n\n\n\nTo Target -\n Build Phases, add New Run Script Phase:\n\n\n/\nusr\n/\nlocal\n/\nbin\n/\ncarthage\n \ncopy\n-\nframeworks\n\n\n\n\n\n\nand Input File:\n\n\n$\n(\nSRCROOT\n)\n/\nCarthage\n/\nBuild\n/\niOS\n/\nStarscream\n.\nframework\n\n\n\n\n\n\nExample of Starscream library usage\n\n\nSee Readme.md of the \ndaltoniam/Starscream\n repository for details of the Starscream library connection.\n\n\nimport\n \nUIKit\n\n\nimport\n \nStarscream\n\n\n\nclass\n \nViewController\n:\n \nUIViewController\n \n{\n\n\n    \nvar\n \nsocket\n:\n \nWebSocket\n!\n\n\n    \n@IBOutlet\n \nprivate\n \nweak\n \nvar\n \ntextField\n:\n \nUITextField\n!\n\n    \n@IBOutlet\n \nprivate\n \nweak\n \nvar\n \ntextView\n:\n \nUITextView\n!\n\n\n    \noverride\n \nfunc\n \nviewDidLoad\n()\n \n{\n\n        \nsuper\n.\nviewDidLoad\n()\n\n        \n// Do any additional setup after loading the view, typically from a nib.\n\n    \n}\n\n\n    \n@IBAction\n \nprivate\n \nfunc\n \nconnectTapped\n()\n \n{\n\n\n        \nsocket\n \n=\n \nWebSocket\n(\nurl\n:\n \nNSURL\n(\nstring\n:\n \nwss://wss.scorocode.ru/a3d04e75e157b2f7ae20c2fce02f63d6/563452bbc611d8106d5da767365897de/chatroom\n)\n!\n)\n\n        \nsocket\n.\nconnect\n()\n\n\n        \nsocket\n.\nonConnect\n \n=\n \n{\n\n            \nprint\n(\nconnected\n)\n\n        \n}\n\n\n        \nsocket\n.\nonText\n \n=\n \n{\n\n            \ntext\n \nin\n\n            \nprint\n(\ntext\n)\n\n            \nself\n.\ntextView\n.\ntext\n \n=\n \nself\n.\ntextView\n.\ntext\n \n+\n \n\\n\n\\(\ntext\n)\n\n        \n}\n\n\n        \nsocket\n.\nonData\n \n=\n \n{\n\n            \ndata\n \nin\n\n            \nprint\n(\ndata\n)\n\n        \n}\n\n\n    \n}\n\n\n    \n@IBAction\n \nprivate\n \nfunc\n \ndisconnectTapped\n()\n \n{\n\n\n    \n}\n\n\n    \n@IBAction\n \nprivate\n \nfunc\n \nsendTapped\n()\n \n{\n\n        \nsocket\n.\nwriteString\n(\ntextField\n.\ntext\n!)\n\n    \n}\n\n\n\n\n}", 
            "title": "WebSocket"
        }, 
        {
            "location": "/SWIFT/WebSocket/#websocket", 
            "text": "To use WebSocket in your project, you can use the  daltoniam/Starscream  library with the following url scheme when initializing WebSocket:       var   socket   =   WebSocket ( url :   NSURL ( string :   wss://wss.scorocode.ru/{appID}/{wsKey}/{chanName} ) ! ) \n     socket . connect ()  \n\nwhere     Parameter  Type  Properties  Description  Value example      appID  String  Mandatory  The appld key of your application  a3d04e75e157b2f7ae20c2fce02f63d6    wsKey  String  Mandatory  The websocketKey of your application  563452bbc611d8106d5da767365897de    chanName  String  Mandatory  Arbitrary channel name  chatroom     Example       var   socket   =   WebSocket ( url :   NSURL ( string :   wss://wss.scorocode.ru/a3d04e75e157b2f7ae20c2fce02f63d6/563452bbc611d8106d5da767365897de/chatroom ) ! ) \n     socket . connect ()", 
            "title": "WebSocket"
        }, 
        {
            "location": "/SWIFT/WebSocket/#connection-of-the-starscream-library", 
            "text": "See Readme.md of the  daltoniam/Starscream  repository for details of the Starscream library connection.  Carthage  must be installed to connect the library to your project.  Create the \"Cartfile\" file in the Xcode project root or modify an existing \"Cartfile\" by writing the following string in it:  github   daltoniam/Starscream   Close the project in xcode, start in the console:  carthage   update   -- platform   iOS , Mac   Re-open the project in Xcode. To Target -  General -  Linked Frameworks and Libraries from   -  Carthage -  Build -  iOS drag and drop 1 file:  Starscream . framework   To Target -  Build Phases, add New Run Script Phase:  / usr / local / bin / carthage   copy - frameworks   and Input File:  $ ( SRCROOT ) / Carthage / Build / iOS / Starscream . framework", 
            "title": "Connection of the Starscream library"
        }, 
        {
            "location": "/SWIFT/WebSocket/#example-of-starscream-library-usage", 
            "text": "See Readme.md of the  daltoniam/Starscream  repository for details of the Starscream library connection.  import   UIKit  import   Starscream  class   ViewController :   UIViewController   { \n\n     var   socket :   WebSocket ! \n\n     @IBOutlet   private   weak   var   textField :   UITextField ! \n     @IBOutlet   private   weak   var   textView :   UITextView ! \n\n     override   func   viewDidLoad ()   { \n         super . viewDidLoad () \n         // Do any additional setup after loading the view, typically from a nib. \n     } \n\n     @IBAction   private   func   connectTapped ()   { \n\n         socket   =   WebSocket ( url :   NSURL ( string :   wss://wss.scorocode.ru/a3d04e75e157b2f7ae20c2fce02f63d6/563452bbc611d8106d5da767365897de/chatroom ) ! ) \n         socket . connect () \n\n         socket . onConnect   =   { \n             print ( connected ) \n         } \n\n         socket . onText   =   { \n             text   in \n             print ( text ) \n             self . textView . text   =   self . textView . text   +   \\n \\( text ) \n         } \n\n         socket . onData   =   { \n             data   in \n             print ( data ) \n         } \n\n     } \n\n     @IBAction   private   func   disconnectTapped ()   { \n\n     } \n\n     @IBAction   private   func   sendTapped ()   { \n         socket . writeString ( textField . text !) \n     }  }", 
            "title": "Example of Starscream library usage"
        }, 
        {
            "location": "/Java/Java/", 
            "text": "SDK provides access to the Scorocode platform for creating java-based applications. Details can be found on our website: https://scorocode.ru \n\n\nSDK \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0435 Scorocode \u0434\u043b\u044f \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439, \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043d\u0430 Java / Android.\u041f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0441\u0442\u0438 \u043d\u0430 \u043d\u0430\u0448\u0435\u043c \u0441\u0430\u0439\u0442\u0435: https://scorocode.ru\n\n\nSDK integration\n\n\nScorocode Java SDK distribution pack can be found in the repository \nhttps://github.com/Scorocode/scorocode-sdk-java\n\n\nYou can integrate SDK with your project using Gradle by adding following dependencies:\n\n\ndependencies {\n   compile \nru.prof-itgroup:scorocode_sdk:1.0.15-beta\n\n}\n\n\n\n\n\nMake sure, that gradle looking for a libraries in the \njcenter\n repository, that recommended by Goolge (and includes \nmaven\n libraries):\n\n\nrepositories\n \n{\n\n   \njcenter\n()\n\n\n}", 
            "title": "Java SDK"
        }, 
        {
            "location": "/Java/Java/#sdk-integration", 
            "text": "Scorocode Java SDK distribution pack can be found in the repository  https://github.com/Scorocode/scorocode-sdk-java  You can integrate SDK with your project using Gradle by adding following dependencies:  dependencies {\n   compile  ru.prof-itgroup:scorocode_sdk:1.0.15-beta \n}  Make sure, that gradle looking for a libraries in the  jcenter  repository, that recommended by Goolge (and includes  maven  libraries):  repositories   { \n    jcenter ()  }", 
            "title": "SDK integration"
        }, 
        {
            "location": "/Java/ScorocodeSDK/", 
            "text": "ScorocodeSDK\n\n\n.initWith(appId, clientKey, masterKey, fileKey, messageKey, scriptKey, websocketKey)\n\n\n\n\n\n\n\n\n\n\n\n\nScorocodeSDK.initWith(appId, clientKey, masterKey, fileKey, messageKey)\n\n\nSDK initialisation. \n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\napplicationId\n\n\nString\n\n\nMandatory\n\n\nApplication identifier\n\n\n\"db8a1b41b8543397a798a181d9891b4c\"\n\n\n\n\n\n\nclientId\n\n\nString\n\n\nMandatory\n\n\nClient key for the iOs platform\n\n\n\"563452bbc611d8106d5da767365897de\"\n\n\n\n\n\n\naccessKey\n\n\nString\n\n\nMandatory\n\n\nAuthentication key (master key, script key)\n\n\n\"28f06b89b62165c33de55265166d8781\"\n\n\n\n\n\n\nfileKey\n\n\nString\n\n\n\n\nAuthentication keys for access to files\n\n\n\"6305ee7ac8023191a333d9267f1a07e8\"\n\n\n\n\n\n\nmessageKey\n\n\nString\n\n\n\n\nAuthentication key for sending messages\n\n\n\"9d774f6fa704f192e6aef53933f44e4f\"\n\n\n\n\n\n\nscriptKey\n\n\nString\n\n\n\n\nServer-side scripts access key\n\n\n\"054bcf2ktyj9369dab1c32343f1776ae\"\n\n\n\n\n\n\nwebsocketKey\n\n\nString\n\n\n\n\nWebSocket access key\n\n\n\"694bcf2ffd29369dab1c3d0e3f1776ae\"\n\n\n\n\n\n\n\n\n\n\n\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u044f\n\n\n\n\nSdk must be initialised before you use other SDK methods;\n\n\n\n\n\n\nExample\n  \n\n\nScorocodeSdk\n.\ninitWith\n(\ndb8a1b41b8543397a798a181d9891b4c\n,\n \n563452bbc611d8106d5da767365897de\n,\n \n28f06b89b62165c33de55265166d8781\n,\n \nnull\n,\n \nnull\n,\n \nnull\n,\n \n694bcf2ffd29369dab1c3d0e3f1776ae\n);", 
            "title": "ScorocodeSDK"
        }, 
        {
            "location": "/Java/ScorocodeSDK/#scorocodesdkinitwithappid-clientkey-masterkey-filekey-messagekey", 
            "text": "SDK initialisation.      Parameter  Type  Properties  Description  Value example      applicationId  String  Mandatory  Application identifier  \"db8a1b41b8543397a798a181d9891b4c\"    clientId  String  Mandatory  Client key for the iOs platform  \"563452bbc611d8106d5da767365897de\"    accessKey  String  Mandatory  Authentication key (master key, script key)  \"28f06b89b62165c33de55265166d8781\"    fileKey  String   Authentication keys for access to files  \"6305ee7ac8023191a333d9267f1a07e8\"    messageKey  String   Authentication key for sending messages  \"9d774f6fa704f192e6aef53933f44e4f\"    scriptKey  String   Server-side scripts access key  \"054bcf2ktyj9369dab1c32343f1776ae\"    websocketKey  String   WebSocket access key  \"694bcf2ffd29369dab1c3d0e3f1776ae\"      \u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u044f   Sdk must be initialised before you use other SDK methods;    Example     ScorocodeSdk . initWith ( db8a1b41b8543397a798a181d9891b4c ,   563452bbc611d8106d5da767365897de ,   28f06b89b62165c33de55265166d8781 ,   null ,   null ,   null ,   694bcf2ffd29369dab1c3d0e3f1776ae );", 
            "title": "ScorocodeSDK.initWith(appId, clientKey, masterKey, fileKey, messageKey)"
        }, 
        {
            "location": "/Java/Document/", 
            "text": "Document\n\n\nnew Document(collection_name)\n\n\n.setField(field, value)\n\n\n.saveDocument(callback)\n  \n\n\n.getDocumentById(documentId, callback)\n\n\n.getField(field)\n\n\n.updateDocument()\n\n\n.uploadFile(fieldName, fileName, contentToUploadInBase64, callback)\n\n\n.getFileLink(fieldName, fileName)\n\n\n.removeFile( fieldName,  fileName,  callback)\n\n\n.removeDocument(callback)\n  \n\n\n\n\n\n\n\n\n\n\n\n\nnew Document(collection_name)\n\n\nDocument initialisation\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\ncollection_name\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435\n\n\nName of the collection where the document is added\n\n\n\"Things\"\n\n\n\n\n\n\n\n\nExample\n \n\n\nScorocodeSdk\n.\ninitWith\n(\ndb8a1b41b8543397a798a181d9891b4c\n,\n \n563452bbc611d8106d5da767365897de\n,\n \n28f06b89b62165c33de55265166d8781\n,\n \nnull\n,\n \nnull\n,\n \nnull\n);\n\n\n\nDocument\n \nexampleItem\n \n=\n \nnew\n \nDocument\n(\nItems\n);\n\n\n\n\n\n\n\n\n\n\n.setField(field, value)\n\n\nMethod for setting data to document's field\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\nField name\n\n\n\"testcoll\"\n\n\n\n\n\n\nvalue\n\n\nObject\n\n\nMandatory\n\n\nField value\n\n\n\"huNr3L7QDh\"\n\n\n\n\n\n\n\n\nExample\n \n\n\nScorocodeSdk\n.\ninitWith\n(\ndb8a1b41b8543397a798a181d9891b4c\n,\n \n563452bbc611d8106d5da767365897de\n,\n \n28f06b89b62165c33de55265166d8781\n,\n \nnull\n,\n \nnull\n,\n \nnull\n);\n\n\n\nfinal\n \nDocument\n \norder\n \n=\n \nnew\n \nDocument\n(\n\u201c\norders\n\u201d\n);\n\n\norder\n.\nsetField\n(\n\u201c\norderId\n\u201d\n,\n \n\u201c\nKu128A439ads\n\u201d\n);\n\n\n\n\n\n\n\n\n\n\n.saveDocument(callback)\n\n\nThe method saves the document in the database or updates an object that already exists there\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\ncallback\n\n\nCallbackDocumentSaved\n\n\nMandatory\n\n\nCallback for the request being executed.\n\n\n\n\n\n\n\n\n\n\nExample\n \n\n\nCreating new document \n\n\nScorocodeSdk\n.\ninitWith\n(\ndb8a1b41b8543397a798a181d9891b4c\n,\n \n563452bbc611d8106d5da767365897de\n,\n \n28f06b89b62165c33de55265166d8781\n,\n \nnull\n,\n \nnull\n,\n \nnull\n);\n\n\n\n\nDocument\n \nnewDocument\n \n=\n \nnew\n \nDocument\n(\n\u201c\norderInfo\n\u201d\n);\n\n\nnewDocument\n.\nsetField\n(\nisOrderSend\n,\n \nfalse\n);\n\n\nnewDocument\n.\nsetField\n(\nbuyerName\n,\n \n\u201c\nAny\n \nusername\n\u201d\n);\n\n\n\n\nnewDocument\n.\nsaveDocument\n(\nnew\n \nCallbackDocumentSaved\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentSaved\n()\n \n{\n\n                \n//document saved successful (New document uploaded on server).\n\n            \n}\n\n\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentSaveFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \n//document save failed.\n\n            \n}\n\n        \n});\n\n\n\n\n\n\nUpdating the existing document\n\n\n \nfinal\n \nDocument\n \ndocument\n \n=\n \nnew\n \nDocument\n(\n\u201c\norderInfo\n\u201d\n);\n\n \ndocument\n.\ngetDocumentById\n(\nKH3JCojAyT\n,\n \nnew\n \nCallbackFindDocument\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentFound\n(\nDocumentInfo\n \ndocumentInfo\n)\n \n{\n\n            \n//we found document and we can make changes in it and save it\n\n            \n//...change document fields...\n\n            \n//save  \n\n                \ndocument\n.\nsaveDocument\n(\nnew\n \nCallbackDocumentSaved\n()\n \n{\n\n                    \n@Override\n\n                    \npublic\n \nvoid\n \nonDocumentSaved\n()\n \n{\n\n                        \n//document save succeed. Document updated on server\n\n                    \n}\n\n\n                    \n@Override\n\n                    \npublic\n \nvoid\n \nonDocumentSaveFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                        \n//document save failed.\n\n                    \n}\n\n                \n});\n\n            \n}\n\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentNotFound\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n            \n//document not found. If we try to save document here\n\n            \n//new document will be upload to server as in example 2.1\n\n            \n}\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.getDocumentById(documentId, callback)\n\n\nMethod for retrieving a collection object from DB by its _id.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\ndocumentId\n\n\nString\n\n\nMandatory\n\n\nObject identifier\n\n\n\"nV0p50CDKq\"\n\n\n\n\n\n\ncallback\n\n\nCallbackGetDocumentById\n\n\nMandatory\n\n\nCallback for the request being executed.\n\n\n\n\n\n\n\n\n\n\nExample\n \n\n\nScorocodeSdk\n.\ninitWith\n(\ndb8a1b41b8543397a798a181d9891b4c\n,\n \n563452bbc611d8106d5da767365897de\n,\n \n28f06b89b62165c33de55265166d8781\n,\n \nnull\n,\n \nnull\n,\n \nnull\n);\n\n\n\nfinal\n \nDocument\n \ndocument\n \n=\n \nnew\n \nDocument\n(\nordersCollection\n);\n\n\ndocument\n.\ngetDocumentById\n(\nnV0p50CDKq\n,\n \nnew\n \nCallbackGetDocumentById\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentFound\n(\nDocumentInfo\n \ndocumentInfo\n)\n \n{\n\n                \n//document found\n\n            \n}\n\n\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentNotFound\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \n//document not found or error occured\n\n            \n}\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.getField(field)\n\n\nMethod for retrieving data from a specified document field.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\nField name\n\n\n\"name\"\n\n\n\n\n\n\n\n\nExample\n \n\n\nfinal\n \nDocument\n \ndocument\n \n=\n \nnew\n \nDocument\n(\n\u201c\nordersCollection\n\u201d\n);\n\n\nString\n \norderId\n \n=\n \ndocument\n.\ngetField\n(\n\u201c\norderId\n\u201d\n);\n\n\n\n\n\n\n\n\n.updateDocument()\n\n\nMethod for updating the document using Update class.\n\n\n\n\n\n\n.uploadFile(fieldName, fileName, contentToUploadInBase64, callback)\n\n\nFile upload method\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfieldName\n\n\nString\n\n\nMandatory\n\n\nField name\n\n\n\"attachment\"\n\n\n\n\n\n\nfileName\n\n\nString\n\n\nMandatory\n\n\nFilename with extension\n\n\n\"file.txt\"\n\n\n\n\n\n\ncontentToUploadInBase64\n\n\nString\n\n\nMandatory\n\n\nFile content in base64 encoded format\n\n\n\"VEhJUyBJUyBGSUxFLUUtRS1FLUUtRS1FIQ==\"\n\n\n\n\n\n\ncallback\n\n\nCallbackUploadFile\n\n\nMandatory\n\n\nCallback for the request being executed.\n\n\n\n\n\n\n\n\n\n\nExample\n \n\n\nfinal\n \nDocument\n \ndocument\n \n=\n \nnew\n \nDocument\n(\n\u201c\nordersCollection\n\u201d\n);\n\n\ndocument\n.\ngetDocumentById\n(\nnV0p50CDKq\n,\n \nnew\n \nCallbackFindDocument\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentFound\n(\nDocumentInfo\n \ndocumentInfo\n)\n \n{\n\n            \n//document found and we can upload document in this file\n\n\n                \ndocument\n.\nuploadFile\n(\nfile_field\n,\n \nany_filename.txt\n,\n \n            \nBase64\n.\nencodeToString\n(\nhello world\n.\ngetBytes\n(),\n \nBase64\n.\nDEFAULT\n),\n \nnew\n \nCallbackUploadFile\n()\n \n{\n\n\n              \n@Override\n\n                    \npublic\n \nvoid\n \nonDocumentUploaded\n()\n \n{\n\n                        \n//document upload succeed\n\n                    \n}\n\n\n\n                    \n@Override\n\n                    \npublic\n \nvoid\n \nonDocumentUploadFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                        \n//document upload failed\n\n                    \n}\n\n                \n});\n\n            \n}\n\n\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentNotFound\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \n//document not found\n\n            \n}\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.getFileLink(fieldName, fileName)\n\n\nMethod for retreiving file link\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfieldName\n\n\nString\n\n\nMandatory\n\n\nField name\n\n\n\"attachment\"\n\n\n\n\n\n\nfileName\n\n\nString\n\n\nMandatory\n\n\nFilename with extension\n\n\n\"file.txt\"\n\n\n\n\n\n\n\n\nExample\n \n\n\nfinal\n \nDocument\n \ndocumentWithFile\n \n=\n \nnew\n \nDocument\n(\n\u201c\nordersCollection\n\u201d\n);\n\n\ndocumentWithFile\n.\ngetDocumentById\n(\nnV0p50CDKq\n,\n \nnew\n \nCallbackFindDocument\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentFound\n(\nDocumentInfo\n \ndocumentInfo\n)\n \n{\n\n                    \n//document found. We can try to get link on file in this document\n\n            \nString\n \nfileLink\n \n=\n \ndocumentWithFile\n.\ngetFileLink\n(\ntest\n,\n \nfile.txt\n);\n\n            \n}\n\n\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentNotFound\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \n//document not found\n\n            \n}\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.removeFile(fieldName, fileName, callback)\n\n\nMethod for removing the file\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfieldName\n\n\nString\n\n\nMandatory\n\n\nCollection field name\n\n\n\"attachment\"\n\n\n\n\n\n\nfileName\n\n\nString\n\n\nMandatory\n\n\nFilename with extension\n\n\n\"file.txt\"\n\n\n\n\n\n\ncallback\n\n\nCallbackDeleteFile\n\n\nMandatory\n\n\nCallback for the request being executed.\n\n\n\n\n\n\n\n\n\n\nExample\n \n\n\nfinal\n \nDocument\n \ndocument\n \n=\n \nnew\n \nDocument\n(\n\u201c\nordersCollection\n\u201d\n);\n\n\ndocument\n.\ngetDocumentById\n(\nnV0p50CDKq\n,\n \nnew\n \nCallbackFindDocument\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentFound\n(\nDocumentInfo\n \ndocumentInfo\n)\n \n{\n\n            \n//document found we can try to delete file from this doc\n\n\n\n                \ndocument\n.\nremoveFile\n(\nfile\n,\n \nanyname\n,\n \nnew\n \nCallbackDeleteFile\n()\n \n{\n\n                    \n@Override\n\n                    \npublic\n \nvoid\n \nonDocumentDeleted\n()\n \n{\n\n                        \n//file deletion succeed\n\n                    \n}\n\n\n\n                    \n@Override\n\n                    \npublic\n \nvoid\n \nonDetelionFailed\n(\nString\n \nerrorCodes\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                        \n//file deletion failed\n\n                    \n}\n\n                \n});\n\n            \n}\n\n\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentNotFound\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \n//document not found\n\n            \n}\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.removeDocument(callback)\n\n\nMethod for removing the selected document\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\ncallback\n\n\nCallbackRemoveDocument\n\n\nMandatory\n\n\nCallback for the request being executed.\n\n\n\n\n\n\n\n\n\n\nExample\n \n\n\nfinal\n \nDocument\n \ndocument\n \n=\n \nnew\n \nDocument\n(\n\u201c\nordersCollection\n\u201d\n);\n\n\ndocument\n.\ngetDocumentById\n(\n7BOlVr1Acp\n,\n \nnew\n \nCallbackFindDocument\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentFound\n(\nDocumentInfo\n \ndocumentInfo\n)\n \n{\n\n                \n//we found document in collection and can remove it\n\n                \ndocument\n.\nremoveDocument\n(\nnew\n \nCallbackRemoveDocument\n()\n \n{\n\n                    \n@Override\n\n                    \npublic\n \nvoid\n \nonRemoveSucceed\n(\nResponseRemove\n \nresponseRemove\n)\n \n{\n\n                        \n//document removed\n\n                    \n}\n\n\n\n                    \n@Override\n\n                    \npublic\n \nvoid\n \nonRemoveFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                        \n//remove operation failed\n\n                    \n}\n\n                \n});\n\n            \n}\n\n\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentNotFound\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \n//document wasn\u2019t found\n\n            \n}\n\n        \n});", 
            "title": "Document"
        }, 
        {
            "location": "/Java/Document/#new-documentcollection_name", 
            "text": "Document initialisation     Parameter  Type  Properties  Description  Value example      collection_name  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435  Name of the collection where the document is added  \"Things\"     Example    ScorocodeSdk . initWith ( db8a1b41b8543397a798a181d9891b4c ,   563452bbc611d8106d5da767365897de ,   28f06b89b62165c33de55265166d8781 ,   null ,   null ,   null );  Document   exampleItem   =   new   Document ( Items );", 
            "title": "new Document(collection_name)"
        }, 
        {
            "location": "/Java/Document/#setfieldfield-value", 
            "text": "Method for setting data to document's field     Parameter  Type  Properties  Description  Value example      field  String  Mandatory  Field name  \"testcoll\"    value  Object  Mandatory  Field value  \"huNr3L7QDh\"     Example    ScorocodeSdk . initWith ( db8a1b41b8543397a798a181d9891b4c ,   563452bbc611d8106d5da767365897de ,   28f06b89b62165c33de55265166d8781 ,   null ,   null ,   null );  final   Document   order   =   new   Document ( \u201c orders \u201d );  order . setField ( \u201c orderId \u201d ,   \u201c Ku128A439ads \u201d );", 
            "title": ".setField(field, value)"
        }, 
        {
            "location": "/Java/Document/#savedocumentcallback", 
            "text": "The method saves the document in the database or updates an object that already exists there     Parameter  Type  Properties  Description  Value example      callback  CallbackDocumentSaved  Mandatory  Callback for the request being executed.      Example    Creating new document   ScorocodeSdk . initWith ( db8a1b41b8543397a798a181d9891b4c ,   563452bbc611d8106d5da767365897de ,   28f06b89b62165c33de55265166d8781 ,   null ,   null ,   null );  Document   newDocument   =   new   Document ( \u201c orderInfo \u201d );  newDocument . setField ( isOrderSend ,   false );  newDocument . setField ( buyerName ,   \u201c Any   username \u201d );  newDocument . saveDocument ( new   CallbackDocumentSaved ()   { \n             @Override \n             public   void   onDocumentSaved ()   { \n                 //document saved successful (New document uploaded on server). \n             } \n\n\n             @Override \n             public   void   onDocumentSaveFailed ( String   errorCode ,   String   errorMessage )   { \n                 //document save failed. \n             } \n         });   Updating the existing document    final   Document   document   =   new   Document ( \u201c orderInfo \u201d ); \n  document . getDocumentById ( KH3JCojAyT ,   new   CallbackFindDocument ()   { \n             @Override \n             public   void   onDocumentFound ( DocumentInfo   documentInfo )   { \n             //we found document and we can make changes in it and save it \n             //...change document fields... \n             //save   \n                 document . saveDocument ( new   CallbackDocumentSaved ()   { \n                     @Override \n                     public   void   onDocumentSaved ()   { \n                         //document save succeed. Document updated on server \n                     } \n\n                     @Override \n                     public   void   onDocumentSaveFailed ( String   errorCode ,   String   errorMessage )   { \n                         //document save failed. \n                     } \n                 }); \n             } \n\n             @Override \n             public   void   onDocumentNotFound ( String   errorCode ,   String   errorMessage )   { \n             //document not found. If we try to save document here \n             //new document will be upload to server as in example 2.1 \n             } \n         });", 
            "title": ".saveDocument(callback)"
        }, 
        {
            "location": "/Java/Document/#getdocumentbyiddocumentid-callback", 
            "text": "Method for retrieving a collection object from DB by its _id.     Parameter  Type  Properties  Description  Value example      documentId  String  Mandatory  Object identifier  \"nV0p50CDKq\"    callback  CallbackGetDocumentById  Mandatory  Callback for the request being executed.      Example    ScorocodeSdk . initWith ( db8a1b41b8543397a798a181d9891b4c ,   563452bbc611d8106d5da767365897de ,   28f06b89b62165c33de55265166d8781 ,   null ,   null ,   null );  final   Document   document   =   new   Document ( ordersCollection );  document . getDocumentById ( nV0p50CDKq ,   new   CallbackGetDocumentById ()   { \n             @Override \n             public   void   onDocumentFound ( DocumentInfo   documentInfo )   { \n                 //document found \n             } \n\n\n             @Override \n             public   void   onDocumentNotFound ( String   errorCode ,   String   errorMessage )   { \n                 //document not found or error occured \n             } \n         });", 
            "title": ".getDocumentById(documentId, callback)"
        }, 
        {
            "location": "/Java/Document/#getfieldfield", 
            "text": "Method for retrieving data from a specified document field.     Parameter  Type  Properties  Description  Value example      field  String  Mandatory  Field name  \"name\"     Example", 
            "title": ".getField(field)"
        }, 
        {
            "location": "/Java/Document/#final-document-document-new-documentorderscollection-string-orderid-documentgetfieldorderid", 
            "text": "", 
            "title": "final Document document = new Document(\u201cordersCollection\u201d);"
        }, 
        {
            "location": "/Java/Document/#updatedocument", 
            "text": "Method for updating the document using Update class.", 
            "title": ".updateDocument()"
        }, 
        {
            "location": "/Java/Document/#uploadfilefieldname-filename-contenttouploadinbase64-callback", 
            "text": "File upload method     Parameter  Type  Properties  Description  Value example      fieldName  String  Mandatory  Field name  \"attachment\"    fileName  String  Mandatory  Filename with extension  \"file.txt\"    contentToUploadInBase64  String  Mandatory  File content in base64 encoded format  \"VEhJUyBJUyBGSUxFLUUtRS1FLUUtRS1FIQ==\"    callback  CallbackUploadFile  Mandatory  Callback for the request being executed.      Example    final   Document   document   =   new   Document ( \u201c ordersCollection \u201d );  document . getDocumentById ( nV0p50CDKq ,   new   CallbackFindDocument ()   { \n             @Override \n             public   void   onDocumentFound ( DocumentInfo   documentInfo )   { \n             //document found and we can upload document in this file \n\n                 document . uploadFile ( file_field ,   any_filename.txt ,  \n             Base64 . encodeToString ( hello world . getBytes (),   Base64 . DEFAULT ),   new   CallbackUploadFile ()   { \n\n               @Override \n                     public   void   onDocumentUploaded ()   { \n                         //document upload succeed \n                     } \n\n\n                     @Override \n                     public   void   onDocumentUploadFailed ( String   errorCode ,   String   errorMessage )   { \n                         //document upload failed \n                     } \n                 }); \n             } \n\n\n             @Override \n             public   void   onDocumentNotFound ( String   errorCode ,   String   errorMessage )   { \n                 //document not found \n             } \n         });", 
            "title": ".uploadFile(fieldName, fileName, contentToUploadInBase64, callback)"
        }, 
        {
            "location": "/Java/Document/#getfilelinkfieldname-filename", 
            "text": "Method for retreiving file link     Parameter  Type  Properties  Description  Value example      fieldName  String  Mandatory  Field name  \"attachment\"    fileName  String  Mandatory  Filename with extension  \"file.txt\"     Example    final   Document   documentWithFile   =   new   Document ( \u201c ordersCollection \u201d );  documentWithFile . getDocumentById ( nV0p50CDKq ,   new   CallbackFindDocument ()   { \n             @Override \n             public   void   onDocumentFound ( DocumentInfo   documentInfo )   { \n                     //document found. We can try to get link on file in this document \n             String   fileLink   =   documentWithFile . getFileLink ( test ,   file.txt ); \n             } \n\n\n             @Override \n             public   void   onDocumentNotFound ( String   errorCode ,   String   errorMessage )   { \n                 //document not found \n             } \n         });", 
            "title": ".getFileLink(fieldName, fileName)"
        }, 
        {
            "location": "/Java/Document/#removefilefieldname-filename-callback", 
            "text": "Method for removing the file     Parameter  Type  Properties  Description  Value example      fieldName  String  Mandatory  Collection field name  \"attachment\"    fileName  String  Mandatory  Filename with extension  \"file.txt\"    callback  CallbackDeleteFile  Mandatory  Callback for the request being executed.      Example    final   Document   document   =   new   Document ( \u201c ordersCollection \u201d );  document . getDocumentById ( nV0p50CDKq ,   new   CallbackFindDocument ()   { \n             @Override \n             public   void   onDocumentFound ( DocumentInfo   documentInfo )   { \n             //document found we can try to delete file from this doc \n\n\n                 document . removeFile ( file ,   anyname ,   new   CallbackDeleteFile ()   { \n                     @Override \n                     public   void   onDocumentDeleted ()   { \n                         //file deletion succeed \n                     } \n\n\n                     @Override \n                     public   void   onDetelionFailed ( String   errorCodes ,   String   errorMessage )   { \n                         //file deletion failed \n                     } \n                 }); \n             } \n\n\n             @Override \n             public   void   onDocumentNotFound ( String   errorCode ,   String   errorMessage )   { \n                 //document not found \n             } \n         });", 
            "title": ".removeFile(fieldName, fileName, callback)"
        }, 
        {
            "location": "/Java/Document/#removedocumentcallback", 
            "text": "Method for removing the selected document     Parameter  Type  Properties  Description  Value example      callback  CallbackRemoveDocument  Mandatory  Callback for the request being executed.      Example    final   Document   document   =   new   Document ( \u201c ordersCollection \u201d );  document . getDocumentById ( 7BOlVr1Acp ,   new   CallbackFindDocument ()   { \n             @Override \n             public   void   onDocumentFound ( DocumentInfo   documentInfo )   { \n                 //we found document in collection and can remove it \n                 document . removeDocument ( new   CallbackRemoveDocument ()   { \n                     @Override \n                     public   void   onRemoveSucceed ( ResponseRemove   responseRemove )   { \n                         //document removed \n                     } \n\n\n                     @Override \n                     public   void   onRemoveFailed ( String   errorCode ,   String   errorMessage )   { \n                         //remove operation failed \n                     } \n                 }); \n             } \n\n\n             @Override \n             public   void   onDocumentNotFound ( String   errorCode ,   String   errorMessage )   { \n                 //document wasn\u2019t found \n             } \n         });", 
            "title": ".removeDocument(callback)"
        }, 
        {
            "location": "/Java/Update/", 
            "text": "Class for multiple object update operations\n\n\n\n\nUpdate\n\n\nnew Update()\n\n\n.set(field,value)\n\n\n.push(field, value)\n\n\n.popFirst(field)\n\n\n.popLast(field)\n\n\n.pull(field, value)\n\n\n.pullAll(field, value)\n\n\n.addToSet(field, value)\n\n\n.inc(field,  increaseValue)\n\n\n.setCurrentDate(field)\n\n\n.mul(field, value)\n\n\n.min(field, valueToCompare)\n\n\n.max(field, valueToCompare)\n\n\n.getUpdateInfo()\n\n\n\n\n\n\n\n\n\n\n\n\nnew Update()\n\n\nUpdate() constructor\n\n\nUpdate\n  \n=\n \nnew\n \nUpdate\n();\n\n\n\n\n\n\nYou can work with the methods of Update class using Document's .updateDocument method\n\n\nDocument\n \ndocument\n \n=\n \nnew\n \nDocument\n(\nordersCollection\n);\n\n\n//document.getDocumentById(...);\n\n\n//document.updateDocument();\n\n\n\n\n\n\n\n\n\n\n.set(field,value)\n\n\nMethod for setting data to document's field\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\nField name to update\n\n\n\"orderNumber\"\n\n\n\n\n\n\nvalue\n\n\nObject\n\n\nMandatory\n\n\nNew field value\n\n\n22\n\n\n\n\n\n\n\n\nExample\n\n\nfinal\n \nDocument\n \ndocument\n \n=\n \nnew\n \nDocument\n(\n\u201c\nordersCollection\n\u201d\n);\n\n\ndocument\n.\ngetDocumentById\n(\nKH3JCojAyT\n,\n \nnew\n \nCallbackFindDocument\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentFound\n(\nDocumentInfo\n \ndocumentInfo\n)\n \n{\n\n                \n//document found, we can update it\n\n\n                \ndocument\n.\nupdateDocument\n()\n\n                        \n.\nset\n(\nexampleField\n,\n \nrandom Any1\n)\n\n                        \n.\nset\n(\nanotherExampleField\n,\n \nrandom Any2\n);\n\n\n\n                \ndocument\n.\nsaveDocument\n(\nnew\n \nCallbackDocumentSaved\n()\n \n{\n\n                    \n@Override\n\n                    \npublic\n \nvoid\n \nonDocumentSaved\n()\n \n{\n\n                        \n//document updated successfull\n\n                    \n}\n\n\n\n                    \n@Override\n\n                    \npublic\n \nvoid\n \nonDocumentSaveFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                        \n//document update failed\n\n                \n//check update info\n\n                \n//see errorCode and errorMessage\n\n                    \n}\n\n                \n});\n\n            \n}\n\n\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentNotFound\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \n//document not found\n\n            \n}\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.push(field, value)\n\n\nMethod for adding an element to an array field\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\nName of the field whose value should be updated\n\n\n\"orderNumber\"\n\n\n\n\n\n\nvalue\n\n\nObject\n\n\nMandatory\n\n\nValue of the new array element\n\n\n-42.42\n\n\n\n\n\n\n\n\nExample\n\n\nfinal\n \nDocument\n \ndocument\n \n=\n \nnew\n \nDocument\n(\n\u201c\nordersCollection\n\u201d\n);\n\n\ndocument\n.\ngetDocumentById\n(\nKH3JCojAyT\n,\n \nnew\n \nCallbackFindDocument\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentFound\n(\nDocumentInfo\n \ndocumentInfo\n)\n \n{\n\n                \n//document found, we can update it\n\n\n                \ndocument\n.\nupdateDocument\n().\npush\n(\narray1\n,\n \n1\n);\n\n\n\n                \ndocument\n.\nsaveDocument\n(\nnew\n \nCallbackDocumentSaved\n()\n \n{\n\n                    \n@Override\n\n                    \npublic\n \nvoid\n \nonDocumentSaved\n()\n \n{\n\n                        \n//document updated successful\n\n                    \n}\n\n\n                    \n@Override\n\n                    \npublic\n \nvoid\n \nonDocumentSaveFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                        \n//document update failed\n\n                \n//check update info\n\n                \n//see errorCode and errorMessage\n\n                    \n}\n\n                \n});\n\n            \n}\n\n\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentNotFound\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \n//document not found\n\n            \n}\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.popFirst(field)\n\n\nMethod for removing the first array element of the field\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\nName of the field whose value should be updated\n\n\n\"orderNumber\"\n\n\n\n\n\n\n\n\nExample\n\n\nfinal\n \nDocument\n \ndocument\n \n=\n \nnew\n \nDocument\n(\n\u201c\nordersCollection\n\u201d\n);\n\n\ndocument\n.\ngetDocumentById\n(\nKH3JCojAyT\n,\n \nnew\n \nCallbackFindDocument\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentFound\n(\nDocumentInfo\n \ndocumentInfo\n)\n \n{\n\n                \n//document found, we can update it\n\n\n                \ndocument\n.\nupdateDocument\n().\npopFirst\n(\narray1\n);\n\n\n\n                \ndocument\n.\nsaveDocument\n(\nnew\n \nCallbackDocumentSaved\n()\n \n{\n\n                    \n@Override\n\n                    \npublic\n \nvoid\n \nonDocumentSaved\n()\n \n{\n\n                        \n//document updated successful\n\n                    \n}\n\n\n\n                    \n@Override\n\n                    \npublic\n \nvoid\n \nonDocumentSaveFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                        \n//document update failed\n\n                \n//check update info\n\n                \n//see errorCode and errorMessage\n\n                    \n}\n\n                \n});\n\n            \n}\n\n\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentNotFound\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \n//document not found\n\n            \n}\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.popLast(field)\n\n\nMethod for removing the last array element of the field\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\nName of the field whose value should be updated\n\n\n\"orderNumber\"\n\n\n\n\n\n\n\n\nExample\n\n\nfinal\n \nDocument\n \ndocument\n \n=\n \nnew\n \nDocument\n(\n\u201c\nordersCollection\n\u201d\n);\n\n\ndocument\n.\ngetDocumentById\n(\nKH3JCojAyT\n,\n \nnew\n \nCallbackFindDocument\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentFound\n(\nDocumentInfo\n \ndocumentInfo\n)\n \n{\n\n                \n//document found, we can update it\n\n\n                \ndocument\n.\nupdateDocument\n().\npopLast\n(\narray1\n);\n\n\n\n                \ndocument\n.\nsaveDocument\n(\nnew\n \nCallbackDocumentSaved\n()\n \n{\n\n                    \n@Override\n\n                    \npublic\n \nvoid\n \nonDocumentSaved\n()\n \n{\n\n                        \n//document updated successful\n\n                    \n}\n\n\n\n                    \n@Override\n\n                    \npublic\n \nvoid\n \nonDocumentSaveFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                        \n//document update failed\n\n                \n//check update info\n\n                \n//see errorCode and errorMessage\n\n                    \n}\n\n                \n});\n\n            \n}\n\n\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentNotFound\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \n//document not found\n\n            \n}\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.pull(field, value)\n\n\nMethod for removing all array elements whose values are the same as the specified one.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\nName of the field whose value should be updated\n\n\n\"orderNumber\"\n\n\n\n\n\n\nvalue\n\n\nObject\n\n\nMandatory\n\n\nValue of the element to be removed\n\n\n\"delete me\"\n\n\n\n\n\n\n\n\n\n\nNote\n\n\nIf there are many elements with specified value, this method will remove all of them.\n\n\n\n\nExample\n\n\nfinal\n \nDocument\n \ndocument\n \n=\n \nnew\n \nDocument\n(\n\u201c\nordersCollection\n\u201d\n);\n\n\ndocument\n.\ngetDocumentById\n(\nKH3JCojAyT\n,\n \nnew\n \nCallbackFindDocument\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentFound\n(\nDocumentInfo\n \ndocumentInfo\n)\n \n{\n\n                \n//document found, we can update it\n\n\n                \ndocument\n.\nupdateDocument\n().\npull\n(\narray2\n,\n \n3\n);\n\n\n                \ndocument\n.\nsaveDocument\n(\nnew\n \nCallbackDocumentSaved\n()\n \n{\n\n                    \n@Override\n\n                    \npublic\n \nvoid\n \nonDocumentSaved\n()\n \n{\n\n                        \n//document updated successful\n\n                    \n}\n\n\n                    \n@Override\n\n                    \npublic\n \nvoid\n \nonDocumentSaveFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                        \n//document update failed\n\n                \n//check update info\n\n                \n//see errorCode and errorMessage\n\n                    \n}\n\n                \n});\n\n            \n}\n\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentNotFound\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \n//document not found\n\n            \n}\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.pullAll(field, value)\n\n\nMethod for removing all array elements whose values are the same as one of the specified values.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\n\u0418Name of the field whose value should be updated\n\n\n\"orderNumber\"\n\n\n\n\n\n\nvalue\n\n\nList\nObject\n\n\nMandatory\n\n\nArray of values to be removed\n\n\nSee the example below\n\n\n\n\n\n\n\n\nExample\n\n\nfinal\n \nDocument\n \ndocument\n \n=\n \nnew\n \nDocument\n(\n\u201c\nordersCollection\n\u201d\n);\n\n\ndocument\n.\ngetDocumentById\n(\nKH3JCojAyT\n,\n \nnew\n \nCallbackFindDocument\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentFound\n(\nDocumentInfo\n \ndocumentInfo\n)\n \n{\n\n                \n//document found, we can update it\n\n\n                \n//create array of elements to delete from array\n\n            \nList\nObject\n \nobjects\n \n=\n \nnew\n \nArrayList\n();\n\n                \nobjects\n.\nadd\n(\n1\n);\n\n                \nobjects\n.\nadd\n(\n2\n);\n\n            \nobjects\n.\nadd\n(\n3\n);\n\n\n                \ndocument\n.\nupdateDocument\n().\npullAll\n(\narray2\n,\n \nobjects\n);\n\n\n                \ndocument\n.\nsaveDocument\n(\nnew\n \nCallbackDocumentSaved\n()\n \n{\n\n                    \n@Override\n\n                    \npublic\n \nvoid\n \nonDocumentSaved\n()\n \n{\n\n                        \n//document updated successful\n\n                    \n}\n\n\n                    \n@Override\n\n                    \npublic\n \nvoid\n \nonDocumentSaveFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                        \n//document update failed\n\n                \n//check update info\n\n                \n//see errorCode and errorMessage\n\n                    \n}\n\n                \n});\n\n            \n}\n\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentNotFound\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \n//document not found\n\n            \n}\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.addToSet(field, value)\n\n\nMethod for adding an element to an array only if there are no elements with the same name in the array.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\nName of the field whose value should be updated\n\n\n\"orderNumber\"\n\n\n\n\n\n\nvalue\n\n\nList\nObject\n\n\nMandatory\n\n\nValue of the new array element\n\n\nSee the example below\n\n\n\n\n\n\n\n\nExample\n\n\nfinal\n \nDocument\n \ndocument\n \n=\n \nnew\n \nDocument\n(\n\u201c\nordersCollection\n\u201d\n);\n\n\ndocument\n.\ngetDocumentById\n(\nKH3JCojAyT\n,\n \nnew\n \nCallbackFindDocument\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentFound\n(\nDocumentInfo\n \ndocumentInfo\n)\n \n{\n\n                \n//document found, we can update it\n\n\n                \ndocument\n.\nupdateDocument\n().\naddToSet\n(\narray4\n,\n \n7\n);\n\n\n                \ndocument\n.\nsaveDocument\n(\nnew\n \nCallbackDocumentSaved\n()\n \n{\n\n                    \n@Override\n\n                    \npublic\n \nvoid\n \nonDocumentSaved\n()\n \n{\n\n                        \n//document updated successful\n\n                    \n}\n\n\n                    \n@Override\n\n                    \npublic\n \nvoid\n \nonDocumentSaveFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                        \n//document update failed\n\n                \n//check update info\n\n                \n//see errorCode and errorMessage\n\n                    \n}\n\n                \n});\n\n            \n}\n\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentNotFound\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \n//document not found\n\n            \n}\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.inc(field,  increaseValue)\n\n\nThe method increments the numeric of date field value by a defined number of date\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\nName of the field whose value should be updated\n\n\n\"counter\"\n\n\n\n\n\n\nvalue\n\n\nInteger / Double / Date\n\n\nMandatory\n\n\nIncrement step\n\n\n-2.2\n\n\n\n\n\n\n\n\nExample\n\n\nfinal\n \nDocument\n \ndocument\n \n=\n \nnew\n \nDocument\n(\n\u201c\nordersCollection\n\u201d\n);\n\n\ndocument\n.\ngetDocumentById\n(\nKH3JCojAyT\n,\n \nnew\n \nCallbackFindDocument\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentFound\n(\nDocumentInfo\n \ndocumentInfo\n)\n \n{\n\n                \n//document found, we can update it\n\n\n                \ndocument\n.\nupdateDocument\n().\ninc\n(\nnumberField\n,\n \n2\n);\n\n            \ndocument\n.\nupdateDocument\n().\ninc\n(\nanotherNumberField\n,\n \n-\n10\n);\n\n\n                \ndocument\n.\nsaveDocument\n(\nnew\n \nCallbackDocumentSaved\n()\n \n{\n\n                    \n@Override\n\n                    \npublic\n \nvoid\n \nonDocumentSaved\n()\n \n{\n\n                        \n//document updated successful\n\n                    \n}\n\n\n                    \n@Override\n\n                    \npublic\n \nvoid\n \nonDocumentSaveFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                        \n//document update failed\n\n                \n//check update info\n\n                \n//see errorCode and errorMessage\n\n                    \n}\n\n                \n});\n\n            \n}\n\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentNotFound\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \n//document not found\n\n            \n}\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.setCurrentDate(field)\n\n\nSets the current time as the field's value\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\nName of the field whose value should be updated\n\n\n\"registerDate\"\n\n\n\n\n\n\n\n\nExample\n\n\nfinal\n \nDocument\n \ndocument\n \n=\n \nnew\n \nDocument\n(\n\u201c\nordersCollection\n\u201d\n);\n\n\ndocument\n.\ngetDocumentById\n(\nKH3JCojAyT\n,\n \nnew\n \nCallbackFindDocument\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentFound\n(\nDocumentInfo\n \ndocumentInfo\n)\n \n{\n\n                \n//document found, we can update it\n\n\n                \ndocument\n.\nupdateDocument\n().\nsetCurrentDate\n(\ndate1\n);\n\n\n                \ndocument\n.\nsaveDocument\n(\nnew\n \nCallbackDocumentSaved\n()\n \n{\n\n                    \n@Override\n\n                    \npublic\n \nvoid\n \nonDocumentSaved\n()\n \n{\n\n                        \n//document updated successful\n\n                    \n}\n\n\n                    \n@Override\n\n                    \npublic\n \nvoid\n \nonDocumentSaveFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                        \n//document update failed\n\n                \n//check update info\n\n                \n//see errorCode and errorMessage\n\n                    \n}\n\n                \n});\n\n            \n}\n\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentNotFound\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \n//document not found\n\n            \n}\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.mul(field, value)\n\n\nThe method multiplies the numeric field value by a defined number\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\nName of the field whose value should be updated\n\n\n\"counter\"\n\n\n\n\n\n\nvalue\n\n\nInteger / Double\n\n\nMandatory\n\n\nMultiplier\n\n\n-2.2\n\n\n\n\n\n\n\n\nExample\n\n\nfinal\n \nDocument\n \ndocument\n \n=\n \nnew\n \nDocument\n(\n\u201c\nordersCollection\n\u201d\n);\n\n\ndocument\n.\ngetDocumentById\n(\nKH3JCojAyT\n,\n \nnew\n \nCallbackFindDocument\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentFound\n(\nDocumentInfo\n \ndocumentInfo\n)\n \n{\n\n                \n//document found, we can update it\n\n\n                \ndocument\n.\nupdateDocument\n().\nmul\n(\nnumberForMulTest\n,\n \n3\n);\n\n\n                \ndocument\n.\nsaveDocument\n(\nnew\n \nCallbackDocumentSaved\n()\n \n{\n\n                    \n@Override\n\n                    \npublic\n \nvoid\n \nonDocumentSaved\n()\n \n{\n\n                        \n//document updated successful\n\n                    \n}\n\n\n                    \n@Override\n\n                    \npublic\n \nvoid\n \nonDocumentSaveFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                        \n//document update failed\n\n                \n//check update info\n\n                \n//see errorCode and errorMessage\n\n                    \n}\n\n                \n});\n\n            \n}\n\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentNotFound\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \n//document not found\n\n            \n}\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.min(field, valueToCompare)\n\n\nThe method updates the numeric field value only if the new value is less than the current field value\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\nName of the field whose value should be updated\n\n\n\"price\"\n\n\n\n\n\n\nvalueToCompare\n\n\nInteger / Double\n\n\nMandatory\n\n\nNew value to be compared\n\n\n43\n\n\n\n\n\n\n\n\nExample\n\n\nfinal\n \nDocument\n \ndocument\n \n=\n \nnew\n \nDocument\n(\n\u201c\nordersCollection\n\u201d\n);\n\n\ndocument\n.\ngetDocumentById\n(\nKH3JCojAyT\n,\n \nnew\n \nCallbackFindDocument\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentFound\n(\nDocumentInfo\n \ndocumentInfo\n)\n \n{\n\n                \n//document found, we can update it\n\n\n                \ndocument\n.\nupdateDocument\n().\nmin\n(\nnumber2\n,\n \n10\n);\n\n\n                \ndocument\n.\nsaveDocument\n(\nnew\n \nCallbackDocumentSaved\n()\n \n{\n\n                    \n@Override\n\n                    \npublic\n \nvoid\n \nonDocumentSaved\n()\n \n{\n\n                        \n//document updated successfull\n\n                    \n}\n\n\n                    \n@Override\n\n                    \npublic\n \nvoid\n \nonDocumentSaveFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                        \n//document update failed\n\n                \n//check update info\n\n                \n//see errorCode and errorMessage\n\n                    \n}\n\n                \n});\n\n            \n}\n\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentNotFound\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \n//document not found\n\n            \n}\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.max(field, valueToCompare)\n\n\nThe method updates the numeric field value only if the new value is greater than the current field value\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\nName of the field whose value should be updated\n\n\n\"price\"\n\n\n\n\n\n\nvalueToCompare\n\n\nInteger / Double\n\n\nMandatory\n\n\nNew value to be compared\n\n\n43\n\n\n\n\n\n\n\n\nExample\n\n\nfinal\n \nDocument\n \ndocument\n \n=\n \nnew\n \nDocument\n(\n\u201c\nordersCollection\n\u201d\n);\n\n\ndocument\n.\ngetDocumentById\n(\nKH3JCojAyT\n,\n \nnew\n \nCallbackFindDocument\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentFound\n(\nDocumentInfo\n \ndocumentInfo\n)\n \n{\n\n                \n//document found, we can update it\n\n\n                \ndocument\n.\nupdateDocument\n().\nmax\n(\nnumber2\n,\n \n10\n);\n\n\n                \ndocument\n.\nsaveDocument\n(\nnew\n \nCallbackDocumentSaved\n()\n \n{\n\n                    \n@Override\n\n                    \npublic\n \nvoid\n \nonDocumentSaved\n()\n \n{\n\n                        \n//document updated successfull\n\n                    \n}\n\n\n                    \n@Override\n\n                    \npublic\n \nvoid\n \nonDocumentSaveFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                        \n//document update failed\n\n                \n//check update info\n\n                \n//see errorCode and errorMessage\n\n                    \n}\n\n                \n});\n\n            \n}\n\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentNotFound\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \n//document not found\n\n            \n}\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.getUpdateInfo()\n\n\nMethod for retrieving Update conditions info", 
            "title": "Update"
        }, 
        {
            "location": "/Java/Update/#new-update", 
            "text": "Update() constructor  Update    =   new   Update ();   You can work with the methods of Update class using Document's .updateDocument method  Document   document   =   new   Document ( ordersCollection );  //document.getDocumentById(...);  //document.updateDocument();", 
            "title": "new Update()"
        }, 
        {
            "location": "/Java/Update/#setfieldvalue", 
            "text": "Method for setting data to document's field     Parameter  Type  Properties  Description  Value example      field  String  Mandatory  Field name to update  \"orderNumber\"    value  Object  Mandatory  New field value  22     Example  final   Document   document   =   new   Document ( \u201c ordersCollection \u201d );  document . getDocumentById ( KH3JCojAyT ,   new   CallbackFindDocument ()   { \n             @Override \n             public   void   onDocumentFound ( DocumentInfo   documentInfo )   { \n                 //document found, we can update it \n\n                 document . updateDocument () \n                         . set ( exampleField ,   random Any1 ) \n                         . set ( anotherExampleField ,   random Any2 ); \n\n\n                 document . saveDocument ( new   CallbackDocumentSaved ()   { \n                     @Override \n                     public   void   onDocumentSaved ()   { \n                         //document updated successfull \n                     } \n\n\n                     @Override \n                     public   void   onDocumentSaveFailed ( String   errorCode ,   String   errorMessage )   { \n                         //document update failed \n                 //check update info \n                 //see errorCode and errorMessage \n                     } \n                 }); \n             } \n\n\n             @Override \n             public   void   onDocumentNotFound ( String   errorCode ,   String   errorMessage )   { \n                 //document not found \n             } \n         });", 
            "title": ".set(field,value)"
        }, 
        {
            "location": "/Java/Update/#pushfield-value", 
            "text": "Method for adding an element to an array field     Parameter  Type  Properties  Description  Value example      field  String  Mandatory  Name of the field whose value should be updated  \"orderNumber\"    value  Object  Mandatory  Value of the new array element  -42.42     Example  final   Document   document   =   new   Document ( \u201c ordersCollection \u201d );  document . getDocumentById ( KH3JCojAyT ,   new   CallbackFindDocument ()   { \n             @Override \n             public   void   onDocumentFound ( DocumentInfo   documentInfo )   { \n                 //document found, we can update it \n\n                 document . updateDocument (). push ( array1 ,   1 ); \n\n\n                 document . saveDocument ( new   CallbackDocumentSaved ()   { \n                     @Override \n                     public   void   onDocumentSaved ()   { \n                         //document updated successful \n                     } \n\n                     @Override \n                     public   void   onDocumentSaveFailed ( String   errorCode ,   String   errorMessage )   { \n                         //document update failed \n                 //check update info \n                 //see errorCode and errorMessage \n                     } \n                 }); \n             } \n\n\n             @Override \n             public   void   onDocumentNotFound ( String   errorCode ,   String   errorMessage )   { \n                 //document not found \n             } \n         });", 
            "title": ".push(field, value)"
        }, 
        {
            "location": "/Java/Update/#popfirstfield", 
            "text": "Method for removing the first array element of the field     Parameter  Type  Properties  Description  Value example      field  String  Mandatory  Name of the field whose value should be updated  \"orderNumber\"     Example  final   Document   document   =   new   Document ( \u201c ordersCollection \u201d );  document . getDocumentById ( KH3JCojAyT ,   new   CallbackFindDocument ()   { \n             @Override \n             public   void   onDocumentFound ( DocumentInfo   documentInfo )   { \n                 //document found, we can update it \n\n                 document . updateDocument (). popFirst ( array1 ); \n\n\n                 document . saveDocument ( new   CallbackDocumentSaved ()   { \n                     @Override \n                     public   void   onDocumentSaved ()   { \n                         //document updated successful \n                     } \n\n\n                     @Override \n                     public   void   onDocumentSaveFailed ( String   errorCode ,   String   errorMessage )   { \n                         //document update failed \n                 //check update info \n                 //see errorCode and errorMessage \n                     } \n                 }); \n             } \n\n\n             @Override \n             public   void   onDocumentNotFound ( String   errorCode ,   String   errorMessage )   { \n                 //document not found \n             } \n         });", 
            "title": ".popFirst(field)"
        }, 
        {
            "location": "/Java/Update/#poplastfield", 
            "text": "Method for removing the last array element of the field     Parameter  Type  Properties  Description  Value example      field  String  Mandatory  Name of the field whose value should be updated  \"orderNumber\"     Example  final   Document   document   =   new   Document ( \u201c ordersCollection \u201d );  document . getDocumentById ( KH3JCojAyT ,   new   CallbackFindDocument ()   { \n             @Override \n             public   void   onDocumentFound ( DocumentInfo   documentInfo )   { \n                 //document found, we can update it \n\n                 document . updateDocument (). popLast ( array1 ); \n\n\n                 document . saveDocument ( new   CallbackDocumentSaved ()   { \n                     @Override \n                     public   void   onDocumentSaved ()   { \n                         //document updated successful \n                     } \n\n\n                     @Override \n                     public   void   onDocumentSaveFailed ( String   errorCode ,   String   errorMessage )   { \n                         //document update failed \n                 //check update info \n                 //see errorCode and errorMessage \n                     } \n                 }); \n             } \n\n\n             @Override \n             public   void   onDocumentNotFound ( String   errorCode ,   String   errorMessage )   { \n                 //document not found \n             } \n         });", 
            "title": ".popLast(field)"
        }, 
        {
            "location": "/Java/Update/#pullfield-value", 
            "text": "Method for removing all array elements whose values are the same as the specified one.     Parameter  Type  Properties  Description  Value example      field  String  Mandatory  Name of the field whose value should be updated  \"orderNumber\"    value  Object  Mandatory  Value of the element to be removed  \"delete me\"      Note  If there are many elements with specified value, this method will remove all of them.   Example  final   Document   document   =   new   Document ( \u201c ordersCollection \u201d );  document . getDocumentById ( KH3JCojAyT ,   new   CallbackFindDocument ()   { \n             @Override \n             public   void   onDocumentFound ( DocumentInfo   documentInfo )   { \n                 //document found, we can update it \n\n                 document . updateDocument (). pull ( array2 ,   3 ); \n\n                 document . saveDocument ( new   CallbackDocumentSaved ()   { \n                     @Override \n                     public   void   onDocumentSaved ()   { \n                         //document updated successful \n                     } \n\n                     @Override \n                     public   void   onDocumentSaveFailed ( String   errorCode ,   String   errorMessage )   { \n                         //document update failed \n                 //check update info \n                 //see errorCode and errorMessage \n                     } \n                 }); \n             } \n\n             @Override \n             public   void   onDocumentNotFound ( String   errorCode ,   String   errorMessage )   { \n                 //document not found \n             } \n         });", 
            "title": ".pull(field, value)"
        }, 
        {
            "location": "/Java/Update/#pullallfield-value", 
            "text": "Method for removing all array elements whose values are the same as one of the specified values.     Parameter  Type  Properties  Description  Value example      field  String  Mandatory  \u0418Name of the field whose value should be updated  \"orderNumber\"    value  List Object  Mandatory  Array of values to be removed  See the example below     Example  final   Document   document   =   new   Document ( \u201c ordersCollection \u201d );  document . getDocumentById ( KH3JCojAyT ,   new   CallbackFindDocument ()   { \n             @Override \n             public   void   onDocumentFound ( DocumentInfo   documentInfo )   { \n                 //document found, we can update it \n\n                 //create array of elements to delete from array \n             List Object   objects   =   new   ArrayList (); \n                 objects . add ( 1 ); \n                 objects . add ( 2 ); \n             objects . add ( 3 ); \n\n                 document . updateDocument (). pullAll ( array2 ,   objects ); \n\n                 document . saveDocument ( new   CallbackDocumentSaved ()   { \n                     @Override \n                     public   void   onDocumentSaved ()   { \n                         //document updated successful \n                     } \n\n                     @Override \n                     public   void   onDocumentSaveFailed ( String   errorCode ,   String   errorMessage )   { \n                         //document update failed \n                 //check update info \n                 //see errorCode and errorMessage \n                     } \n                 }); \n             } \n\n             @Override \n             public   void   onDocumentNotFound ( String   errorCode ,   String   errorMessage )   { \n                 //document not found \n             } \n         });", 
            "title": ".pullAll(field, value)"
        }, 
        {
            "location": "/Java/Update/#addtosetfield-value", 
            "text": "Method for adding an element to an array only if there are no elements with the same name in the array.     Parameter  Type  Properties  Description  Value example      field  String  Mandatory  Name of the field whose value should be updated  \"orderNumber\"    value  List Object  Mandatory  Value of the new array element  See the example below     Example  final   Document   document   =   new   Document ( \u201c ordersCollection \u201d );  document . getDocumentById ( KH3JCojAyT ,   new   CallbackFindDocument ()   { \n             @Override \n             public   void   onDocumentFound ( DocumentInfo   documentInfo )   { \n                 //document found, we can update it \n\n                 document . updateDocument (). addToSet ( array4 ,   7 ); \n\n                 document . saveDocument ( new   CallbackDocumentSaved ()   { \n                     @Override \n                     public   void   onDocumentSaved ()   { \n                         //document updated successful \n                     } \n\n                     @Override \n                     public   void   onDocumentSaveFailed ( String   errorCode ,   String   errorMessage )   { \n                         //document update failed \n                 //check update info \n                 //see errorCode and errorMessage \n                     } \n                 }); \n             } \n\n             @Override \n             public   void   onDocumentNotFound ( String   errorCode ,   String   errorMessage )   { \n                 //document not found \n             } \n         });", 
            "title": ".addToSet(field, value)"
        }, 
        {
            "location": "/Java/Update/#incfield-increasevalue", 
            "text": "The method increments the numeric of date field value by a defined number of date     Parameter  Type  Properties  Description  Value example      field  String  Mandatory  Name of the field whose value should be updated  \"counter\"    value  Integer / Double / Date  Mandatory  Increment step  -2.2     Example  final   Document   document   =   new   Document ( \u201c ordersCollection \u201d );  document . getDocumentById ( KH3JCojAyT ,   new   CallbackFindDocument ()   { \n             @Override \n             public   void   onDocumentFound ( DocumentInfo   documentInfo )   { \n                 //document found, we can update it \n\n                 document . updateDocument (). inc ( numberField ,   2 ); \n             document . updateDocument (). inc ( anotherNumberField ,   - 10 ); \n\n                 document . saveDocument ( new   CallbackDocumentSaved ()   { \n                     @Override \n                     public   void   onDocumentSaved ()   { \n                         //document updated successful \n                     } \n\n                     @Override \n                     public   void   onDocumentSaveFailed ( String   errorCode ,   String   errorMessage )   { \n                         //document update failed \n                 //check update info \n                 //see errorCode and errorMessage \n                     } \n                 }); \n             } \n\n             @Override \n             public   void   onDocumentNotFound ( String   errorCode ,   String   errorMessage )   { \n                 //document not found \n             } \n         });", 
            "title": ".inc(field,  increaseValue)"
        }, 
        {
            "location": "/Java/Update/#setcurrentdatefield", 
            "text": "Sets the current time as the field's value     Parameter  Type  Properties  Description  Value example      field  String  Mandatory  Name of the field whose value should be updated  \"registerDate\"     Example  final   Document   document   =   new   Document ( \u201c ordersCollection \u201d );  document . getDocumentById ( KH3JCojAyT ,   new   CallbackFindDocument ()   { \n             @Override \n             public   void   onDocumentFound ( DocumentInfo   documentInfo )   { \n                 //document found, we can update it \n\n                 document . updateDocument (). setCurrentDate ( date1 ); \n\n                 document . saveDocument ( new   CallbackDocumentSaved ()   { \n                     @Override \n                     public   void   onDocumentSaved ()   { \n                         //document updated successful \n                     } \n\n                     @Override \n                     public   void   onDocumentSaveFailed ( String   errorCode ,   String   errorMessage )   { \n                         //document update failed \n                 //check update info \n                 //see errorCode and errorMessage \n                     } \n                 }); \n             } \n\n             @Override \n             public   void   onDocumentNotFound ( String   errorCode ,   String   errorMessage )   { \n                 //document not found \n             } \n         });", 
            "title": ".setCurrentDate(field)"
        }, 
        {
            "location": "/Java/Update/#mulfield-value", 
            "text": "The method multiplies the numeric field value by a defined number     Parameter  Type  Properties  Description  Value example      field  String  Mandatory  Name of the field whose value should be updated  \"counter\"    value  Integer / Double  Mandatory  Multiplier  -2.2     Example  final   Document   document   =   new   Document ( \u201c ordersCollection \u201d );  document . getDocumentById ( KH3JCojAyT ,   new   CallbackFindDocument ()   { \n             @Override \n             public   void   onDocumentFound ( DocumentInfo   documentInfo )   { \n                 //document found, we can update it \n\n                 document . updateDocument (). mul ( numberForMulTest ,   3 ); \n\n                 document . saveDocument ( new   CallbackDocumentSaved ()   { \n                     @Override \n                     public   void   onDocumentSaved ()   { \n                         //document updated successful \n                     } \n\n                     @Override \n                     public   void   onDocumentSaveFailed ( String   errorCode ,   String   errorMessage )   { \n                         //document update failed \n                 //check update info \n                 //see errorCode and errorMessage \n                     } \n                 }); \n             } \n\n             @Override \n             public   void   onDocumentNotFound ( String   errorCode ,   String   errorMessage )   { \n                 //document not found \n             } \n         });", 
            "title": ".mul(field, value)"
        }, 
        {
            "location": "/Java/Update/#minfield-valuetocompare", 
            "text": "The method updates the numeric field value only if the new value is less than the current field value     Parameter  Type  Properties  Description  Value example      field  String  Mandatory  Name of the field whose value should be updated  \"price\"    valueToCompare  Integer / Double  Mandatory  New value to be compared  43     Example  final   Document   document   =   new   Document ( \u201c ordersCollection \u201d );  document . getDocumentById ( KH3JCojAyT ,   new   CallbackFindDocument ()   { \n             @Override \n             public   void   onDocumentFound ( DocumentInfo   documentInfo )   { \n                 //document found, we can update it \n\n                 document . updateDocument (). min ( number2 ,   10 ); \n\n                 document . saveDocument ( new   CallbackDocumentSaved ()   { \n                     @Override \n                     public   void   onDocumentSaved ()   { \n                         //document updated successfull \n                     } \n\n                     @Override \n                     public   void   onDocumentSaveFailed ( String   errorCode ,   String   errorMessage )   { \n                         //document update failed \n                 //check update info \n                 //see errorCode and errorMessage \n                     } \n                 }); \n             } \n\n             @Override \n             public   void   onDocumentNotFound ( String   errorCode ,   String   errorMessage )   { \n                 //document not found \n             } \n         });", 
            "title": ".min(field, valueToCompare)"
        }, 
        {
            "location": "/Java/Update/#maxfield-valuetocompare", 
            "text": "The method updates the numeric field value only if the new value is greater than the current field value     Parameter  Type  Properties  Description  Value example      field  String  Mandatory  Name of the field whose value should be updated  \"price\"    valueToCompare  Integer / Double  Mandatory  New value to be compared  43     Example  final   Document   document   =   new   Document ( \u201c ordersCollection \u201d );  document . getDocumentById ( KH3JCojAyT ,   new   CallbackFindDocument ()   { \n             @Override \n             public   void   onDocumentFound ( DocumentInfo   documentInfo )   { \n                 //document found, we can update it \n\n                 document . updateDocument (). max ( number2 ,   10 ); \n\n                 document . saveDocument ( new   CallbackDocumentSaved ()   { \n                     @Override \n                     public   void   onDocumentSaved ()   { \n                         //document updated successfull \n                     } \n\n                     @Override \n                     public   void   onDocumentSaveFailed ( String   errorCode ,   String   errorMessage )   { \n                         //document update failed \n                 //check update info \n                 //see errorCode and errorMessage \n                     } \n                 }); \n             } \n\n             @Override \n             public   void   onDocumentNotFound ( String   errorCode ,   String   errorMessage )   { \n                 //document not found \n             } \n         });", 
            "title": ".max(field, valueToCompare)"
        }, 
        {
            "location": "/Java/Update/#getupdateinfo", 
            "text": "Method for retrieving Update conditions info", 
            "title": ".getUpdateInfo()"
        }, 
        {
            "location": "/Java/User/", 
            "text": "User\n\n\nnew User(name)\n\n\n.register(username, email,  password,  documentContent,  callback)\n \n\n\n.register(username, email, password, callback)\n\n\n.login(email, password, callback)\n\n\n.logout(callback)\n\n\n\n\n\n\n\n\n\n\n\n\nnew User()\n\n\nUser initialization\n\n\nExample\n \n\nUser\n \nappUser\n \n=\n \nnew\n \nUser\n();\n\n\n\n\n\n\n\n\n\n\n.register(callback, username, email, password)\n\n\nMethod for application user registration, using associated Document\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nusername\n\n\nString\n\n\nMandatory\n\n\nUsername\n\n\n\"Jovan\"\n\n\n\n\n\n\nemail\n\n\nString\n\n\nMandatory\n\n\nUser email\n\n\n\"user@domain.zone\"\n\n\n\n\n\n\npassword\n\n\nString\n\n\nMandatory\n\n\nUser password\n\n\n\"CorrectHorseBatteryStaple\"\n\n\n\n\n\n\ndocumentContent\n\n\nDocumentInfo\n\n\nOptional\n\n\nDocument, associated with user\n\n\nSee the example below\n\n\n\n\n\n\ncallback\n\n\nCallbackRegisterUser\n\n\nMandatory\u0439\n\n\nCallback for the request being executed.\n\n\nSee the example below\n\n\n\n\n\n\n\n\nExample\n \n\n\nDocument\n \ndoc\n \n=\n \nnew\n \nDocument\n(\nusers\n);\n\n\ndoc\n.\nsetField\n(\ncity\n,\n \nMoscow\n);\n\n\ndoc\n.\nsetField\n(\nisPlaceAnyOrder\n,\n \ntrue\n);\n\n\nUser\n \nuser\n \n=\n \nnew\n \nUser\n();\n\n\nuser\n.\nregister\n(\nany_username\n,\n \nanyemail@mailinator.com\n,\n \ntest1111\n,\n \ndoc\n.\ngetDocumentContent\n(),\n \n\n    \nnew\n \nCallbackRegisterUser\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonRegisterSucceed\n()\n \n{\n\n                \n//user register succeed\n\n            \n}\n\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonRegisterFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \n//user regiser failed\n\n                \n//See errorCode and errorMessage\n\n            \n}\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.register(username, email, password, callback)\n\n\nMethod for application user registration\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nusername\n\n\nString\n\n\nMandatory\n\n\nUsername\n\n\n\"Jovan\"\n\n\n\n\n\n\nemail\n\n\nString\n\n\nMandatory\n\n\nUser email\n\n\n\"user@domain.zone\"\n\n\n\n\n\n\npassword\n\n\nString\n\n\nMandatory\n\n\nUser password\n\n\n\"CorrectHorseBatteryStaple\"\n\n\n\n\n\n\ncallback\n\n\nCallbackRegisterUser\n\n\nMandatory\n\n\nCallback for the request being executed.\n\n\nSee the example below\n\n\n\n\n\n\n\n\nExample\n \n\n\nUser\n \nuser\n \n=\n \nnew\n \nUser\n();\n\n\nuser\n.\nregister\n(\nany_username\n,\n \nanyemail@gmail.com\n,\n \ntest1111\n,\n \ndoc\n.\ngetDocumentContent\n(),\n \n    \nnew\n \nCallbackRegisterUser\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonRegisterSucceed\n()\n \n{\n\n                \n//user register succeed\n\n            \n}\n\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonRegisterFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \n//user regiser failed\n\n        \n//See errorCode and errorMessage\n\n            \n}\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.login(email, password, callback)\n\n\nMethod for application user authentication\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nemail\n\n\nString\n\n\nMandatory\n\n\nUser email\n\n\n\"user@domain.zone\"\n\n\n\n\n\n\npassword\n\n\nString\n\n\nMandatory\n\n\nUser password\n\n\n\"CorrectHorseBatteryStaple\"\n\n\n\n\n\n\ncallback\n\n\nCallbackLoginUser\n\n\n\n\nCallback for the request being executed.\n\n\nSee the example below\n\n\n\n\n\n\n\n\nExample\n \n\n\nUser\n \nuser\n \n=\n \nnew\n \nUser\n();\n\n\nuser\n.\nlogin\n(\n\u201c\nanymail\n@mail.com\n\u201d\n,\n \n\u201c\nany\n \npass\n\u201d\n,\n \nnew\n \nCallbackLoginUser\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonLoginSucceed\n(\nResponseLogin\n \nresponseLogin\n)\n \n{\n\n                 \n//login succed. See returned responseLogin instance:\n\n                 \n//which contain session id and user info   \n\n            \n}\n\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonLoginFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                 \n//Login failed. \n\n          \n//See errorCode and errorMessage\n\n            \n}\n\n        \n});\n\n\n\n\n\n\n\n\n.logout(callback)\n\n\nMethod for application user deauthentication. \n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\ncallback\n\n\nCallbackLogoutUser\n\n\nMandatory\n\n\nCallback for the request being executed.\n\n\nSee the example below\n\n\n\n\n\n\n\n\nExample\n \n\n\nUser\n \nuser\n \n=\n \nnew\n \nUser\n();\n\n\nuser\n.\nlogout\n(\nnew\n \nCallbackLogoutUser\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonLogoutSucceed\n()\n \n{\n\n                \n//user logout succeed\n\n            \n}\n\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonLogoutFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \n//user logout failed\n\n                \n//See errorCode and errorMessage\n\n            \n}\n\n        \n});", 
            "title": "User"
        }, 
        {
            "location": "/Java/User/#new-user", 
            "text": "User initialization  Example   User   appUser   =   new   User ();", 
            "title": "new User()"
        }, 
        {
            "location": "/Java/User/#registercallback-username-email-password", 
            "text": "Method for application user registration, using associated Document     Parameter  Type  Properties  Description  Value example      username  String  Mandatory  Username  \"Jovan\"    email  String  Mandatory  User email  \"user@domain.zone\"    password  String  Mandatory  User password  \"CorrectHorseBatteryStaple\"    documentContent  DocumentInfo  Optional  Document, associated with user  See the example below    callback  CallbackRegisterUser  Mandatory\u0439  Callback for the request being executed.  See the example below     Example    Document   doc   =   new   Document ( users );  doc . setField ( city ,   Moscow );  doc . setField ( isPlaceAnyOrder ,   true );  User   user   =   new   User ();  user . register ( any_username ,   anyemail@mailinator.com ,   test1111 ,   doc . getDocumentContent (),  \n\n     new   CallbackRegisterUser ()   { \n             @Override \n             public   void   onRegisterSucceed ()   { \n                 //user register succeed \n             } \n\n             @Override \n             public   void   onRegisterFailed ( String   errorCode ,   String   errorMessage )   { \n                 //user regiser failed \n                 //See errorCode and errorMessage \n             } \n         });", 
            "title": ".register(callback, username, email, password)"
        }, 
        {
            "location": "/Java/User/#registerusername-email-password-callback", 
            "text": "Method for application user registration     Parameter  Type  Properties  Description  Value example      username  String  Mandatory  Username  \"Jovan\"    email  String  Mandatory  User email  \"user@domain.zone\"    password  String  Mandatory  User password  \"CorrectHorseBatteryStaple\"    callback  CallbackRegisterUser  Mandatory  Callback for the request being executed.  See the example below     Example    User   user   =   new   User ();  user . register ( any_username ,   anyemail@gmail.com ,   test1111 ,   doc . getDocumentContent (),  \n     new   CallbackRegisterUser ()   { \n             @Override \n             public   void   onRegisterSucceed ()   { \n                 //user register succeed \n             } \n\n             @Override \n             public   void   onRegisterFailed ( String   errorCode ,   String   errorMessage )   { \n                 //user regiser failed \n         //See errorCode and errorMessage \n             } \n         });", 
            "title": ".register(username, email, password, callback)"
        }, 
        {
            "location": "/Java/User/#loginemail-password-callback", 
            "text": "Method for application user authentication     Parameter  Type  Properties  Description  Value example      email  String  Mandatory  User email  \"user@domain.zone\"    password  String  Mandatory  User password  \"CorrectHorseBatteryStaple\"    callback  CallbackLoginUser   Callback for the request being executed.  See the example below     Example", 
            "title": ".login(email, password, callback)"
        }, 
        {
            "location": "/Java/User/#user-user-new-user-userloginanymailmailcom-any-pass-new-callbackloginuser-override-public-void-onloginsucceedresponselogin-responselogin-login-succed-see-returned-responselogin-instance-which-contain-session-id-and-user-info-override-public-void-onloginfailedstring-errorcode-string-errormessage-login-failed-see-errorcode-and-errormessage", 
            "text": "", 
            "title": "User user = new User();"
        }, 
        {
            "location": "/Java/User/#logoutcallback", 
            "text": "Method for application user deauthentication.      Parameter  Type  Properties  Description  Value example      callback  CallbackLogoutUser  Mandatory  Callback for the request being executed.  See the example below     Example    User   user   =   new   User ();  user . logout ( new   CallbackLogoutUser ()   { \n             @Override \n             public   void   onLogoutSucceed ()   { \n                 //user logout succeed \n             } \n\n             @Override \n             public   void   onLogoutFailed ( String   errorCode ,   String   errorMessage )   { \n                 //user logout failed \n                 //See errorCode and errorMessage \n             } \n         });", 
            "title": ".logout(callback)"
        }, 
        {
            "location": "/Java/Query/", 
            "text": "Query\n\n\n\u041a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u0432\u0431\u043e\u0440\u043a\u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438.\n\n\n\u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435\n\n\n\n\nQuery\n\n\nnew Query(name)\n\n\n.findDocuments(callback)\n\n\n.countDocuments(callback)\n\n\n.updateDocument(update, callback)\n\n\n.removeDocument(callback)\n\n\n.setLimit(limit)\n\n\n.setSkip(skip)\n\n\n.setPage(page)\n\n\n.equalTo(field, value)\n\n\n.notEqualTo(field, value)\n\n\n.containedIn(field, values)\n\n\n.containsAll(field, values)\n\n\n.notContainedIn(field, values)\n\n\n.greaterThan(field, value)\n\n\n.greaterThenOrEqualTo(field, value)\n\n\n.lessThan(field,  value)\n\n\n.lessThanOrEqualTo(field, value)\n\n\n.exists(field)\n\n\n.doesNotExist(field)\n\n\n.contains(field, regEx, options)\n\n\n.startsWith(field, regEx, options)\n\n\n.endsWith(field, regEx, options)\n\n\n.and(field, query)\n\n\n.or(field, query)\n\n\n.raw(json)\n\n\n.reset()\n\n\n.ascending(field)\n\n\n.descending(field)\n\n\n.setFieldsForSearch(fields)\n\n\n.getQueryInfo()\n\n\n\n\n\n\n\n\n\n\n\n\nnew Query()\n\n\nInitialisation of a collection data query\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\ncollection_name\n\n\nString\n\n\n\n\nCollection name\n\n\n\"things\"\n\n\n\n\n\n\n\n\nExample\n \n\n\nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\nname\n);\n\n\n\n\n\n\n\n\n.findDocuments(callback)\n\n\nMethod for requesting a document from a collection. Returns data of the objects that match the sampling criteria. \n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\ncallback\n\n\nCallbackFindDocument\n\n\nMandatory\n\n\nCallback for the request being executed.\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\nIf no criteria are set, the first 50 objects of the collection are returned by default.\n\n\n\n\nExample\n \n\n\nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\n\u201c\nmycollection\n\u201d\n)\n\n                \n.\nequalTo\n(\nnumber3\n,\n \n10\n)\n\n                \n.\nexists\n(\nnumber2\n);\n\n\n\nquery\n.\nfindDocuments\n(\nnew\n \nCallbackFindDocument\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentFound\n(\nList\nDocumentInfo\n \ndocumentInfos\n)\n \n{\n\n                \n//found. See document list what match query\n\n            \n}\n\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentNotFound\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \n//no documents what match query\n\n            \n}\n\n        \n});\n\n\n\n\n\n\n\n\n.countDocuments(callback)\n\n\nMethod for counting objects that meet the query conditions.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\ncallback\n\n\nCallbackCountDocument\n\n\nMandatory\n\n\nCallback for the request being executed.\n\n\n\n\n\n\n\n\n\n\nExample\n \n\n\nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\n\u201c\nmycollection\n\u201d\n);\n\n        \nquery\n.\ngreaterThan\n(\nrating\n,\n \n10\n);\n\n\n        \nquery\n.\ncountDocuments\n(\nnew\n \nCallbackCountDocument\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentsCounted\n(\nResponseCount\n \nresponseCount\n)\n \n{\n\n                \n//see responseCount.getResult() to find how many documents was found.\n\n            \n}\n\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonCountFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \n//error during count\n\n            \n}\n\n        \n});\n\n\n\n\n\n\n\n\n.updateDocument(update, callback)\n\n\nMethod for updating the requested objects.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nupdate\n\n\nUpdate\n\n\nMandatory\n\n\nUpdate object\n\n\n\n\n\n\n\n\ncallback\n\n\nCallbackUpdateDocument\n\n\nMandatory\n\n\nCallback for the request being executed.\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\nThis method can update a maximum of 1000 documents in a request.\n\n\n\n\nExample\n \n\n\n \nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\n\u201c\nmycollection\n\u201d\n);\n\n        \nquery\n.\nequalTo\n(\nnumber3\n,\n \n10\n);\n\n\n        \nUpdate\n \nupdate\n \n=\n \nnew\n \nUpdate\n()\n\n                \n.\nset\n(\nnumber2\n,\n \n199\n)\n\n                \n.\nset\n(\nnumberField\n,\n \n111\n)\n\n                \n.\naddToSet\n(\narray1\n,\n \n900\n);\n\n\n        \nquery\n.\nupdateDocument\n(\nupdate\n,\n \nnew\n \nCallbackUpdateDocument\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonUpdateSucceed\n(\nResponseUpdate\n \nresponseUpdate\n)\n \n{\n\n                \n//documents updated successful\n\n            \n}\n\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonUpdateFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \n//error during update\n\n            \n}\n\n        \n});\n\n\n\n\n\n\n\n\n.removeDocument(callback)\n\n\nMethod for removing the requested documents.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\ncallback\n\n\nCallbackRemoveDocument\n\n\nMandatory\n\n\nCallback for the request being executed.\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\nThis method can remove a maximum of 1000 documents in a request.\n\n\n\n\nExample\n \n\n\nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\n\u201c\nmycollection\n\u201d\n);\n\n        \nquery\n.\nequalTo\n(\n_id\n,\n \naJfkipJags\n);\n\n\n        \nquery\n.\nremoveDocument\n(\nnew\n \nCallbackRemoveDocument\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonRemoveSucceed\n(\nResponseRemove\n \nresponseRemove\n)\n \n{\n\n                \n//succeed. See responseRemove to findout how many documents was removed\n\n            \n//and get list of removed documents\n\n            \n}\n\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonRemoveFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \n//error during remove operation\n\n            \n}\n\n        \n});\n\n\n\n\n\n\n\n\n.setLimit(limit)\n\n\nMethod for specifying a limit for the number of sampling, updating or removing documents.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nlimit\n\n\nInteger\n\n\nMandatory\n\n\nLimit\n\n\n15\n\n\n\n\n\n\n\n\n\n\nNote\n\n\nLimit defaults to 50, but anything from 1 to 100 is a valid limit.\n\n\n\n\nExample\n \n\n\nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\n\u201c\nmycollection\n\u201d\n);\n\n\nquery\n.\nsetLimit\n(\n15\n);\n\n\n//query.findDocuments(\u2026);\n\n\n\n\n\n\n\n\n.setSkip(skip)\n\n\nMethod for skipping some objects before sampling.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nskip\n\n\nInteger\n\n\nMandatory\n\n\nNumber of skipped objects\n\n\n100\n\n\n\n\n\n\n\n\nExample\n \n\n\nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\n\u201c\nmycollection\n\u201d\n);\n\n\nquery\n.\nsetSkip\n(\n12\n);\n\n\n//query.findDocuments(\u2026);\n\n\n\n\n\n\n\n\n.setPage(page)\n\n\nMethod for sampling results page by page\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\npage\n\n\nInteger\n\n\nMandatory\n\n\nPage number\n\n\n2\n\n\n\n\n\n\n\n\nExample\n \n\n\nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\n\u201c\nmycollection\n\u201d\n);\n\n\n//query.setLimit(15);\n\n\nquery\n.\nsetPage\n(\n1\n);\n\n\n//query.findDocuments(\u2026);\n\n\n\n\n\n\n\n\n.equalTo(field, value)\n\n\nMethod for retrieving all objects with the field value indicated in the condition.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\nName of the field for which a condition is defined\n\n\n\"orderNumber\"\n\n\n\n\n\n\nvalue\n\n\nObject\n\n\nMandatory\n\n\nField value\n\n\n22\n\n\n\n\n\n\n\n\nExample\n \n\n\nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\n\u201c\nmycollection\n\u201d\n);\n\n\nquery\n.\nequalTo\n(\n\u201c\norderNumber\n\u201d\n,\n \n22\n);\n\n\n//query.findDocuments(\u2026);\n\n\n\n\n\n\nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\n\u201c\nmycollection\n\u201d\n);\n\n\nquery\n.\nequalTo\n(\n\u201c\n_id\n\u201d\n,\n \n\u201c\ndasds12dskm\n\u201d\n);\n\n\n//query.findDocuments(\u2026);\n\n\n\n\n\n\n\n\n\n\n.notEqualTo(field, value)\n\n\nMethod for retrieving all objects except for objects with the field value indicated in the condition.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\nName of the field for which a condition is defined\n\n\n\"orderNumber\"\n\n\n\n\n\n\nvalue\n\n\nObject\n\n\nMandatory\n\n\nField value\n\n\n22\n\n\n\n\n\n\n\n\nExample\n \n\n\nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\n\u201c\nmycollection\n\u201d\n);\n\n\nquery\n.\nnotEqualTo\n(\n\u201c\norderNumber\n\u201d\n,\n \n22\n);\n\n\n//query.findDocuments(\u2026);\n\n\n\n\n\n\nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\n\u201c\nmycollection\n\u201d\n);\n\n\nquery\n.\nequalTo\n(\n\u201c\n_id\n\u201d\n,\n \n\u201c\ndasds12dskm\n\u201d\n);\n\n\n//query.findDocuments(\u2026);\n\n\n\n\n\n\n\n\n\n\n.containedIn(field, values)\n\n\nMethod for retrieving all objects whose field value contains the array elements specified in the query.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\nName of the field for which a condition is defined\n\n\n\"orderNumbers\"\n\n\n\n\n\n\nvalue\n\n\nList\n\u0442\u0438\u043f \u043f\u043e\u043b\u044f\n\n\nMandatory\n\n\nArray of values\n\n\nsee the example below\n\n\n\n\n\n\n\n\nExample\n \n\n\nList\nObject\n \nnumbers\n \n=\n \nnew\n \nArrayList\n();\n\n        \nnumbers\n.\nadd\n(\n1\n);\n\n        \nnumbers\n.\nadd\n(\n5\n);\n\n        \nnumbers\n.\nadd\n(\n10\n);\n\n        \nnumbers\n.\nadd\n(\n15\n);\n\n\n\nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\n\u201c\nmycollection\n\u201d\n).\ncontainedIn\n(\nnumber3\n,\n \nnumbers\n);\n\n\n//query.findDocuments(\u2026);\n\n\n\n\n\n\n\n\n.containsAll(field, values)\n\n\nMethod for retrieving all objects whose field value contains all array elements specified in the query.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\nName of the field for which a condition is defined\n\n\n\"orderNumbers\"\n\n\n\n\n\n\nvalue\n\n\nList\n\u0442\u0438\u043f \u043f\u043e\u043b\u044f\n\n\nMandatory\n\n\nArray of values\n\n\nsee the example below\n\n\n\n\n\n\n\n\nExample\n \n\n\nList\nObject\n \ncontainsAllNumbers\n \n=\n \nnew\n \nArrayList\n();\n\n        \ncontainsAllNumbers\n.\nadd\n(\n1\n);\n\n        \ncontainsAllNumbers\n.\nadd\n(\n2\n);\n\n        \ncontainsAllNumbers\n.\nadd\n(\n3\n);\n\n        \ncontainsAllNumbers\n.\nadd\n(\n900\n);\n\n\nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\n\u201c\nmycollection\n\u201d\n).\ncontainsAll\n(\narray1\n,\n \ncontainsAllNumbers\n);\n\n\n//query.findDocuments(\u2026);\n\n\n\n\n\n\n\n\n.notContainedIn(field, values)\n\n\nMethod for retrieving all objects whose field value \n\n\n\n\ndoes not contain the array elements specified in the query \n\n\ndoes not exist\n\n\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\nName of the field for which a condition is defined\n\n\n\"orderNumbers\"\n\n\n\n\n\n\nvalue\n\n\nList\n\u0442\u0438\u043f \u043f\u043e\u043b\u044f\n\n\nMandatory\n\n\nArray of values\n\n\nsee the example below\n\n\n\n\n\n\n\n\nExample\n \n\n\nList\nObject\n \nnotContainsInList\n \n=\n \nnew\n \nArrayList\n();\n\n        \nnotContainsInList\n.\nadd\n(\n1\n);\n\n        \nnotContainsInList\n.\nadd\n(\n111\n);\n\n        \nnotContainsInList\n.\nadd\n(\n11\n);\n\n        \nnotContainsInList\n.\nadd\n(\n50\n);\n\n\nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\n\u201c\nmycollection\n\u201d\n).\nnotContainedIn\n(\norderNumbers\n,\n \nnotContainsInList\n)\n\n\n//query.findDocuments(\u2026);\n\n\n\n\n\n\n\n\n.greaterThan(field, value)\n\n\nMethod for retrieving all objects whose field value is greater than the number specified in the query.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\nName of the field for which a condition is defined\n\n\n\"fieldname\"\n\n\n\n\n\n\nvalue\n\n\nInteger / Double / Date\n\n\nMandatory\n\n\nCondition value\n\n\n22\n\n\n\n\n\n\n\n\nExample\n \n\n\nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\n\u201c\nmycollection\n\u201d\n).\ngreaterThan\n(\nnumber\n,\n \n22\n)\n\n\n//query.findDocuments(\u2026);\n\n\n\n\n\n\n\n\n.greaterThenOrEqualTo(field, value)\n\n\nMethod for retrieving all objects whose field value is no less than the number specified in the query.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\nName of the field for which a condition is defined\n\n\n\"fieldname\"\n\n\n\n\n\n\nvalue\n\n\nInteger / Double / Date\n\n\nMandatory\n\n\nCondition value\n\n\n22\n\n\n\n\n\n\n\n\nExample\n \n\n\nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\n\u201c\nmycollection\n\u201d\n).\ngreaterThenOrEqualTo\n \n(\nnumber\n,\n \n22\n)\n\n\n//query.findDocuments(\u2026);\n\n\n\n\n\n\n\n\n.lessThan(field, value)\n\n\nMethod for retrieving all objects whose field value is less than the number specified in the query.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\nName of the field for which a condition is defined\n\n\n\"fieldname\"\n\n\n\n\n\n\nvalue\n\n\nInteger / Double / Date\n\n\nMandatory\n\n\nCondition value\n\n\n22\n\n\n\n\n\n\n\n\nExample\n \n\n\nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\n\u201c\nmycollection\n\u201d\n).\n \nlessThan\n(\nnumber\n,\n \n22\n)\n\n\n//query.findDocuments(\u2026);\n\n\n\n\n\n\n\n\n.lessThanOrEqualTo(field, value)\n\n\nMethod for retrieving all objects whose field value is no greater than the number specified in the query.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\nName of the field for which a condition is defined\n\n\n\"fieldname\"\n\n\n\n\n\n\nvalue\n\n\nInteger / Double / Date\n\n\nMandatory\n\n\nCondition value\n\n\n22\n\n\n\n\n\n\n\n\nExample\n \n\n\nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\n\u201c\nmycollection\n\u201d\n).\nlessThanOrEqualTo\n \n(\nnumber\n,\n \n22\n)\n\n\n//query.findDocuments(\u2026);\n\n\n\n\n\n\n\n\n.exists(field)\n\n\nMethod for retrieving all objects with an existing value of a defined field\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\nName of the field for which a condition is defined\n\n\n\"fieldname\"\n\n\n\n\n\n\n\n\nExample\n \n\n\nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\n\u201c\nmycollection\n\u201d\n).\nexists\n(\nphoneNumber\n)\n\n\n//query.findDocuments(\u2026);\n\n\n\n\n\n\n\n\n.doesNotExist(field)\n\n\nMethod for retrieving all objects with a missing value in a defined field.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\nName of the field for which a condition is defined\n\n\n\"fieldname\"\n\n\n\n\n\n\n\n\nExample\n \n\n\nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\n\u201c\nmycollection\n\u201d\n).\ndoesNotExist\n(\nphoneNumber\n)\n\n\n//query.findDocuments(\u2026);\n\n\n\n\n\n\n\n\n.contains(field, regEx, options)\n\n\nMethod for retrieving all objects with a value of a defined field that matches a defined regular expression.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\nName of the field for which a condition is defined\n\n\n\"fieldname\"\n\n\n\n\n\n\nregEx\n\n\nString\n\n\nMandatory\n\n\nRegular expression\n\n\n\u201caB\u201d\n\n\n\n\n\n\noptions\n\n\nRegexOptions\n\n\nOptional\n\n\nRegular expression options\n\n\nSee the example below\n\n\n\n\n\n\n\n\nExample\n \n\n\n \nRegexOptions\n \nregexOptions\n \n=\n \nnew\n \nRegexOptions\n();\n\n \nregexOptions\n.\nsetRegexCaseInsenssitive\n();\n\n\n \nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\n\u201c\nmycollection\n\u201d\n).\ncontains\n(\nexampleField\n,\n \nBC\n,\n \nregexOptions\n)\n\n \n//query.findDocuments(\u2026);         \n\n\n\n\n\n\n\n\n.startsWith(field, regEx, options)\n\n\nMethod for retrieving all objects with a value of a defined field starting from a specified string.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\nName of the field for which a condition is defined\n\n\n\"fieldname\"\n\n\n\n\n\n\nregEx\n\n\nString\n\n\nMandatory\n\n\nRegular expression\n\n\n\u201caB\u201d\n\n\n\n\n\n\noptions\n\n\nRegexOptions\n\n\nOptional\n\n\nRegular expression options\n\n\nSee the example below\n\n\n\n\n\n\n\n\nExample\n \n\n\n \nRegexOptions\n \nregexOptions\n \n=\n \nnew\n \nRegexOptions\n();\n\n \nregexOptions\n.\nsetRegexCaseInsenssitive\n();\n\n\n \nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\n\u201c\nmycollection\n\u201d\n).\nstartsWith\n \n(\nexampleField\n,\n \na\n,\n \nregexOptions\n)\n\n \n//query.findDocuments(\u2026);\n\n\n\n\n\n\n\n\n.endsWith(field, regEx, options)\n\n\nMethod for retrieving all objects with a value of a defined field ending with a specified string.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\nName of the field for which a condition is defined\n\n\n\"fieldname\"\n\n\n\n\n\n\nregEx\n\n\nString\n\n\nMandatory\n\n\nRegular expression\n\n\n\u201caB\u201d\n\n\n\n\n\n\noptions\n\n\nRegexOptions\n\n\nOptional\n\n\nRegular expression options\n\n\nSee the example below\n\n\n\n\n\n\n\n\nExample\n \n\n\n \nRegexOptions\n \nregexOptions\n \n=\n \nnew\n \nRegexOptions\n();\n\n \nregexOptions\n.\nsetRegexCaseInsenssitive\n();\n\n\n \nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\n\u201c\nmycollection\n\u201d\n).\nendsWith\n(\nexampleField\n,\n \na\n,\n \nregexOptions\n)\n\n \n//query.findDocuments(\u2026);\n\n\n\n\n\n\n\n\n.and(field, query)\n\n\nMethod for logical multiplication of several samplings conditions\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\nName of the field for which a condition is defined\n\n\n\"fieldname\"\n\n\n\n\n\n\nquery\n\n\nQuery\n\n\nMandatory\n\n\nQuery that is included in the conjunction operation\n\n\nSee the example below\n\n\n\n\n\n\n\n\nExample\n \n\n\nQuery\n \nquery1\n \n=\n \nnew\n \nQuery\n(\nCOLLECTION_NAME\n).\ngreaterThan\n(\nraiting\n,\n \n50\n);\n\n\nQuery\n \nquery2\n \n=\n \nnew\n \nQuery\n(\nCOLLECTION_NAME\n).\nlessThan\n(\nraiting\n,\n \n100\n);\n\n\n\nquery1\n.\nand\n(\nnumber3\n,\n \nquery2\n);\n\n\n//query1.findDocuments(\u2026);\n\n\n\n\n\n\n\n\n.or(field, query)\n\n\nMethod for logical addition of several samplings conditions\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\nName of the field for which a condition is defined\n\n\n\"fieldname\"\n\n\n\n\n\n\nquery\n\n\nQuery\n\n\nMandatory\n\n\nQuery that is included in the conjunction operation\n\n\nSee the example below\n\n\n\n\n\n\n\n\nExample\n \n\n\nQuery\n \nquery1\n \n=\n \nnew\n \nQuery\n(\n\u201c\nmycollection\n\u201d\n).\ngreaterThan\n(\nraiting\n,\n \n50\n);\n\n\nQuery\n \nquery2\n \n=\n \nnew\n \nQuery\n(\n\u201c\nmycollection\n\u201d\n).\nequalTo\n(\nstatus\n,\n \n0\n);\n\n\n\nquery1\n.\nor\n(\nnumber3\n,\n \nquery2\n);\n\n\n//query1.findDocuments(\u2026);\n\n\n\n\n\n\n\n\n.raw(json)\n\n\nMethod for defining sampling conditions in the form of a JSON structure to create a DB query in MongoDB language.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\njson\n\n\nString\n\n\nMandatory\n\n\nApplied filter in the MongoDB query language format\n\n\n\"{\\\"_id\\\": {\\\"$eq\\\": \\\"W9vrMS9SuW\\\"}}\"\n\n\n\n\n\n\n\n\nExample\n \n\n\n  \nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\n\u201c\nmycollection\n\u201d\n);\n\n  \nquery\n.\nraw\n(\n{\\\n_id\\\n: {\\\n$eq\\\n: \\\nW9vrMS9SuW\\\n}}\n);\n\n  \n//query.findDocuments(\u2026)\n\n\n\n\n\n\n\n\n.reset()\n\n\nMethod for resetting the sampling conditions\n\n\nExample\n \n\n\nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\n\u201c\nmycollection\n\u201d\n);\n\n\nquery\n.\nequalTo\n(\n\u201c\n_id\n\u201d\n,\n \n\u201c\ndsads123sd\n\u201d\n);\n\n\nquery\n.\nreset\n();\n\n\nquery\n.\nequalTo\n(\n\u201c\n_id\n\u201d\n,\n \n\u201c\nds54522sd\n\u201d\n);\n\n\n//query.findDocuments(\u2026)\n\n\n\n\n\n\n\n\n.ascending(field)\n\n\nMethod for sorting a specified field data in ascending order before sampling.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\nField name\n\n\n\"fieldname\"\n\n\n\n\n\n\n\n\nExample\n \n\n\nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\nordersCollection\n);\n\n\nquery\n.\nascending\n(\nitemId\n);\n\n\n//query.findDocuments(...)\n\n\n\n\n\n\n\n\n.descending(field)\n\n\nMethod for sorting a specified field data in descending order before sampling.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfield\n\n\nString\n\n\nMandatory\n\n\nField name\n\n\n\"fieldname\"\n\n\n\n\n\n\n\n\nExample\n \n\n\nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\nordersCollection\n);\n\n\nquery\n.\ndescending\n(\nitemId\n);\n\n\n//query.findDocuments(...)\n\n\n\n\n\n\n\n\n.setFieldsForSearch(fields)\n\n\nMethod for specifying a list of returned fields.\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfields\n\n\nList\nString\n\n\nMandatory\n\n\nFields names\n\n\nSee the example below\n\n\n\n\n\n\n\n\nExample\n \n\n\nList\nStrings\n \nfieldNames\n \n=\n \nnew\n \nArrayList\n();\n\n\nfieldNames\n.\nadd\n(\n\u201c\norderId\n\u201d\n);\n\n\nfieldNames\n.\nadd\n(\n\u201c\nbuyerName\n\u201d\n);\n\n\nfieldNames\n.\nadd\n(\n\u201c\nphoneNumber\n\u201d\n);\n\n\n\nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\n\u201c\nmycollection\n\u201d\n).\nsetFieldsForSearch\n(\nfieldNames\n);\n\n\n//query.findDocuments(\u2026);\n\n\n\n\n\n\n\n\n.getQueryInfo()\n\n\nMethod for retrieving query conditions info\n\n\nExample\n \n\n\nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\n\u201c\nmycollection\n\u201d\n);\n\n\nquery\n.\nequalTo\n(\n\u201c\n_id\n\u201d\n,\n \n\u201c\ndsads123sd\n\u201d\n);\n\n\n\nQueryInfo\n \nqueryInfo\n \n=\n \nquery\n.\ngetQueryInfo\n();", 
            "title": "Query"
        }, 
        {
            "location": "/Java/Query/#query", 
            "text": "\u041a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u0432\u0431\u043e\u0440\u043a\u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438.  \u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435   Query  new Query(name)  .findDocuments(callback)  .countDocuments(callback)  .updateDocument(update, callback)  .removeDocument(callback)  .setLimit(limit)  .setSkip(skip)  .setPage(page)  .equalTo(field, value)  .notEqualTo(field, value)  .containedIn(field, values)  .containsAll(field, values)  .notContainedIn(field, values)  .greaterThan(field, value)  .greaterThenOrEqualTo(field, value)  .lessThan(field,  value)  .lessThanOrEqualTo(field, value)  .exists(field)  .doesNotExist(field)  .contains(field, regEx, options)  .startsWith(field, regEx, options)  .endsWith(field, regEx, options)  .and(field, query)  .or(field, query)  .raw(json)  .reset()  .ascending(field)  .descending(field)  .setFieldsForSearch(fields)  .getQueryInfo()", 
            "title": "Query"
        }, 
        {
            "location": "/Java/Query/#new-query", 
            "text": "Initialisation of a collection data query     Parameter  Type  Properties  Description  Value example      collection_name  String   Collection name  \"things\"     Example", 
            "title": "new Query()"
        }, 
        {
            "location": "/Java/Query/#query-query-new-queryname", 
            "text": "", 
            "title": "Query query = new Query(&quot;name&quot;);"
        }, 
        {
            "location": "/Java/Query/#finddocumentscallback", 
            "text": "Method for requesting a document from a collection. Returns data of the objects that match the sampling criteria.      Parameter  Type  Properties  Description  Value example      callback  CallbackFindDocument  Mandatory  Callback for the request being executed.       Note  If no criteria are set, the first 50 objects of the collection are returned by default.   Example", 
            "title": ".findDocuments(callback)"
        }, 
        {
            "location": "/Java/Query/#query-query-new-querymycollection-equaltonumber3-10-existsnumber2-queryfinddocumentsnew-callbackfinddocument-override-public-void-ondocumentfoundlistdocumentinfo-documentinfos-found-see-document-list-what-match-query-override-public-void-ondocumentnotfoundstring-errorcode-string-errormessage-no-documents-what-match-query", 
            "text": "", 
            "title": "Query query = new Query(\u201cmycollection\u201d)"
        }, 
        {
            "location": "/Java/Query/#countdocumentscallback", 
            "text": "Method for counting objects that meet the query conditions.     Parameter  Type  Properties  Description  Value example      callback  CallbackCountDocument  Mandatory  Callback for the request being executed.      Example", 
            "title": ".countDocuments(callback)"
        }, 
        {
            "location": "/Java/Query/#query-query-new-querymycollection-querygreaterthanrating-10-querycountdocumentsnew-callbackcountdocument-override-public-void-ondocumentscountedresponsecount-responsecount-see-responsecountgetresult-to-find-how-many-documents-was-found-override-public-void-oncountfailedstring-errorcode-string-errormessage-error-during-count", 
            "text": "", 
            "title": "Query query = new Query(\u201cmycollection\u201d);"
        }, 
        {
            "location": "/Java/Query/#updatedocumentupdate-callback", 
            "text": "Method for updating the requested objects.     Parameter  Type  Properties  Description  Value example      update  Update  Mandatory  Update object     callback  CallbackUpdateDocument  Mandatory  Callback for the request being executed.       Note  This method can update a maximum of 1000 documents in a request.   Example", 
            "title": ".updateDocument(update, callback)"
        }, 
        {
            "location": "/Java/Query/#query-query-new-querymycollection-queryequaltonumber3-10-update-update-new-update-setnumber2-199-setnumberfield-111-addtosetarray1-900-queryupdatedocumentupdate-new-callbackupdatedocument-override-public-void-onupdatesucceedresponseupdate-responseupdate-documents-updated-successful-override-public-void-onupdatefailedstring-errorcode-string-errormessage-error-during-update", 
            "text": "", 
            "title": " Query query = new Query(\u201cmycollection\u201d);"
        }, 
        {
            "location": "/Java/Query/#removedocumentcallback", 
            "text": "Method for removing the requested documents.     Parameter  Type  Properties  Description  Value example      callback  CallbackRemoveDocument  Mandatory  Callback for the request being executed.       Note  This method can remove a maximum of 1000 documents in a request.   Example", 
            "title": ".removeDocument(callback)"
        }, 
        {
            "location": "/Java/Query/#query-query-new-querymycollection-queryequalto_id-ajfkipjags-queryremovedocumentnew-callbackremovedocument-override-public-void-onremovesucceedresponseremove-responseremove-succeed-see-responseremove-to-findout-how-many-documents-was-removed-and-get-list-of-removed-documents-override-public-void-onremovefailedstring-errorcode-string-errormessage-error-during-remove-operation", 
            "text": "", 
            "title": "Query query = new Query(\u201cmycollection\u201d);"
        }, 
        {
            "location": "/Java/Query/#setlimitlimit", 
            "text": "Method for specifying a limit for the number of sampling, updating or removing documents.     Parameter  Type  Properties  Description  Value example      limit  Integer  Mandatory  Limit  15      Note  Limit defaults to 50, but anything from 1 to 100 is a valid limit.   Example", 
            "title": ".setLimit(limit)"
        }, 
        {
            "location": "/Java/Query/#query-query-new-querymycollection-querysetlimit15-queryfinddocuments", 
            "text": "", 
            "title": "Query query = new Query(\u201cmycollection\u201d);"
        }, 
        {
            "location": "/Java/Query/#setskipskip", 
            "text": "Method for skipping some objects before sampling.     Parameter  Type  Properties  Description  Value example      skip  Integer  Mandatory  Number of skipped objects  100     Example", 
            "title": ".setSkip(skip)"
        }, 
        {
            "location": "/Java/Query/#query-query-new-querymycollection-querysetskip12-queryfinddocuments", 
            "text": "", 
            "title": "Query query = new Query(\u201cmycollection\u201d);"
        }, 
        {
            "location": "/Java/Query/#setpagepage", 
            "text": "Method for sampling results page by page     Parameter  Type  Properties  Description  Value example      page  Integer  Mandatory  Page number  2     Example", 
            "title": ".setPage(page)"
        }, 
        {
            "location": "/Java/Query/#query-query-new-querymycollection-querysetlimit15-querysetpage1-queryfinddocuments", 
            "text": "", 
            "title": "Query query = new Query(\u201cmycollection\u201d);"
        }, 
        {
            "location": "/Java/Query/#equaltofield-value", 
            "text": "Method for retrieving all objects with the field value indicated in the condition.     Parameter  Type  Properties  Description  Value example      field  String  Mandatory  Name of the field for which a condition is defined  \"orderNumber\"    value  Object  Mandatory  Field value  22     Example    Query   query   =   new   Query ( \u201c mycollection \u201d );  query . equalTo ( \u201c orderNumber \u201d ,   22 );  //query.findDocuments(\u2026);   Query   query   =   new   Query ( \u201c mycollection \u201d );  query . equalTo ( \u201c _id \u201d ,   \u201c dasds12dskm \u201d );  //query.findDocuments(\u2026);", 
            "title": ".equalTo(field, value)"
        }, 
        {
            "location": "/Java/Query/#notequaltofield-value", 
            "text": "Method for retrieving all objects except for objects with the field value indicated in the condition.     Parameter  Type  Properties  Description  Value example      field  String  Mandatory  Name of the field for which a condition is defined  \"orderNumber\"    value  Object  Mandatory  Field value  22     Example    Query   query   =   new   Query ( \u201c mycollection \u201d );  query . notEqualTo ( \u201c orderNumber \u201d ,   22 );  //query.findDocuments(\u2026);   Query   query   =   new   Query ( \u201c mycollection \u201d );  query . equalTo ( \u201c _id \u201d ,   \u201c dasds12dskm \u201d );  //query.findDocuments(\u2026);", 
            "title": ".notEqualTo(field, value)"
        }, 
        {
            "location": "/Java/Query/#containedinfield-values", 
            "text": "Method for retrieving all objects whose field value contains the array elements specified in the query.     Parameter  Type  Properties  Description  Value example      field  String  Mandatory  Name of the field for which a condition is defined  \"orderNumbers\"    value  List \u0442\u0438\u043f \u043f\u043e\u043b\u044f  Mandatory  Array of values  see the example below     Example", 
            "title": ".containedIn(field, values)"
        }, 
        {
            "location": "/Java/Query/#listobject-numbers-new-arraylist-numbersadd1-numbersadd5-numbersadd10-numbersadd15-query-query-new-querymycollectioncontainedinnumber3-numbers-queryfinddocuments", 
            "text": "", 
            "title": "List&lt;Object&gt; numbers = new ArrayList&lt;&gt;();"
        }, 
        {
            "location": "/Java/Query/#containsallfield-values", 
            "text": "Method for retrieving all objects whose field value contains all array elements specified in the query.     Parameter  Type  Properties  Description  Value example      field  String  Mandatory  Name of the field for which a condition is defined  \"orderNumbers\"    value  List \u0442\u0438\u043f \u043f\u043e\u043b\u044f  Mandatory  Array of values  see the example below     Example", 
            "title": ".containsAll(field, values)"
        }, 
        {
            "location": "/Java/Query/#listobject-containsallnumbers-new-arraylist-containsallnumbersadd1-containsallnumbersadd2-containsallnumbersadd3-containsallnumbersadd900-query-query-new-querymycollectioncontainsallarray1-containsallnumbers-queryfinddocuments", 
            "text": "", 
            "title": "List&lt;Object&gt; containsAllNumbers = new ArrayList&lt;&gt;();"
        }, 
        {
            "location": "/Java/Query/#notcontainedinfield-values", 
            "text": "Method for retrieving all objects whose field value    does not contain the array elements specified in the query   does not exist      Parameter  Type  Properties  Description  Value example      field  String  Mandatory  Name of the field for which a condition is defined  \"orderNumbers\"    value  List \u0442\u0438\u043f \u043f\u043e\u043b\u044f  Mandatory  Array of values  see the example below     Example", 
            "title": ".notContainedIn(field, values)"
        }, 
        {
            "location": "/Java/Query/#listobject-notcontainsinlist-new-arraylist-notcontainsinlistadd1-notcontainsinlistadd111-notcontainsinlistadd11-notcontainsinlistadd50-query-query-new-querymycollectionnotcontainedinordernumbers-notcontainsinlist-queryfinddocuments", 
            "text": "", 
            "title": "List&lt;Object&gt; notContainsInList = new ArrayList&lt;&gt;();"
        }, 
        {
            "location": "/Java/Query/#greaterthanfield-value", 
            "text": "Method for retrieving all objects whose field value is greater than the number specified in the query.     Parameter  Type  Properties  Description  Value example      field  String  Mandatory  Name of the field for which a condition is defined  \"fieldname\"    value  Integer / Double / Date  Mandatory  Condition value  22     Example", 
            "title": ".greaterThan(field, value)"
        }, 
        {
            "location": "/Java/Query/#query-query-new-querymycollectiongreaterthannumber-22-queryfinddocuments", 
            "text": "", 
            "title": "Query query = new Query(\u201cmycollection\u201d).greaterThan(&quot;number&quot;, 22)"
        }, 
        {
            "location": "/Java/Query/#greaterthenorequaltofield-value", 
            "text": "Method for retrieving all objects whose field value is no less than the number specified in the query.     Parameter  Type  Properties  Description  Value example      field  String  Mandatory  Name of the field for which a condition is defined  \"fieldname\"    value  Integer / Double / Date  Mandatory  Condition value  22     Example", 
            "title": ".greaterThenOrEqualTo(field, value)"
        }, 
        {
            "location": "/Java/Query/#query-query-new-querymycollectiongreaterthenorequalto-number-22-queryfinddocuments", 
            "text": "", 
            "title": "Query query = new Query(\u201cmycollection\u201d).greaterThenOrEqualTo (&quot;number&quot;, 22)"
        }, 
        {
            "location": "/Java/Query/#lessthanfield-value", 
            "text": "Method for retrieving all objects whose field value is less than the number specified in the query.     Parameter  Type  Properties  Description  Value example      field  String  Mandatory  Name of the field for which a condition is defined  \"fieldname\"    value  Integer / Double / Date  Mandatory  Condition value  22     Example", 
            "title": ".lessThan(field, value)"
        }, 
        {
            "location": "/Java/Query/#query-query-new-querymycollection-lessthannumber-22-queryfinddocuments", 
            "text": "", 
            "title": "Query query = new Query(\u201cmycollection\u201d). lessThan(&quot;number&quot;, 22)"
        }, 
        {
            "location": "/Java/Query/#lessthanorequaltofield-value", 
            "text": "Method for retrieving all objects whose field value is no greater than the number specified in the query.     Parameter  Type  Properties  Description  Value example      field  String  Mandatory  Name of the field for which a condition is defined  \"fieldname\"    value  Integer / Double / Date  Mandatory  Condition value  22     Example", 
            "title": ".lessThanOrEqualTo(field, value)"
        }, 
        {
            "location": "/Java/Query/#query-query-new-querymycollectionlessthanorequalto-number-22-queryfinddocuments", 
            "text": "", 
            "title": "Query query = new Query(\u201cmycollection\u201d).lessThanOrEqualTo (&quot;number&quot;, 22)"
        }, 
        {
            "location": "/Java/Query/#existsfield", 
            "text": "Method for retrieving all objects with an existing value of a defined field     Parameter  Type  Properties  Description  Value example      field  String  Mandatory  Name of the field for which a condition is defined  \"fieldname\"     Example", 
            "title": ".exists(field)"
        }, 
        {
            "location": "/Java/Query/#query-query-new-querymycollectionexistsphonenumber-queryfinddocuments", 
            "text": "", 
            "title": "Query query = new Query(\u201cmycollection\u201d).exists(&quot;phoneNumber&quot;)"
        }, 
        {
            "location": "/Java/Query/#doesnotexistfield", 
            "text": "Method for retrieving all objects with a missing value in a defined field.     Parameter  Type  Properties  Description  Value example      field  String  Mandatory  Name of the field for which a condition is defined  \"fieldname\"     Example", 
            "title": ".doesNotExist(field)"
        }, 
        {
            "location": "/Java/Query/#query-query-new-querymycollectiondoesnotexistphonenumber-queryfinddocuments", 
            "text": "", 
            "title": "Query query = new Query(\u201cmycollection\u201d).doesNotExist(&quot;phoneNumber&quot;)"
        }, 
        {
            "location": "/Java/Query/#containsfield-regex-options", 
            "text": "Method for retrieving all objects with a value of a defined field that matches a defined regular expression.     Parameter  Type  Properties  Description  Value example      field  String  Mandatory  Name of the field for which a condition is defined  \"fieldname\"    regEx  String  Mandatory  Regular expression  \u201caB\u201d    options  RegexOptions  Optional  Regular expression options  See the example below     Example", 
            "title": ".contains(field, regEx, options)"
        }, 
        {
            "location": "/Java/Query/#regexoptions-regexoptions-new-regexoptions-regexoptionssetregexcaseinsenssitive-query-query-new-querymycollectioncontainsexamplefield-bc-regexoptions-queryfinddocuments", 
            "text": "", 
            "title": " RegexOptions regexOptions = new RegexOptions();"
        }, 
        {
            "location": "/Java/Query/#startswithfield-regex-options", 
            "text": "Method for retrieving all objects with a value of a defined field starting from a specified string.     Parameter  Type  Properties  Description  Value example      field  String  Mandatory  Name of the field for which a condition is defined  \"fieldname\"    regEx  String  Mandatory  Regular expression  \u201caB\u201d    options  RegexOptions  Optional  Regular expression options  See the example below     Example", 
            "title": ".startsWith(field, regEx, options)"
        }, 
        {
            "location": "/Java/Query/#regexoptions-regexoptions-new-regexoptions-regexoptionssetregexcaseinsenssitive-query-query-new-querymycollectionstartswith-examplefield-a-regexoptions-queryfinddocuments", 
            "text": "", 
            "title": " RegexOptions regexOptions = new RegexOptions();"
        }, 
        {
            "location": "/Java/Query/#endswithfield-regex-options", 
            "text": "Method for retrieving all objects with a value of a defined field ending with a specified string.     Parameter  Type  Properties  Description  Value example      field  String  Mandatory  Name of the field for which a condition is defined  \"fieldname\"    regEx  String  Mandatory  Regular expression  \u201caB\u201d    options  RegexOptions  Optional  Regular expression options  See the example below     Example", 
            "title": ".endsWith(field, regEx, options)"
        }, 
        {
            "location": "/Java/Query/#regexoptions-regexoptions-new-regexoptions-regexoptionssetregexcaseinsenssitive-query-query-new-querymycollectionendswithexamplefield-a-regexoptions-queryfinddocuments", 
            "text": "", 
            "title": " RegexOptions regexOptions = new RegexOptions();"
        }, 
        {
            "location": "/Java/Query/#andfield-query", 
            "text": "Method for logical multiplication of several samplings conditions     Parameter  Type  Properties  Description  Value example      field  String  Mandatory  Name of the field for which a condition is defined  \"fieldname\"    query  Query  Mandatory  Query that is included in the conjunction operation  See the example below     Example", 
            "title": ".and(field, query)"
        }, 
        {
            "location": "/Java/Query/#query-query1-new-querycollection_namegreaterthanraiting-50-query-query2-new-querycollection_namelessthanraiting-100-query1andnumber3-query2-query1finddocuments", 
            "text": "", 
            "title": "Query query1 = new Query(COLLECTION_NAME).greaterThan(&quot;raiting&quot;, 50);"
        }, 
        {
            "location": "/Java/Query/#orfield-query", 
            "text": "Method for logical addition of several samplings conditions     Parameter  Type  Properties  Description  Value example      field  String  Mandatory  Name of the field for which a condition is defined  \"fieldname\"    query  Query  Mandatory  Query that is included in the conjunction operation  See the example below     Example", 
            "title": ".or(field, query)"
        }, 
        {
            "location": "/Java/Query/#query-query1-new-querymycollectiongreaterthanraiting-50-query-query2-new-querymycollectionequaltostatus-0-query1ornumber3-query2-query1finddocuments", 
            "text": "", 
            "title": "Query query1 = new Query(\u201cmycollection\u201d).greaterThan(&quot;raiting&quot;, 50);"
        }, 
        {
            "location": "/Java/Query/#rawjson", 
            "text": "Method for defining sampling conditions in the form of a JSON structure to create a DB query in MongoDB language.     Parameter  Type  Properties  Description  Value example      json  String  Mandatory  Applied filter in the MongoDB query language format  \"{\\\"_id\\\": {\\\"$eq\\\": \\\"W9vrMS9SuW\\\"}}\"     Example", 
            "title": ".raw(json)"
        }, 
        {
            "location": "/Java/Query/#query-query-new-querymycollection-queryraw_id-eq-w9vrms9suw-queryfinddocuments", 
            "text": "", 
            "title": "  Query query = new Query(\u201cmycollection\u201d);"
        }, 
        {
            "location": "/Java/Query/#reset", 
            "text": "Method for resetting the sampling conditions  Example", 
            "title": ".reset()"
        }, 
        {
            "location": "/Java/Query/#query-query-new-querymycollection-queryequalto_id-dsads123sd-queryreset-queryequalto_id-ds54522sd-queryfinddocuments", 
            "text": "", 
            "title": "Query query = new Query(\u201cmycollection\u201d);"
        }, 
        {
            "location": "/Java/Query/#ascendingfield", 
            "text": "Method for sorting a specified field data in ascending order before sampling.     Parameter  Type  Properties  Description  Value example      field  String  Mandatory  Field name  \"fieldname\"     Example", 
            "title": ".ascending(field)"
        }, 
        {
            "location": "/Java/Query/#query-query-new-queryorderscollection-queryascendingitemid-queryfinddocuments", 
            "text": "", 
            "title": "Query query = new Query(&quot;ordersCollection&quot;);"
        }, 
        {
            "location": "/Java/Query/#descendingfield", 
            "text": "Method for sorting a specified field data in descending order before sampling.     Parameter  Type  Properties  Description  Value example      field  String  Mandatory  Field name  \"fieldname\"     Example", 
            "title": ".descending(field)"
        }, 
        {
            "location": "/Java/Query/#query-query-new-queryorderscollection-querydescendingitemid-queryfinddocuments", 
            "text": "", 
            "title": "Query query = new Query(&quot;ordersCollection&quot;);"
        }, 
        {
            "location": "/Java/Query/#setfieldsforsearchfields", 
            "text": "Method for specifying a list of returned fields.     Parameter  Type  Properties  Description  Value example      fields  List String  Mandatory  Fields names  See the example below     Example", 
            "title": ".setFieldsForSearch(fields)"
        }, 
        {
            "location": "/Java/Query/#liststrings-fieldnames-new-arraylist-fieldnamesaddorderid-fieldnamesaddbuyername-fieldnamesaddphonenumber-query-query-new-querymycollectionsetfieldsforsearchfieldnames-queryfinddocuments", 
            "text": "", 
            "title": "List&lt;Strings&gt; fieldNames = new ArrayList&lt;&gt;();"
        }, 
        {
            "location": "/Java/Query/#getqueryinfo", 
            "text": "Method for retrieving query conditions info  Example    Query   query   =   new   Query ( \u201c mycollection \u201d );  query . equalTo ( \u201c _id \u201d ,   \u201c dsads123sd \u201d );  QueryInfo   queryInfo   =   query . getQueryInfo ();", 
            "title": ".getQueryInfo()"
        }, 
        {
            "location": "/Java/Script/", 
            "text": "Script\n\n\nClass for handling server-side scripts\n\n\n\n\nScript\n\n\nnew Script()\n\n\n.runScript(scriptId, dataPoolForScript, callback)\n\n\n.runScript(scriptId, callback)\n\n\n\n\n\n\n\n\n\n\n\n\nnew Script()\n\n\nScript constructor\n\n\nScript\n \nscript\n \n=\n \nnew\n \nScript\n();\n\n\n\n\n\n\n\n\n.runScript(scriptId, dataPoolForScript, callback)\n\n\nServer-side script running method\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nscriptId\n\n\nString\n\n\nMandatory\n\n\nServer-side script identifier\n\n\n\"57e1503b48e5f54441189790\"\n\n\n\n\n\n\ndataPoolForScript\n\n\nObject\n\n\nOptional\n\n\nObject with the data that will be passed to the server-side script\n\n\nSee the example below\n\n\n\n\n\n\ncallback\n\n\nCallbackRunScript\n\n\nMandatory\n\n\nCallback for the request being executed.\n\n\nSee the example below\n\n\n\n\n\n\n\n\n\n\nNote\n\n\nObject \ndataPoolForScript\n will be serialised to JSON by the Google Gson parser. See \nhttps://github.com/google/gson\n for assistance.\n\n\n\n\nExample\n\n\nScript\n \nscript\n \n=\n \nnew\n \nScript\n();\n\n\nHashMap\nString\n,\n \nObject\n \ndataPool\n \n=\n \nnew\n \nHashMap\n();\n\n\ndataPool\n.\nput\n(\n\u201c\ncollname\n\u201d\n,\n\u201d\nitems\n\u201d\n);\n\n\ndataPool\n.\nput\n(\n\u201c\nkey\n\u201d\n,\n\u201d\nexampleField\n\u201d\n);\n\n\ndataPool\n.\nput\n(\n\u201c\nval\n\u201d\n,\n\u201d\nanyInfo\n\u201d\n);\n\n\n\nscript\n.\nrunScript\n(\n57e1503b48e5f54441189790\n,\n \ndataPool\n,\n \nnew\n \nCallbackRunScript\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonScriptSended\n()\n \n{\n\n                \n//script sended and runned\n\n            \n}\n\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonScriptSendFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \n//error during script run\n\n            \n}\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.runScript(scriptId, callback)\n\n\nServer-side script running method\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nscriptId\n\n\nString\n\n\nMandatory\n\n\nServer-side script identifier\n\n\n\"57e1503b48e5f54441189790\"\n\n\n\n\n\n\ncallback\n\n\nCallbackRunScript\n\n\nMandatory\n\n\nCallback for the request being executed.\n\n\nSee the example below\n\n\n\n\n\n\n\n\n\n\nNote\n\n\nObject \ndataPoolForScript\n will be serialised to JSON by the Google Gson parser. See \nhttps://github.com/google/gson\n for assistance.\n\n\n\n\nExample\n\n\nScript\n \nscript\n \n=\n \nnew\n \nScript\n();\n\n\nscript\n.\nrunScript\n(\n57e1503b48e5f54441189790\n,\n \nnew\n \nCallbackRunScript\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonScriptSended\n()\n \n{\n\n                \n//script sended and runned\n\n            \n}\n\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonScriptSendFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \n//error during script run\n\n            \n}\n\n        \n});", 
            "title": "Script"
        }, 
        {
            "location": "/Java/Script/#script", 
            "text": "Class for handling server-side scripts   Script  new Script()  .runScript(scriptId, dataPoolForScript, callback)  .runScript(scriptId, callback)", 
            "title": "Script"
        }, 
        {
            "location": "/Java/Script/#new-script", 
            "text": "Script constructor", 
            "title": "new Script()"
        }, 
        {
            "location": "/Java/Script/#script-script-new-script", 
            "text": "", 
            "title": "Script script = new Script();"
        }, 
        {
            "location": "/Java/Script/#runscriptscriptid-datapoolforscript-callback", 
            "text": "Server-side script running method     Parameter  Type  Properties  Description  Value example      scriptId  String  Mandatory  Server-side script identifier  \"57e1503b48e5f54441189790\"    dataPoolForScript  Object  Optional  Object with the data that will be passed to the server-side script  See the example below    callback  CallbackRunScript  Mandatory  Callback for the request being executed.  See the example below      Note  Object  dataPoolForScript  will be serialised to JSON by the Google Gson parser. See  https://github.com/google/gson  for assistance.   Example  Script   script   =   new   Script ();  HashMap String ,   Object   dataPool   =   new   HashMap ();  dataPool . put ( \u201c collname \u201d , \u201d items \u201d );  dataPool . put ( \u201c key \u201d , \u201d exampleField \u201d );  dataPool . put ( \u201c val \u201d , \u201d anyInfo \u201d );  script . runScript ( 57e1503b48e5f54441189790 ,   dataPool ,   new   CallbackRunScript ()   { \n             @Override \n             public   void   onScriptSended ()   { \n                 //script sended and runned \n             } \n\n             @Override \n             public   void   onScriptSendFailed ( String   errorCode ,   String   errorMessage )   { \n                 //error during script run \n             } \n         });", 
            "title": ".runScript(scriptId, dataPoolForScript, callback)"
        }, 
        {
            "location": "/Java/Script/#runscriptscriptid-callback", 
            "text": "Server-side script running method     Parameter  Type  Properties  Description  Value example      scriptId  String  Mandatory  Server-side script identifier  \"57e1503b48e5f54441189790\"    callback  CallbackRunScript  Mandatory  Callback for the request being executed.  See the example below      Note  Object  dataPoolForScript  will be serialised to JSON by the Google Gson parser. See  https://github.com/google/gson  for assistance.   Example  Script   script   =   new   Script ();  script . runScript ( 57e1503b48e5f54441189790 ,   new   CallbackRunScript ()   { \n             @Override \n             public   void   onScriptSended ()   { \n                 //script sended and runned \n             } \n\n             @Override \n             public   void   onScriptSendFailed ( String   errorCode ,   String   errorMessage )   { \n                 //error during script run \n             } \n         });", 
            "title": ".runScript(scriptId, callback)"
        }, 
        {
            "location": "/Java/Message/", 
            "text": "Class for message sending\n\n\n\n\nMessage\n\n\nnew Message(from, subject, text)\n\n\n.sendPush(messagePush, query, callback)\n\n\n.sendPush(messagePush, callback)\n\n\n.sendSms(messageSms, query, callback)\n\n\n.sendSms(messageSms, callback)\n\n\n\n\n\n\n\n\n\n\n\n\nMessage constructor\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nfrom\n\n\nString\n\n\nOptional\n\n\nMessage sender\n\n\n\"Any name\"\n\n\n\n\n\n\ntext\n\n\nString\n\n\nOptional\n\n\nMessage text\n\n\n\"Any text\"\n\n\n\n\n\n\n\n\nExample\n\n\nMessagePush\n \nmessagePush\n \n=\n \nnew\n \nMessagePush\n(\nAny text\n,\n \nnull\n);\n\n\n\n\n\n\n\n\n\n\n.sendPush(messagePush, query, callback)\n\n\nPush sending method\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nmessagePush\n\n\nMessagePush\n\n\nMandatory\n\n\nObject, that contains message\n\n\n\n\n\n\n\n\nquery\n\n\nQuery\n\n\nOptional\n\n\nUsers/Devices collection query for sampling\n\n\n\n\n\n\n\n\ncallback\n\n\nCallbackSendPush\n\n\nMandatory\n\n\nCallback for the request being executed.\n\n\n\n\n\n\n\n\n\n\nExample\n\n\nMessagePush\n \nmessagePush\n \n=\n \nnew\n \nMessagePush\n(\nAny text\n,\n \nnull\n);\n\n\n\nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\nUSERS\n);\n\n\nquery\n.\nequalTo\n(\n_id\n,\n \nXukL1FrVoL\n);\n\n\n\nMessage\n \nmessage\n \n=\n \nnew\n \nMessage\n();\n\n\nmessage\n.\nsendPush\n(\nmessagePush\n,\n \nquery\n,\n \nnew\n \nCallbackSendPush\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonPushSended\n()\n \n{\n\n                \n//push send\n\n            \n}\n\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonPushSendFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \n//error during sending\n\n            \n}\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.sendPush(messagePush, callback)\n\n\nPush sending method\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nmessagePush\n\n\nMessagePush\n\n\nMandatory\n\n\nObject, that contains message\n\n\n\n\n\n\n\n\ncallback\n\n\nCallbackSendPush\n\n\nMandatory\n\n\nCallback for the request being executed.\n\n\n\n\n\n\n\n\n\n\nExample\n\n\nMessagePush\n \nmessagePush\n \n=\n \nnew\n \nMessagePush\n(\nAny text\n,\n \nnull\n);\n\n\n\nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\nUSERS\n);\n\n\nquery\n.\nequalTo\n(\n_id\n,\n \nXukL1FrVoL\n);\n\n\n\nMessage\n \nmessage\n \n=\n \nnew\n \nMessage\n();\n\n\nmessage\n.\nsendPush\n(\nmessagePush\n,\n \nquery\n,\n \nnew\n \n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonPushSended\n()\n \n{\n\n                \n//push send\n\n            \n}\n\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonPushSendFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \n//error during sending\n\n            \n}\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.sendSms(messageSms, query, callback)\n\n\nSMS sending method\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nmessageSms\n\n\nmessageSms\n\n\nMandatory\n\n\nObject, that contains message\n\n\n\n\n\n\n\n\nquery\n\n\nQuery\n\n\nOptional\n\n\nUsers collection query for sampling.\n\n\n\n\n\n\n\n\ncallback\n\n\nCallbackSendSms\n\n\nMandatory\n\n\nCallback for the request being executed.\n\n\n\n\n\n\n\n\n\n\nExample\n\n\nMessageSms\n \nmessageSms\n \n=\n \nnew\n \nMessageSms\n(\nHello world\n);\n\n\n\nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\nUSERS\n);\n\n\nquery\n.\nequalTo\n(\n_id\n,\n \nXukL1FrVoL\n);\n\n\n\nmessage\n.\nsendSms\n(\nmessageSms\n,\n \nquery\n,\n \nnew\n \nCallbackSendSms\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonSmsSended\n()\n \n{\n\n                \n//sms send\n\n            \n}\n\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonSmsSendFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \n//error during sending\n\n            \n}\n\n        \n});\n\n\n\n\n\n\n\n\n\n\n.sendSms(messageSms, callback)\n\n\nSMS sending method\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nmessageSms\n\n\nmessageSms\n\n\nMandatory\n\n\nObject, that contains message\n\n\n\n\n\n\n\n\ncallback\n\n\nCallbackSendSms\n\n\nMandatory\n\n\nCallback for the request being executed.\n\n\n\n\n\n\n\n\n\n\nExample\n\n\nMessageSms\n \nmessageSms\n \n=\n \nnew\n \nMessageSms\n(\nHello world\n);\n\n\nmessage\n.\nsendSms\n(\nmessageSms\n,\n \nnew\n \nCallbackSendSms\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonSmsSended\n()\n \n{\n\n                \n//sms send\n\n            \n}\n\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonSmsSendFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \n//error during sending\n\n            \n}\n\n        \n});", 
            "title": "Message"
        }, 
        {
            "location": "/Java/Message/#sendpushmessagepush-query-callback", 
            "text": "Push sending method     Parameter  Type  Properties  Description  Value example      messagePush  MessagePush  Mandatory  Object, that contains message     query  Query  Optional  Users/Devices collection query for sampling     callback  CallbackSendPush  Mandatory  Callback for the request being executed.      Example  MessagePush   messagePush   =   new   MessagePush ( Any text ,   null );  Query   query   =   new   Query ( USERS );  query . equalTo ( _id ,   XukL1FrVoL );  Message   message   =   new   Message ();  message . sendPush ( messagePush ,   query ,   new   CallbackSendPush ()   { \n             @Override \n             public   void   onPushSended ()   { \n                 //push send \n             } \n\n             @Override \n             public   void   onPushSendFailed ( String   errorCode ,   String   errorMessage )   { \n                 //error during sending \n             } \n         });", 
            "title": ".sendPush(messagePush, query, callback)"
        }, 
        {
            "location": "/Java/Message/#sendpushmessagepush-callback", 
            "text": "Push sending method     Parameter  Type  Properties  Description  Value example      messagePush  MessagePush  Mandatory  Object, that contains message     callback  CallbackSendPush  Mandatory  Callback for the request being executed.      Example  MessagePush   messagePush   =   new   MessagePush ( Any text ,   null );  Query   query   =   new   Query ( USERS );  query . equalTo ( _id ,   XukL1FrVoL );  Message   message   =   new   Message ();  message . sendPush ( messagePush ,   query ,   new   ()   { \n             @Override \n             public   void   onPushSended ()   { \n                 //push send \n             } \n\n             @Override \n             public   void   onPushSendFailed ( String   errorCode ,   String   errorMessage )   { \n                 //error during sending \n             } \n         });", 
            "title": ".sendPush(messagePush, callback)"
        }, 
        {
            "location": "/Java/Message/#sendsmsmessagesms-query-callback", 
            "text": "SMS sending method     Parameter  Type  Properties  Description  Value example      messageSms  messageSms  Mandatory  Object, that contains message     query  Query  Optional  Users collection query for sampling.     callback  CallbackSendSms  Mandatory  Callback for the request being executed.      Example  MessageSms   messageSms   =   new   MessageSms ( Hello world );  Query   query   =   new   Query ( USERS );  query . equalTo ( _id ,   XukL1FrVoL );  message . sendSms ( messageSms ,   query ,   new   CallbackSendSms ()   { \n             @Override \n             public   void   onSmsSended ()   { \n                 //sms send \n             } \n\n             @Override \n             public   void   onSmsSendFailed ( String   errorCode ,   String   errorMessage )   { \n                 //error during sending \n             } \n         });", 
            "title": ".sendSms(messageSms, query, callback)"
        }, 
        {
            "location": "/Java/Message/#sendsmsmessagesms-callback", 
            "text": "SMS sending method     Parameter  Type  Properties  Description  Value example      messageSms  messageSms  Mandatory  Object, that contains message     callback  CallbackSendSms  Mandatory  Callback for the request being executed.      Example  MessageSms   messageSms   =   new   MessageSms ( Hello world );  message . sendSms ( messageSms ,   new   CallbackSendSms ()   { \n             @Override \n             public   void   onSmsSended ()   { \n                 //sms send \n             } \n\n             @Override \n             public   void   onSmsSendFailed ( String   errorCode ,   String   errorMessage )   { \n                 //error during sending \n             } \n         });", 
            "title": ".sendSms(messageSms, callback)"
        }, 
        {
            "location": "/Java/WebSocket/", 
            "text": "WebSocket\n\n\nTo use WebSocket in your project, you can use the \nhttps://github.com/codebutler/android-websockets\n library (or similar) with the following url scheme when initializing WebSocket:\n\n\nwss://wss.scorocode.ru/{appID}/{wsKey}/{chanName}\n\n\n\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nProperties\n\n\nDescription\n\n\nValue example\n\n\n\n\n\n\n\n\n\n\nappID\n\n\nString\n\n\nMandatory\n\n\nApplication identifier\n\n\na3d04e75e157b2f7ae20c2fce02f63d6\n\n\n\n\n\n\nwsKey\n\n\nString\n\n\nMandatory\n\n\nApplication websocket key\n\n\na3d04e75e157b2f7ae20c2fce02f63d6\n\n\n\n\n\n\nchanName\n\n\nString\n\n\nMandatory\n\n\nArbitrary channel name\n\n\nchat_channel\n\n\n\n\n\n\n\n\nInitialisation example\n\n\nWebSocketClient\n \nclient\n \n=\n \nnew\n \nWebSocketClient\n(\nURI\n.\ncreate\n(\nwss://wss.scorocode.ru/a3d04e75e157b2f7ae20c2fce02f63d6/a3d04e75e157b2f7ae20c2fce02f63d6/chat_channel\n),\n \nhandler\n);\n\n\n\n\n\n\nUsage example\n\n\nList\nBasicNameValuePair\n \nextraHeaders\n \n=\n \nArrays\n.\nasList\n(\n\n    \nnew\n \nBasicNameValuePair\n(\nCookie\n,\n \nsession=abcd\n);\n\n\n);\n\n\n\nWebSocketClient\n \nclient\n \n=\n \nnew\n \nWebSocketClient\n(\nURI\n.\ncreate\n(\nwss://wss.scorocode.ru/a3d04e75e157b2f7ae20c2fce02f63d6/b3asd4e75e1fds2f7ae20c2fce02f63d6/chat_channel\n),\n \nnew\n \nWebSocketClient\n.\nHandler\n()\n \n{\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonConnect\n()\n \n{\n\n        \nLog\n.\nd\n(\nTAG\n,\n \nConnected!\n);\n\n    \n}\n\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonMessage\n(\nString\n \nmessage\n)\n \n{\n\n        \nLog\n.\nd\n(\nTAG\n,\n \nString\n.\nformat\n(\nGot string message! %s\n,\n \nmessage\n));\n\n    \n}\n\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonMessage\n(\nbyte\n[]\n \ndata\n)\n \n{\n\n        \nLog\n.\nd\n(\nTAG\n,\n \nString\n.\nformat\n(\nGot binary message! %s\n,\n \ntoHexString\n(\ndata\n));\n\n    \n}\n\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonDisconnect\n(\nint\n \ncode\n,\n \nString\n \nreason\n)\n \n{\n\n        \nLog\n.\nd\n(\nTAG\n,\n \nString\n.\nformat\n(\nDisconnected! Code: %d Reason: %s\n,\n \ncode\n,\n \nreason\n));\n\n    \n}\n\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonError\n(\nException\n \nerror\n)\n \n{\n\n        \nLog\n.\ne\n(\nTAG\n,\n \nError!\n,\n \nerror\n);\n\n    \n}\n\n\n},\n \nextraHeaders\n);\n\n\n\nclient\n.\nconnect\n();\n\n\n\n// later...\n\n\n\nclient\n.\nsend\n(\nhello!\n);\n\n\nclient\n.\nsend\n(\nnew\n \nbyte\n[]\n \n{\n \n0xDE\n,\n \n0xAD\n,\n \n0xBE\n,\n \n0xEF\n \n});\n\n\nclient\n.\ndisconnect\n();", 
            "title": "WebSocket"
        }, 
        {
            "location": "/Java/WebSocket/#websocket", 
            "text": "To use WebSocket in your project, you can use the  https://github.com/codebutler/android-websockets  library (or similar) with the following url scheme when initializing WebSocket:  wss://wss.scorocode.ru/{appID}/{wsKey}/{chanName}     Parameter  Type  Properties  Description  Value example      appID  String  Mandatory  Application identifier  a3d04e75e157b2f7ae20c2fce02f63d6    wsKey  String  Mandatory  Application websocket key  a3d04e75e157b2f7ae20c2fce02f63d6    chanName  String  Mandatory  Arbitrary channel name  chat_channel     Initialisation example  WebSocketClient   client   =   new   WebSocketClient ( URI . create ( wss://wss.scorocode.ru/a3d04e75e157b2f7ae20c2fce02f63d6/a3d04e75e157b2f7ae20c2fce02f63d6/chat_channel ),   handler );   Usage example  List BasicNameValuePair   extraHeaders   =   Arrays . asList ( \n     new   BasicNameValuePair ( Cookie ,   session=abcd );  );  WebSocketClient   client   =   new   WebSocketClient ( URI . create ( wss://wss.scorocode.ru/a3d04e75e157b2f7ae20c2fce02f63d6/b3asd4e75e1fds2f7ae20c2fce02f63d6/chat_channel ),   new   WebSocketClient . Handler ()   { \n     @Override \n     public   void   onConnect ()   { \n         Log . d ( TAG ,   Connected! ); \n     } \n\n     @Override \n     public   void   onMessage ( String   message )   { \n         Log . d ( TAG ,   String . format ( Got string message! %s ,   message )); \n     } \n\n     @Override \n     public   void   onMessage ( byte []   data )   { \n         Log . d ( TAG ,   String . format ( Got binary message! %s ,   toHexString ( data )); \n     } \n\n     @Override \n     public   void   onDisconnect ( int   code ,   String   reason )   { \n         Log . d ( TAG ,   String . format ( Disconnected! Code: %d Reason: %s ,   code ,   reason )); \n     } \n\n     @Override \n     public   void   onError ( Exception   error )   { \n         Log . e ( TAG ,   Error! ,   error ); \n     }  },   extraHeaders );  client . connect ();  // later...  client . send ( hello! );  client . send ( new   byte []   {   0xDE ,   0xAD ,   0xBE ,   0xEF   });  client . disconnect ();", 
            "title": "WebSocket"
        }, 
        {
            "location": "/Java/ApplicationInfo/", 
            "text": "\u041a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438.\n\n\n\u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435\n\n\n\n\nApplicationInfo\n\n\nnew ApplicationInfo()\n\n\n.getApplicationInfo(callback)\n\n\n\n\n\n\n\n\n\n\n\n\nnew ApplicationInfo()\n\n\n\u041a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440 ApplicationInfo\n\n\nScorocodeSdk\n.\ninitWith\n(\ndb8a1b41b8543397a798a181d9891b4c\n,\n \n563452bbc611d8106d5da767365897de\n,\n \n28f06b89b62165c33de55265166d8781\n,\n \nnull\n,\n \nnull\n,\n \nnull\n,\n \nnull\n);\n\n\n\nApplicationInfo\n \napplicationInfo\n \n=\n \nnew\n \nApplicationInfo\n();\n\n\n\n\n\n\n\n\n\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435\n\n\n\u0414\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u043a\u043b\u0430\u0441\u0441\u0430 ApplicationInfo \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f SDK \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c MasterKey.\n\n\n\n\n\n\n\n\n.getApplicationInfo(callback)\n\n\n\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438.\n\n\n\n\n\n\n\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n\n\n\u0422\u0438\u043f\n\n\n\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430\n\n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n\n\n\n\n\n\n\n\n\n\ncallback\n\n\nCallbackGetApplicationInfo\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nCallback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440\n\n\nScorocodeSdk\n.\ninitWith\n(\ndb8a1b41b8543397a798a181d9891b4c\n,\n \n563452bbc611d8106d5da767365897de\n,\n \n28f06b89b62165c33de55265166d8781\n,\n \nnull\n,\n \nnull\n,\n \nnull\n,\n \nnull\n);\n\n\n\nApplicationInfo\n \napplicationInfo\n \n=\n \nnew\n \nApplicationInfo\n();\n\n\napplicationInfo\n.\ngetApplicationInfo\n(\nnew\n \nCallbackGetApplicationInfo\n()\n \n{\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonRequestSucceed\n(\nScorocodeApplicationInfo\n \nappInfo\n)\n \n{\n\n         \n//sdk  returned info\n\n    \n}\n\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonRequestFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n        \n//error during request\n\n    \n}\n\n\n});", 
            "title": "ApplicationInfo"
        }, 
        {
            "location": "/Java/ApplicationInfo/#new-applicationinfo", 
            "text": "\u041a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440 ApplicationInfo  ScorocodeSdk . initWith ( db8a1b41b8543397a798a181d9891b4c ,   563452bbc611d8106d5da767365897de ,   28f06b89b62165c33de55265166d8781 ,   null ,   null ,   null ,   null );  ApplicationInfo   applicationInfo   =   new   ApplicationInfo ();    \u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435  \u0414\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u043a\u043b\u0430\u0441\u0441\u0430 ApplicationInfo \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f SDK \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c MasterKey.", 
            "title": "new ApplicationInfo()"
        }, 
        {
            "location": "/Java/ApplicationInfo/#getapplicationinfocallback", 
            "text": "\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438.     \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440  \u0422\u0438\u043f  \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430  \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435  \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f      callback  CallbackGetApplicationInfo  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Callback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435     \u041f\u0440\u0438\u043c\u0435\u0440  ScorocodeSdk . initWith ( db8a1b41b8543397a798a181d9891b4c ,   563452bbc611d8106d5da767365897de ,   28f06b89b62165c33de55265166d8781 ,   null ,   null ,   null ,   null );  ApplicationInfo   applicationInfo   =   new   ApplicationInfo ();  applicationInfo . getApplicationInfo ( new   CallbackGetApplicationInfo ()   { \n     @Override \n     public   void   onRequestSucceed ( ScorocodeApplicationInfo   appInfo )   { \n          //sdk  returned info \n     } \n\n     @Override \n     public   void   onRequestFailed ( String   errorCode ,   String   errorMessage )   { \n         //error during request \n     }  });", 
            "title": ".getApplicationInfo(callback)"
        }, 
        {
            "location": "/Java/Bot/", 
            "text": "\u041a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u043e\u0442\u0430\u043c\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438\u044f.\n\n\n\u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435\n\n\n\n\nBot\n\n\nnew Bot()\n\n\n.getBotsList(callback)\n\n\n.createBot(botInfo, callback)\n\n\n.updateBot(botId, newBotInfo, callback)\n\n\n.deleteBot(botId, callback)\n\n\n\n\n\n\n\n\n\n\n\n\nnew Bot()\n\n\n\u041a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440 Bot\n\n\nScorocodeSdk\n.\ninitWith\n(\ndb8a1b41b8543397a798a181d9891b4c\n,\n \n563452bbc611d8106d5da767365897de\n,\n \n28f06b89b62165c33de55265166d8781\n,\n \nnull\n,\n \nnull\n,\n \nnull\n,\n \nnull\n);\n\n\n\nBot\n \nbot\n \n=\n \nnew\n \nBot\n();\n\n\n\n\n\n\n\n\n\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435\n\n\n\u0414\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u043a\u043b\u0430\u0441\u0441\u0430 Bot \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f SDK \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c MasterKey.\n\n\n\n\n\n\n\n\n.getBotsList(callback)\n\n\n\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043f\u0438\u0441\u043a\u0430 \u0432\u0441\u0435\u0445 \u0431\u043e\u0442\u043e\u0432 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.\n\n\n\n\n\n\n\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n\n\n\u0422\u0438\u043f\n\n\n\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430\n\n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n\n\n\n\n\n\n\n\n\n\ncallback\n\n\nCallbackGetBotList\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nCallback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440\n\n\nScorocodeSdk\n.\ninitWith\n(\ndb8a1b41b8543397a798a181d9891b4c\n,\n \n563452bbc611d8106d5da767365897de\n,\n \n28f06b89b62165c33de55265166d8781\n,\n \nnull\n,\n \nnull\n,\n \nnull\n,\n \nnull\n);\n\n\n\nBot\n \nbot\n \n=\n \nnew\n \nBot\n();\n\n\nbot\n.\ngetBotsList\n(\nnew\n \nCallbackGetBotList\n()\n \n{\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonRequestSucceed\n(\nList\nScorocodeBot\n \nbotList\n)\n \n{\n\n        \n//sdk returned bot list\n\n    \n}\n\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonRequestFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n        \n//error during request\n\n    \n}\n\n\n});\n\n\n\n\n\n\n\n\n\n\n.createBot(botInfo, callback)\n\n\n\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u0431\u043e\u0442\u0430.\n\n\n\n\n\n\n\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n\n\n\u0422\u0438\u043f\n\n\n\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430\n\n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n\n\n\n\n\n\n\n\n\n\nbotInfo\n\n\nScorocodeBot\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\n\u041a\u043b\u0430\u0441\u0441, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0435\u043c\u043e\u043c \u0431\u043e\u0442\u0435\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\ncallback\n\n\nCallbackGetBotList\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nCallback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440\n\n\nScorocodeSdk\n.\ninitWith\n(\ndb8a1b41b8543397a798a181d9891b4c\n,\n \n563452bbc611d8106d5da767365897de\n,\n \n28f06b89b62165c33de55265166d8781\n,\n \nnull\n,\n \nnull\n,\n \nnull\n,\n \nnull\n);\n\n\n\nString\n \nbotName\n \n=\n \nscorocodeSdkTestBotName\n;\n\n\nString\n \ntelegramBotId\n \n=\n \nscorocodeSdkTestTelegramBotId\n;\n\n\nString\n \nscriptId\n \n=\n \n\u201c\n584\nfba2c42d52f1ba275fdb5\n\u201d\n;\n\n\n\nScorocodeBot\n \nbotInfo\n \n=\n \nnew\n \nScorocodeBot\n(\nbotName\n,\n \ntelegramBotId\n,\n \nscriptId\n,\n \nfalse\n);\n\n\nBot\n \nbot\n \n=\n \nnew\n \nBot\n();\n\n\nbot\n.\ncreateBot\n(\nbotInfo\n,\n \nnew\n \nCallbackCreateBot\n()\n \n{\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonBotCreated\n(\nScorocodeBot\n \nbot\n)\n \n{\n\n          \n//bot created\n\n    \n}\n\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonCreationFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n        \n//error during bot creation        \n\n    \n}\n\n\n});\n\n\n\n\n\n\n\n\n\n\n.updateBot(botId, newBotInfo, callback)\n\n\n\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0433\u043e \u0431\u043e\u0442\u0430.\n\n\n\n\n\n\n\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n\n\n\u0422\u0438\u043f\n\n\n\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430\n\n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n\n\n\n\n\n\n\n\n\n\nbotId\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\n\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 Id \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c\u043e\u0433\u043e \u0431\u043e\u0442\u0430\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\nnewBotInfo\n\n\nScorocodeBot\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\n\u041a\u043b\u0430\u0441\u0441, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0435\u043c\u043e\u043c \u0431\u043e\u0442\u0435\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\ncallback\n\n\nCallbackGetBotList\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nCallback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440\n\n\nScorocodeSdk\n.\ninitWith\n(\ndb8a1b41b8543397a798a181d9891b4c\n,\n \n563452bbc611d8106d5da767365897de\n,\n \n28f06b89b62165c33de55265166d8781\n,\n \nnull\n,\n \nnull\n,\n \nnull\n,\n \nnull\n);\n\n\n\nString\n \nbotId\n \n=\n \n\u201c\n584\nfba2c42d52f1ba275fdb5\n\u201d\n;\n\n\n\nScorocodeBot\n \nnewBotInfo\n \n=\n \nnew\n \nScorocodeBot\n(\nupdated\n+\nbotName\n,\n \nupdated\n+\n \ntelegramBotId\n,\n \nscriptId\n,\n \nfalse\n);\n\n\n\nBot\n \nbot\n \n=\n \nnew\n \nBot\n();\n\n\nbot\n.\nupdateBot\n(\nbotId\n,\n \nnewBotInfo\n,\n \nnew\n \nCallbackUpdateBot\n()\n \n{\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonBotUpdated\n(\nScorocodeBot\n \nbot\n)\n \n{\n\n        \n//bot updated\n\n    \n}\n\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonUpdateFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n        \n//error during request\n\n    \n}\n\n\n});\n\n\n\n\n\n\n\n\n\n\n.deleteBot(botId, callback)\n\n\n\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0431\u043e\u0442\u0430\n\n\n\n\n\n\n\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n\n\n\u0422\u0438\u043f\n\n\n\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430\n\n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n\n\n\n\n\n\n\n\n\n\nbotId\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\n\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 Id \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c\u043e\u0433\u043e \u0431\u043e\u0442\u0430\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\ncallback\n\n\nCallbackGetBotList\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nCallback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440\n\n\nScorocodeSdk\n.\ninitWith\n(\ndb8a1b41b8543397a798a181d9891b4c\n,\n \n563452bbc611d8106d5da767365897de\n,\n \n28f06b89b62165c33de55265166d8781\n,\n \nnull\n,\n \nnull\n,\n \nnull\n,\n \nnull\n);\n\n\n\nString\n \nbotId\n \n=\n \n\u201c\n584\nfba2c42d52f1ba275fdb5\n\u201d\n;\n\n\n\nBot\n \nbot\n \n=\n \nnew\n \nBot\n();\n\n\nbot\n.\ndeleteBot\n(\nbotId\n,\n \nnew\n \nCallbackDeleteBot\n()\n \n{\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonBotDeleted\n()\n \n{\n\n        \n//bot deleted\n\n    \n}\n\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonDeletionFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n        \n//error during request\n\n    \n}\n\n\n});", 
            "title": "Bot"
        }, 
        {
            "location": "/Java/Bot/#new-bot", 
            "text": "\u041a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440 Bot  ScorocodeSdk . initWith ( db8a1b41b8543397a798a181d9891b4c ,   563452bbc611d8106d5da767365897de ,   28f06b89b62165c33de55265166d8781 ,   null ,   null ,   null ,   null );  Bot   bot   =   new   Bot ();    \u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435  \u0414\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u043a\u043b\u0430\u0441\u0441\u0430 Bot \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f SDK \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c MasterKey.", 
            "title": "new Bot()"
        }, 
        {
            "location": "/Java/Bot/#getbotslistcallback", 
            "text": "\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043f\u0438\u0441\u043a\u0430 \u0432\u0441\u0435\u0445 \u0431\u043e\u0442\u043e\u0432 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.     \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440  \u0422\u0438\u043f  \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430  \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435  \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f      callback  CallbackGetBotList  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Callback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435     \u041f\u0440\u0438\u043c\u0435\u0440  ScorocodeSdk . initWith ( db8a1b41b8543397a798a181d9891b4c ,   563452bbc611d8106d5da767365897de ,   28f06b89b62165c33de55265166d8781 ,   null ,   null ,   null ,   null );  Bot   bot   =   new   Bot ();  bot . getBotsList ( new   CallbackGetBotList ()   { \n     @Override \n     public   void   onRequestSucceed ( List ScorocodeBot   botList )   { \n         //sdk returned bot list \n     } \n\n     @Override \n     public   void   onRequestFailed ( String   errorCode ,   String   errorMessage )   { \n         //error during request \n     }  });", 
            "title": ".getBotsList(callback)"
        }, 
        {
            "location": "/Java/Bot/#createbotbotinfo-callback", 
            "text": "\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u0431\u043e\u0442\u0430.     \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440  \u0422\u0438\u043f  \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430  \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435  \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f      botInfo  ScorocodeBot  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  \u041a\u043b\u0430\u0441\u0441, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0435\u043c\u043e\u043c \u0431\u043e\u0442\u0435  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435    callback  CallbackGetBotList  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Callback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435     \u041f\u0440\u0438\u043c\u0435\u0440  ScorocodeSdk . initWith ( db8a1b41b8543397a798a181d9891b4c ,   563452bbc611d8106d5da767365897de ,   28f06b89b62165c33de55265166d8781 ,   null ,   null ,   null ,   null );  String   botName   =   scorocodeSdkTestBotName ;  String   telegramBotId   =   scorocodeSdkTestTelegramBotId ;  String   scriptId   =   \u201c 584 fba2c42d52f1ba275fdb5 \u201d ;  ScorocodeBot   botInfo   =   new   ScorocodeBot ( botName ,   telegramBotId ,   scriptId ,   false );  Bot   bot   =   new   Bot ();  bot . createBot ( botInfo ,   new   CallbackCreateBot ()   { \n     @Override \n     public   void   onBotCreated ( ScorocodeBot   bot )   { \n           //bot created \n     } \n\n     @Override \n     public   void   onCreationFailed ( String   errorCode ,   String   errorMessage )   { \n         //error during bot creation         \n     }  });", 
            "title": ".createBot(botInfo, callback)"
        }, 
        {
            "location": "/Java/Bot/#updatebotbotid-newbotinfo-callback", 
            "text": "\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0433\u043e \u0431\u043e\u0442\u0430.     \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440  \u0422\u0438\u043f  \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430  \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435  \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f      botId  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  \u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 Id \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c\u043e\u0433\u043e \u0431\u043e\u0442\u0430  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435    newBotInfo  ScorocodeBot  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  \u041a\u043b\u0430\u0441\u0441, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0435\u043c\u043e\u043c \u0431\u043e\u0442\u0435  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435    callback  CallbackGetBotList  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Callback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435     \u041f\u0440\u0438\u043c\u0435\u0440  ScorocodeSdk . initWith ( db8a1b41b8543397a798a181d9891b4c ,   563452bbc611d8106d5da767365897de ,   28f06b89b62165c33de55265166d8781 ,   null ,   null ,   null ,   null );  String   botId   =   \u201c 584 fba2c42d52f1ba275fdb5 \u201d ;  ScorocodeBot   newBotInfo   =   new   ScorocodeBot ( updated + botName ,   updated +   telegramBotId ,   scriptId ,   false );  Bot   bot   =   new   Bot ();  bot . updateBot ( botId ,   newBotInfo ,   new   CallbackUpdateBot ()   { \n     @Override \n     public   void   onBotUpdated ( ScorocodeBot   bot )   { \n         //bot updated \n     } \n\n     @Override \n     public   void   onUpdateFailed ( String   errorCode ,   String   errorMessage )   { \n         //error during request \n     }  });", 
            "title": ".updateBot(botId, newBotInfo, callback)"
        }, 
        {
            "location": "/Java/Bot/#deletebotbotid-callback", 
            "text": "\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0431\u043e\u0442\u0430     \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440  \u0422\u0438\u043f  \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430  \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435  \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f      botId  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  \u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 Id \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c\u043e\u0433\u043e \u0431\u043e\u0442\u0430  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435    callback  CallbackGetBotList  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Callback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435     \u041f\u0440\u0438\u043c\u0435\u0440  ScorocodeSdk . initWith ( db8a1b41b8543397a798a181d9891b4c ,   563452bbc611d8106d5da767365897de ,   28f06b89b62165c33de55265166d8781 ,   null ,   null ,   null ,   null );  String   botId   =   \u201c 584 fba2c42d52f1ba275fdb5 \u201d ;  Bot   bot   =   new   Bot ();  bot . deleteBot ( botId ,   new   CallbackDeleteBot ()   { \n     @Override \n     public   void   onBotDeleted ()   { \n         //bot deleted \n     } \n\n     @Override \n     public   void   onDeletionFailed ( String   errorCode ,   String   errorMessage )   { \n         //error during request \n     }  });", 
            "title": ".deleteBot(botId, callback)"
        }, 
        {
            "location": "/Java/Collections/", 
            "text": "\u041a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044f\u043c\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\n\n\n\u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435\n\n\n\n\nCollections\n\n\nnew Collections()\n\n\n.getCollectionsList(callback)\n\n\n.getCollectionByName(collectionName, callback)\n\n\n.createCollection(collection, callback)\n\n\n.updateCollcetion(collectionId, collection, callback)\n\n\n.cloneCollection(collectionId, collectionName, callback)\n\n\n.createCollectionIndex(collectionName, index, callback)\n\n\n.deleteCollectionIndex(collectionName, indexName, callback)\n\n\n.updateCollectionTriggers(collectionName, triggers, callback)\n\n\n.createCollectionField(collectionName, field, callback)\n\n\n.deleteCollectionField(collectionName, fieldName, callback)\n\n\n.deleteCollection(collectionId, callback)\n\n\n\n\n\n\n\n\n\n\n\n\nnew Collections()\n\n\n\u041a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440 Collections\n\n\nScorocodeSdk\n.\ninitWith\n(\ndb8a1b41b8543397a798a181d9891b4c\n,\n \n563452bbc611d8106d5da767365897de\n,\n \n28f06b89b62165c33de55265166d8781\n,\n \nnull\n,\n \nnull\n,\n \nnull\n,\n \nnull\n);\n\n\n\nCollections\n \ncollections\n \n=\n \nnew\n \nCollections\n();\n\n\n\n\n\n\n\n\n\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435\n\n\n\u0414\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u043a\u043b\u0430\u0441\u0441\u0430 Collections \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f SDK \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c MasterKey.\n\n\n\n\n\n\n\n\n.getCollectionsList(callback)\n\n\n\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043f\u0438\u0441\u043a\u0430 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0439 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.\n\n\n\n\n\n\n\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n\n\n\u0422\u0438\u043f\n\n\n\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430\n\n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n\n\n\n\n\n\n\n\n\n\ncallback\n\n\nCallbackGetCollectionsList\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nCallback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440\n\n\nScorocodeSdk\n.\ninitWith\n(\ndb8a1b41b8543397a798a181d9891b4c\n,\n \n563452bbc611d8106d5da767365897de\n,\n \n28f06b89b62165c33de55265166d8781\n,\n \nnull\n,\n \nnull\n,\n \nnull\n,\n \nnull\n);\n\n\n\nCollections\n \ncollections\n \n=\n \nnew\n \nCollections\n();\n\n\ncollections\n.\ngetCollectionsList\n(\nnew\n \nCallbackGetCollectionsList\n()\n \n{\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonRequestSucceed\n(\nList\nScorocodeCollection\n \ncollections\n)\n \n{\n\n        \n//sdk returned collections list\n\n    \n}\n\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonRequestFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n        \n//error during request\n\n    \n}\n\n\n});\n\n\n\n\n\n\n\n\n\n\n.getCollectionByName(collectionName, callback)\n\n\n\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u043f\u043e \u0435\u0435 \u0438\u043c\u0435\u043d\u0438.\n\n\n\n\n\n\n\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n\n\n\u0422\u0438\u043f\n\n\n\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430\n\n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n\n\n\n\n\n\n\n\n\n\ncollectionName\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\n\u0418\u043c\u044f \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043c\u043e\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438\n\n\n\u201ctestcollection\u201d\n\n\n\n\n\n\ncallback\n\n\nCallbackGetCollection\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nCallback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440\n\n\nScorocodeSdk\n.\ninitWith\n(\ndb8a1b41b8543397a798a181d9891b4c\n,\n \n563452bbc611d8106d5da767365897de\n,\n \n28f06b89b62165c33de55265166d8781\n,\n \nnull\n,\n \nnull\n,\n \nnull\n,\n \nnull\n);\n\n\n\nCollections\n \ncollections\n \n=\n \nnew\n \nCollections\n();\n\n\ncollections\n.\ngetCollectionByName\n(\ntestCollection\n,\n \nnew\n \nCallbackGetCollection\n()\n \n{\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonRequestSucceed\n(\nScorocodeCollection\n \ncollection\n)\n \n{\n\n        \n//sdk returned the collection\n\n    \n}\n\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonRequestFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n        \n//error during request\n\n    \n}\n\n\n});\n\n\n\n\n\n\n\n\n\n\n.createCollection(collection, callback)\n\n\n\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438.\n\n\n\n\n\n\n\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n\n\n\u0422\u0438\u043f\n\n\n\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430\n\n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n\n\n\n\n\n\n\n\n\n\ncollection\n\n\nScorocodeCollection\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\n\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0435\u043c\u043e\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\ncallback\n\n\nCallbackCreateCollection\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nCallback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440\n\n\nScorocodeSdk\n.\ninitWith\n(\ndb8a1b41b8543397a798a181d9891b4c\n,\n \n563452bbc611d8106d5da767365897de\n,\n \n28f06b89b62165c33de55265166d8781\n,\n \nnull\n,\n \nnull\n,\n \nnull\n,\n \nnull\n);\n\n\n\nScorocodeCollection\n \nnewCollection\n \n=\n \nnew\n \nScorocodeCollection\n()\n\n        \n.\nsetCollectionName\n(\n\u201c\ntestcollection\n\u201d\n)\n\n        \n.\nsetUseDocsACL\n(\nfalse\n)\n\n        \n.\nsetACL\n(\ngetTestACL\n());\n\n\n\nCollections\n \ncollections\n \n=\n \nnew\n \nCollections\n();\n\n\ncollections\n.\ncreateCollection\n(\nnewCollection\n,\n \nnew\n \nCallbackCreateCollection\n()\n \n{\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonCollectionCreated\n(\nScorocodeCollection\n \ncollection\n)\n \n{\n\n        \n//collection created\n\n    \n}\n\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonCreationFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n        \n//error during request\n\n    \n}\n\n\n});\n\n\n\n\n\n\n\n\n\n\n.updateCollcetion(collectionId, collection, callback)\n\n\n\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438\n\n\n\n\n\n\n\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n\n\n\u0422\u0438\u043f\n\n\n\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430\n\n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n\n\n\n\n\n\n\n\n\n\ncollectionId\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nId \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c\u043e\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438\n\n\n\u201c584fba2c42d52f1ba275fdb\u201d\n\n\n\n\n\n\ncollection\n\n\nScorocodeCollection\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\n\u041d\u043e\u0432\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\ncallback\n\n\nCallbackUpdateCollection\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nCallback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440\n\n\nScorocodeSdk\n.\ninitWith\n(\ndb8a1b41b8543397a798a181d9891b4c\n,\n \n563452bbc611d8106d5da767365897de\n,\n \n28f06b89b62165c33de55265166d8781\n,\n \nnull\n,\n \nnull\n,\n \nnull\n,\n \nnull\n);\n\n\n\nCollections\n \ncollections\n \n=\n \nnew\n \nCollections\n();\n\n\n\nScorocodeCollection\n \ncollection\n \n=\n \nnew\n \nScorocodeCollection\n()\n\n        \n.\nsetCollectionName\n(\nupdatedcollection\n\u201d\n))\n\n        \n.\nsetUseDocsACL\n(\nfalse\n)\n\n        \n.\nsetACL\n(\ngetTestACL\n());\n\n\n\ncollections\n.\nupdateCollection\n(\n\u201c\nahfdsjlsdlffdsdsa\n\u201d\n,\n \ncollection\n,\n \nnew\n \nCallbackUpdateCollection\n()\n \n{\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonCollectionUpdated\n(\nScorocodeCollection\n \ncollection\n)\n \n{\n\n        \n//collection updated\n\n    \n}\n\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonUpdateFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n        \n//error during request\n\n    \n}\n\n\n});\n\n\n\n\n\n\n\n\n\n\n.cloneCollection(collectionId, collectionName, callback)\n\n\n\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043a\u043b\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438\n\n\n\n\n\n\n\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n\n\n\u0422\u0438\u043f\n\n\n\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430\n\n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n\n\n\n\n\n\n\n\n\n\ncollectionId\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nId  \u043a\u043b\u043e\u043d\u0438\u0440\u0443\u0435\u043c\u043e\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438\n\n\n\u201c584fba2c42d52f1ba275fdb\u201d\n\n\n\n\n\n\ncollectionName\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\n\u0418\u043c\u044f \u043d\u043e\u0432\u043e\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\ncallback\n\n\nCallbackCloneCollection\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nCallback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440\n\n\nScorocodeSdk\n.\ninitWith\n(\ndb8a1b41b8543397a798a181d9891b4c\n,\n \n563452bbc611d8106d5da767365897de\n,\n \n28f06b89b62165c33de55265166d8781\n,\n \nnull\n,\n \nnull\n,\n \nnull\n,\n \nnull\n);\n\n\n\nCollections\n \ncollections\n \n=\n \nnew\n \nCollections\n();\n\n\ncollections\n.\ncloneCollection\n(\n\u201c\nasdhjkasdjska\n\u201d\n,\n \nclonedtestcollection\n\u201d\n),\n \nnew\n \nCallbackCloneCollection\n()\n \n{\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonCollectionCloned\n(\nScorocodeCollection\n \ncollection\n)\n \n{\n\n        \n//collection cloned\n\n    \n}\n\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonCloneOperationFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n        \n//error during request\n\n    \n}\n\n\n});\n\n\n\n\n\n\n\n\n\n\n.createCollectionIndex(collectionName, index, callback)\n\n\n\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438\n\n\n\n\n\n\n\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n\n\n\u0422\u0438\u043f\n\n\n\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430\n\n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n\n\n\n\n\n\n\n\n\n\ncollectionName\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\n\u0418\u043c\u044f \u043d\u043e\u0432\u043e\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438\n\n\n\"testcoll\"\n\n\n\n\n\n\nindex\n\n\nIndex\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\n\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0435\u043c\u043e\u043c \u0438\u043d\u0434\u0435\u043a\u0441\u0435 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\ncallback\n\n\nCallbackCreateCollectionIndex\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nCallback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440\n\n\nScorocodeSdk\n.\ninitWith\n(\ndb8a1b41b8543397a798a181d9891b4c\n,\n \n563452bbc611d8106d5da767365897de\n,\n \n28f06b89b62165c33de55265166d8781\n,\n \nnull\n,\n \nnull\n,\n \nnull\n,\n \nnull\n);\n\n\n\nList\nIndexField\n \nindexFields\n \n=\n \nnew\n \nArrayList\n();\n\n\nindexFields\n.\nadd\n(\nnew\n \nIndexField\n(\nreadACL\n,\n \n1\n));\n\n\n\nIndex\n \nindex\n \n=\n \nnew\n \nIndex\n(\n\u201c\nnewindex\n\u201d\n,\n \nindexFields\n);\n\n\n\nCollections\n \ncollections\n \n=\n \nnew\n \nCollections\n();\n\n\ncollections\n.\ncreateCollectionIndex\n(\n\u201c\ntestcollection\n\u201d\n,\n \nindex\n,\n \nnew\n \nCallbackCreateCollectionIndex\n()\n \n{\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonIndexCreated\n()\n \n{\n\n        \n//index created\n\n    \n}\n\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonIndexCreationFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n        \n//error during request\n\n    \n}\n\n\n});\n\n\n\n\n\n\n\n\n\n\n.deleteCollectionIndex(collectionName, indexName, callback)\n\n\n\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438.\n\n\n\n\n\n\n\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n\n\n\u0422\u0438\u043f\n\n\n\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430\n\n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n\n\n\n\n\n\n\n\n\n\ncollectionName\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\n\u0418\u043c\u044f \u043d\u043e\u0432\u043e\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438\n\n\n\"testcoll\"\n\n\n\n\n\n\nindexName\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\n\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0443\u0434\u0430\u043b\u044f\u0435\u043c\u043e\u0433\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u0430\n\n\n\"testindex\"\n\n\n\n\n\n\ncallback\n\n\nCallbackDeleteCollectionIndex\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nCallback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440\n\n\nScorocodeSdk\n.\ninitWith\n(\ndb8a1b41b8543397a798a181d9891b4c\n,\n \n563452bbc611d8106d5da767365897de\n,\n \n28f06b89b62165c33de55265166d8781\n,\n \nnull\n,\n \nnull\n,\n \nnull\n,\n \nnull\n);\n\n\n\nCollections\n \ncollections\n \n=\n \nnew\n \nCollections\n();\n\n\ncollections\n.\ndeleteCollectionIndex\n(\ntestCollection\n.\ngetCollectionName\n(),\n \nINDEX_NAME\n,\n \nnew\n \nCallbackDeleteCollectionIndex\n()\n \n{\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonIndexDeleted\n()\n \n{\n\n        \n//index deleted\n\n    \n}\n\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonIndexDeletionFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n        \n//error during request\n\n    \n}\n\n\n});\n\n\n\n\n\n\n\n\n\n\n.updateCollectionTriggers(collectionName, triggers, callback)\n\n\n\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0442\u0440\u0438\u0433\u0433\u0435\u0440\u0430\u0445 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438.\n\n\n\n\n\n\n\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n\n\n\u0422\u0438\u043f\n\n\n\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430\n\n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n\n\n\n\n\n\n\n\n\n\ncollectionName\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\n\u0418\u043c\u044f \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043c\u044b \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u0442\u0440\u0438\u0433\u0433\u0435\u0440\u044b\n\n\n\"testcoll\"\n\n\n\n\n\n\ntriggers\n\n\nScorocodeTriggers\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\n\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438 \u043e \u0442\u0440\u0438\u0433\u0433\u0435\u0440\u0430\u0445 \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\ncallback\n\n\nCallbackUpdateCollectionTriggers\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nCallback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440\n\n\nScorocodeSdk\n.\ninitWith\n(\ndb8a1b41b8543397a798a181d9891b4c\n,\n \n563452bbc611d8106d5da767365897de\n,\n \n28f06b89b62165c33de55265166d8781\n,\n \nnull\n,\n \nnull\n,\n \nnull\n,\n \nnull\n);\n\n\n\nboolean\n \nisActive\n \n=\n \nfalse\n;\n\n\nScorocodeTriggers\n \ntriggers\n \n=\n \nnew\n \nScorocodeTriggers\n();\n\n\ntriggers\n.\nsetBeforeInsert\n(\nnew\n \nTrigger\n(\nBFI code\n,\n \nisActive\n));\n\n\ntriggers\n.\nsetAfterInsert\n(\nnew\n \nTrigger\n(\nAFI code\n,\n \nisActive\n));\n\n\ntriggers\n.\nsetBeforeRemove\n(\nnew\n \nTrigger\n(\nBFR code\n,\n \nisActive\n));\n\n\ntriggers\n.\nsetAfterRemove\n(\nnew\n \nTrigger\n(\nAFR code\n,\n \nisActive\n));\n\n\ntriggers\n.\nsetBeforeUpdate\n(\nnew\n \nTrigger\n(\nBFU code\n,\n \nisActive\n));\n\n\ntriggers\n.\nsetAfterUpdate\n(\nnew\n \nTrigger\n(\nAFU code\n,\n \nisActive\n));\n\n\n\nCollections\n \ncollections\n \n=\n \nnew\n \nCollections\n();\n\n\ncollections\n.\nupdateCollectionTriggers\n(\n\u201c\ntestcollection\n\u201d\n,\n \ntriggers\n,\n \nnew\n \nCallbackUpdateCollectionTriggers\n()\n \n{\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonTriggersUpdated\n(\nScorocodeTriggers\n \ntriggers\n)\n \n{\n\n        \n//trigger updated\n\n    \n}\n\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonUpdateFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n        \n//error during request\n\n    \n}\n\n\n});\n\n\n\n\n\n\n\n\n\n\n.createCollectionField(callback)\n\n\n\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044f \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438.\n\n\n\n\n\n\n\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n\n\n\u0422\u0438\u043f\n\n\n\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430\n\n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n\n\n\n\n\n\n\n\n\n\ncollectionName\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\n\u0418\u043c\u044f \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u0432 \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043c\u044b \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043f\u043e\u043b\u0435\n\n\n\"testcoll\"\n\n\n\n\n\n\nfield\n\n\nScorocodeField\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\n\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c\u043e\u043c \u043f\u043e\u043b\u0435\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\ncallback\n\n\nCallbackAddField\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nCallback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440\n\n\nScorocodeSdk\n.\ninitWith\n(\ndb8a1b41b8543397a798a181d9891b4c\n,\n \n563452bbc611d8106d5da767365897de\n,\n \n28f06b89b62165c33de55265166d8781\n,\n \nnull\n,\n \nnull\n,\n \nnull\n,\n \nnull\n);\n\n\n\nScorocodeField\n \nfield\n \n=\n \nnew\n \nScorocodeField\n(\ntestnumberfield\n,\n \nScorocodeTypes\n.\nTypeNumber\n,\n \n,\n \nfalse\n,\n \nfalse\n,\n \nfalse\n);\n\n\n\nCollections\n \ncollections\n \n=\n \nnew\n \nCollections\n();\n\n\ncollections\n.\ncreateCollectionField\n(\n\u201c\ntestcollection\n\u201d\n,\n \nfield\n,\n \nnew\n \nCallbackAddField\n()\n \n{\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonFieldAdded\n(\nScorocodeField\n \nfield\n)\n \n{\n\n        \n//field created\n\n    \n}\n\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonAddFieldFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n        \n//error during request\n\n    \n}\n\n\n});\n\n\n\n\n\n\n\n\n\n\n.deleteCollectionField(collectionName, fieldName, callback)\n\n\n\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044f \u0438\u0437 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438.\n\n\n\n\n\n\n\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n\n\n\u0422\u0438\u043f\n\n\n\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430\n\n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n\n\n\n\n\n\n\n\n\n\ncollectionName\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\n\u0418\u043c\u044f \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043c\u044b \u0443\u0434\u0430\u043b\u044f\u0435\u043c \u043f\u043e\u043b\u0435\n\n\n\"testcoll\"\n\n\n\n\n\n\nfieldName\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\n\u0418\u043c\u044f \u0443\u0434\u0430\u043b\u044f\u0435\u043c\u043e\u0433\u043e \u043f\u043e\u043b\u044f\n\n\n\"testfield\"\n\n\n\n\n\n\ncallback\n\n\nCallbackDeleteField\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nCallback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440\n\n\nScorocodeSdk\n.\ninitWith\n(\ndb8a1b41b8543397a798a181d9891b4c\n,\n \n563452bbc611d8106d5da767365897de\n,\n \n28f06b89b62165c33de55265166d8781\n,\n \nnull\n,\n \nnull\n,\n \nnull\n,\n \nnull\n);\n\n\n\nCollections\n \ncollections\n \n=\n \nnew\n \nCollections\n();\n\n\ncollections\n.\ndeleteCollectionField\n(\n\u201c\ntestcoll\n\u201d\n,\n \ntestnumberfield\n,\n \nnew\n \nCallbackDeleteField\n()\n \n{\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonFieldDeleted\n(\nScorocodeCollection\n \ncollection\n)\n \n{\n\n        \n//field deleted\n\n    \n}\n\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonDeletionFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n        \n//error during request\n\n    \n}\n\n\n});\n\n\n\n\n\n\n\n\n\n\n.deleteCollection(collectionId, callback)\n\n\n\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u0438 \u0432\u0441\u0435\u0445 \u0435\u0451 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432\n\n\n\n\n\n\n\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n\n\n\u0422\u0438\u043f\n\n\n\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430\n\n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n\n\n\n\n\n\n\n\n\n\ncollectionId\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nId \u0443\u0434\u0430\u043b\u044f\u0435\u043c\u0440\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438\n\n\n\"584fba2c42d52f1ba275fdb\"\n\n\n\n\n\n\ncallback\n\n\nCallbackDeleteCollection\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nCallback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440\n\n\nScorocodeSdk\n.\ninitWith\n(\ndb8a1b41b8543397a798a181d9891b4c\n,\n \n563452bbc611d8106d5da767365897de\n,\n \n28f06b89b62165c33de55265166d8781\n,\n \nnull\n,\n \nnull\n,\n \nnull\n,\n \nnull\n);\n\n\n\nCollections\n \ncollections\n \n=\n \nnew\n \nCollections\n();\n\n\ncollections\n.\ndeleteCollection\n(\n\u201c\nsdfjksdlf2312fdsj\n\u201d\n,\n \nnew\n \nCallbackDeleteCollection\n()\n \n{\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonCollectionDeleted\n()\n \n{\n\n        \n//collection deleted\n\n    \n}\n\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonDeletionFailed\n(\nString\n \nerrorCodes\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n        \n//error during request\n\n    \n}\n\n\n});", 
            "title": "Collections"
        }, 
        {
            "location": "/Java/Collections/#new-collections", 
            "text": "\u041a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440 Collections  ScorocodeSdk . initWith ( db8a1b41b8543397a798a181d9891b4c ,   563452bbc611d8106d5da767365897de ,   28f06b89b62165c33de55265166d8781 ,   null ,   null ,   null ,   null );  Collections   collections   =   new   Collections ();    \u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435  \u0414\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u043a\u043b\u0430\u0441\u0441\u0430 Collections \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f SDK \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c MasterKey.", 
            "title": "new Collections()"
        }, 
        {
            "location": "/Java/Collections/#getcollectionslistcallback", 
            "text": "\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043f\u0438\u0441\u043a\u0430 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0439 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.     \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440  \u0422\u0438\u043f  \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430  \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435  \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f      callback  CallbackGetCollectionsList  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Callback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435     \u041f\u0440\u0438\u043c\u0435\u0440  ScorocodeSdk . initWith ( db8a1b41b8543397a798a181d9891b4c ,   563452bbc611d8106d5da767365897de ,   28f06b89b62165c33de55265166d8781 ,   null ,   null ,   null ,   null );  Collections   collections   =   new   Collections ();  collections . getCollectionsList ( new   CallbackGetCollectionsList ()   { \n     @Override \n     public   void   onRequestSucceed ( List ScorocodeCollection   collections )   { \n         //sdk returned collections list \n     } \n\n     @Override \n     public   void   onRequestFailed ( String   errorCode ,   String   errorMessage )   { \n         //error during request \n     }  });", 
            "title": ".getCollectionsList(callback)"
        }, 
        {
            "location": "/Java/Collections/#getcollectionbynamecollectionname-callback", 
            "text": "\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u043f\u043e \u0435\u0435 \u0438\u043c\u0435\u043d\u0438.     \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440  \u0422\u0438\u043f  \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430  \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435  \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f      collectionName  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  \u0418\u043c\u044f \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043c\u043e\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438  \u201ctestcollection\u201d    callback  CallbackGetCollection  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Callback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435     \u041f\u0440\u0438\u043c\u0435\u0440  ScorocodeSdk . initWith ( db8a1b41b8543397a798a181d9891b4c ,   563452bbc611d8106d5da767365897de ,   28f06b89b62165c33de55265166d8781 ,   null ,   null ,   null ,   null );  Collections   collections   =   new   Collections ();  collections . getCollectionByName ( testCollection ,   new   CallbackGetCollection ()   { \n     @Override \n     public   void   onRequestSucceed ( ScorocodeCollection   collection )   { \n         //sdk returned the collection \n     } \n\n     @Override \n     public   void   onRequestFailed ( String   errorCode ,   String   errorMessage )   { \n         //error during request \n     }  });", 
            "title": ".getCollectionByName(collectionName, callback)"
        }, 
        {
            "location": "/Java/Collections/#createcollectioncollection-callback", 
            "text": "\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438.     \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440  \u0422\u0438\u043f  \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430  \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435  \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f      collection  ScorocodeCollection  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  \u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0435\u043c\u043e\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435    callback  CallbackCreateCollection  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Callback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435     \u041f\u0440\u0438\u043c\u0435\u0440  ScorocodeSdk . initWith ( db8a1b41b8543397a798a181d9891b4c ,   563452bbc611d8106d5da767365897de ,   28f06b89b62165c33de55265166d8781 ,   null ,   null ,   null ,   null );  ScorocodeCollection   newCollection   =   new   ScorocodeCollection () \n         . setCollectionName ( \u201c testcollection \u201d ) \n         . setUseDocsACL ( false ) \n         . setACL ( getTestACL ());  Collections   collections   =   new   Collections ();  collections . createCollection ( newCollection ,   new   CallbackCreateCollection ()   { \n     @Override \n     public   void   onCollectionCreated ( ScorocodeCollection   collection )   { \n         //collection created \n     } \n\n     @Override \n     public   void   onCreationFailed ( String   errorCode ,   String   errorMessage )   { \n         //error during request \n     }  });", 
            "title": ".createCollection(collection, callback)"
        }, 
        {
            "location": "/Java/Collections/#updatecollcetioncollectionid-collection-callback", 
            "text": "\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438     \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440  \u0422\u0438\u043f  \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430  \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435  \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f      collectionId  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Id \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c\u043e\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438  \u201c584fba2c42d52f1ba275fdb\u201d    collection  ScorocodeCollection  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  \u041d\u043e\u0432\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435    callback  CallbackUpdateCollection  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Callback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435     \u041f\u0440\u0438\u043c\u0435\u0440  ScorocodeSdk . initWith ( db8a1b41b8543397a798a181d9891b4c ,   563452bbc611d8106d5da767365897de ,   28f06b89b62165c33de55265166d8781 ,   null ,   null ,   null ,   null );  Collections   collections   =   new   Collections ();  ScorocodeCollection   collection   =   new   ScorocodeCollection () \n         . setCollectionName ( updatedcollection \u201d )) \n         . setUseDocsACL ( false ) \n         . setACL ( getTestACL ());  collections . updateCollection ( \u201c ahfdsjlsdlffdsdsa \u201d ,   collection ,   new   CallbackUpdateCollection ()   { \n     @Override \n     public   void   onCollectionUpdated ( ScorocodeCollection   collection )   { \n         //collection updated \n     } \n\n     @Override \n     public   void   onUpdateFailed ( String   errorCode ,   String   errorMessage )   { \n         //error during request \n     }  });", 
            "title": ".updateCollcetion(collectionId, collection, callback)"
        }, 
        {
            "location": "/Java/Collections/#clonecollectioncollectionid-collectionname-callback", 
            "text": "\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043a\u043b\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438     \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440  \u0422\u0438\u043f  \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430  \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435  \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f      collectionId  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Id  \u043a\u043b\u043e\u043d\u0438\u0440\u0443\u0435\u043c\u043e\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438  \u201c584fba2c42d52f1ba275fdb\u201d    collectionName  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  \u0418\u043c\u044f \u043d\u043e\u0432\u043e\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435    callback  CallbackCloneCollection  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Callback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435     \u041f\u0440\u0438\u043c\u0435\u0440  ScorocodeSdk . initWith ( db8a1b41b8543397a798a181d9891b4c ,   563452bbc611d8106d5da767365897de ,   28f06b89b62165c33de55265166d8781 ,   null ,   null ,   null ,   null );  Collections   collections   =   new   Collections ();  collections . cloneCollection ( \u201c asdhjkasdjska \u201d ,   clonedtestcollection \u201d ),   new   CallbackCloneCollection ()   { \n     @Override \n     public   void   onCollectionCloned ( ScorocodeCollection   collection )   { \n         //collection cloned \n     } \n\n     @Override \n     public   void   onCloneOperationFailed ( String   errorCode ,   String   errorMessage )   { \n         //error during request \n     }  });", 
            "title": ".cloneCollection(collectionId, collectionName, callback)"
        }, 
        {
            "location": "/Java/Collections/#createcollectionindexcollectionname-index-callback", 
            "text": "\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438     \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440  \u0422\u0438\u043f  \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430  \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435  \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f      collectionName  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  \u0418\u043c\u044f \u043d\u043e\u0432\u043e\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438  \"testcoll\"    index  Index  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  \u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0435\u043c\u043e\u043c \u0438\u043d\u0434\u0435\u043a\u0441\u0435 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435    callback  CallbackCreateCollectionIndex  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Callback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435     \u041f\u0440\u0438\u043c\u0435\u0440  ScorocodeSdk . initWith ( db8a1b41b8543397a798a181d9891b4c ,   563452bbc611d8106d5da767365897de ,   28f06b89b62165c33de55265166d8781 ,   null ,   null ,   null ,   null );  List IndexField   indexFields   =   new   ArrayList ();  indexFields . add ( new   IndexField ( readACL ,   1 ));  Index   index   =   new   Index ( \u201c newindex \u201d ,   indexFields );  Collections   collections   =   new   Collections ();  collections . createCollectionIndex ( \u201c testcollection \u201d ,   index ,   new   CallbackCreateCollectionIndex ()   { \n     @Override \n     public   void   onIndexCreated ()   { \n         //index created \n     } \n\n     @Override \n     public   void   onIndexCreationFailed ( String   errorCode ,   String   errorMessage )   { \n         //error during request \n     }  });", 
            "title": ".createCollectionIndex(collectionName, index, callback)"
        }, 
        {
            "location": "/Java/Collections/#deletecollectionindexcollectionname-indexname-callback", 
            "text": "\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0438\u043d\u0434\u0435\u043a\u0441\u0430 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438.     \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440  \u0422\u0438\u043f  \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430  \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435  \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f      collectionName  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  \u0418\u043c\u044f \u043d\u043e\u0432\u043e\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438  \"testcoll\"    indexName  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0443\u0434\u0430\u043b\u044f\u0435\u043c\u043e\u0433\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u0430  \"testindex\"    callback  CallbackDeleteCollectionIndex  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Callback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435     \u041f\u0440\u0438\u043c\u0435\u0440  ScorocodeSdk . initWith ( db8a1b41b8543397a798a181d9891b4c ,   563452bbc611d8106d5da767365897de ,   28f06b89b62165c33de55265166d8781 ,   null ,   null ,   null ,   null );  Collections   collections   =   new   Collections ();  collections . deleteCollectionIndex ( testCollection . getCollectionName (),   INDEX_NAME ,   new   CallbackDeleteCollectionIndex ()   { \n     @Override \n     public   void   onIndexDeleted ()   { \n         //index deleted \n     } \n\n     @Override \n     public   void   onIndexDeletionFailed ( String   errorCode ,   String   errorMessage )   { \n         //error during request \n     }  });", 
            "title": ".deleteCollectionIndex(collectionName, indexName, callback)"
        }, 
        {
            "location": "/Java/Collections/#updatecollectiontriggerscollectionname-triggers-callback", 
            "text": "\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0442\u0440\u0438\u0433\u0433\u0435\u0440\u0430\u0445 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438.     \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440  \u0422\u0438\u043f  \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430  \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435  \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f      collectionName  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  \u0418\u043c\u044f \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043c\u044b \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u0442\u0440\u0438\u0433\u0433\u0435\u0440\u044b  \"testcoll\"    triggers  ScorocodeTriggers  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  \u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438 \u043e \u0442\u0440\u0438\u0433\u0433\u0435\u0440\u0430\u0445 \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435    callback  CallbackUpdateCollectionTriggers  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Callback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435     \u041f\u0440\u0438\u043c\u0435\u0440  ScorocodeSdk . initWith ( db8a1b41b8543397a798a181d9891b4c ,   563452bbc611d8106d5da767365897de ,   28f06b89b62165c33de55265166d8781 ,   null ,   null ,   null ,   null );  boolean   isActive   =   false ;  ScorocodeTriggers   triggers   =   new   ScorocodeTriggers ();  triggers . setBeforeInsert ( new   Trigger ( BFI code ,   isActive ));  triggers . setAfterInsert ( new   Trigger ( AFI code ,   isActive ));  triggers . setBeforeRemove ( new   Trigger ( BFR code ,   isActive ));  triggers . setAfterRemove ( new   Trigger ( AFR code ,   isActive ));  triggers . setBeforeUpdate ( new   Trigger ( BFU code ,   isActive ));  triggers . setAfterUpdate ( new   Trigger ( AFU code ,   isActive ));  Collections   collections   =   new   Collections ();  collections . updateCollectionTriggers ( \u201c testcollection \u201d ,   triggers ,   new   CallbackUpdateCollectionTriggers ()   { \n     @Override \n     public   void   onTriggersUpdated ( ScorocodeTriggers   triggers )   { \n         //trigger updated \n     } \n\n     @Override \n     public   void   onUpdateFailed ( String   errorCode ,   String   errorMessage )   { \n         //error during request \n     }  });", 
            "title": ".updateCollectionTriggers(collectionName, triggers, callback)"
        }, 
        {
            "location": "/Java/Collections/#createcollectionfieldcallback", 
            "text": "\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044f \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438.     \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440  \u0422\u0438\u043f  \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430  \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435  \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f      collectionName  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  \u0418\u043c\u044f \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u0432 \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043c\u044b \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u043f\u043e\u043b\u0435  \"testcoll\"    field  ScorocodeField  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  \u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c\u043e\u043c \u043f\u043e\u043b\u0435  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435    callback  CallbackAddField  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Callback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435     \u041f\u0440\u0438\u043c\u0435\u0440  ScorocodeSdk . initWith ( db8a1b41b8543397a798a181d9891b4c ,   563452bbc611d8106d5da767365897de ,   28f06b89b62165c33de55265166d8781 ,   null ,   null ,   null ,   null );  ScorocodeField   field   =   new   ScorocodeField ( testnumberfield ,   ScorocodeTypes . TypeNumber ,   ,   false ,   false ,   false );  Collections   collections   =   new   Collections ();  collections . createCollectionField ( \u201c testcollection \u201d ,   field ,   new   CallbackAddField ()   { \n     @Override \n     public   void   onFieldAdded ( ScorocodeField   field )   { \n         //field created \n     } \n\n     @Override \n     public   void   onAddFieldFailed ( String   errorCode ,   String   errorMessage )   { \n         //error during request \n     }  });", 
            "title": ".createCollectionField(callback)"
        }, 
        {
            "location": "/Java/Collections/#deletecollectionfieldcollectionname-fieldname-callback", 
            "text": "\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044f \u0438\u0437 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438.     \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440  \u0422\u0438\u043f  \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430  \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435  \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f      collectionName  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  \u0418\u043c\u044f \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043c\u044b \u0443\u0434\u0430\u043b\u044f\u0435\u043c \u043f\u043e\u043b\u0435  \"testcoll\"    fieldName  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  \u0418\u043c\u044f \u0443\u0434\u0430\u043b\u044f\u0435\u043c\u043e\u0433\u043e \u043f\u043e\u043b\u044f  \"testfield\"    callback  CallbackDeleteField  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Callback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435     \u041f\u0440\u0438\u043c\u0435\u0440  ScorocodeSdk . initWith ( db8a1b41b8543397a798a181d9891b4c ,   563452bbc611d8106d5da767365897de ,   28f06b89b62165c33de55265166d8781 ,   null ,   null ,   null ,   null );  Collections   collections   =   new   Collections ();  collections . deleteCollectionField ( \u201c testcoll \u201d ,   testnumberfield ,   new   CallbackDeleteField ()   { \n     @Override \n     public   void   onFieldDeleted ( ScorocodeCollection   collection )   { \n         //field deleted \n     } \n\n     @Override \n     public   void   onDeletionFailed ( String   errorCode ,   String   errorMessage )   { \n         //error during request \n     }  });", 
            "title": ".deleteCollectionField(collectionName, fieldName, callback)"
        }, 
        {
            "location": "/Java/Collections/#deletecollectioncollectionid-callback", 
            "text": "\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u0438 \u0432\u0441\u0435\u0445 \u0435\u0451 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432     \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440  \u0422\u0438\u043f  \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430  \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435  \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f      collectionId  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Id \u0443\u0434\u0430\u043b\u044f\u0435\u043c\u0440\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438  \"584fba2c42d52f1ba275fdb\"    callback  CallbackDeleteCollection  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Callback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435     \u041f\u0440\u0438\u043c\u0435\u0440  ScorocodeSdk . initWith ( db8a1b41b8543397a798a181d9891b4c ,   563452bbc611d8106d5da767365897de ,   28f06b89b62165c33de55265166d8781 ,   null ,   null ,   null ,   null );  Collections   collections   =   new   Collections ();  collections . deleteCollection ( \u201c sdfjksdlf2312fdsj \u201d ,   new   CallbackDeleteCollection ()   { \n     @Override \n     public   void   onCollectionDeleted ()   { \n         //collection deleted \n     } \n\n     @Override \n     public   void   onDeletionFailed ( String   errorCodes ,   String   errorMessage )   { \n         //error during request \n     }  });", 
            "title": ".deleteCollection(collectionId, callback)"
        }, 
        {
            "location": "/Java/Folders/", 
            "text": "\u041a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043f\u0430\u043f\u043a\u0430\u043c\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.\n\n\n\u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435\n\n\n\n\nFolders\n\n\nnew Folders()\n\n\n.getFoldersList(pathToFolder, callback)\n\n\n.createFolder(pathToFolder, callback)\n\n\n.deleteFolder(pathToFolder, callback)\n\n\n\n\n\n\n\n\n\n\n\n\nnew Folders()\n\n\n\u041a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440 Folders\n\n\nScorocodeSdk\n.\ninitWith\n(\ndb8a1b41b8543397a798a181d9891b4c\n,\n \n563452bbc611d8106d5da767365897de\n,\n \n28f06b89b62165c33de55265166d8781\n,\n \nnull\n,\n \nnull\n,\n \nnull\n,\n \nnull\n);\n\n\n\nFolders\n \nfolders\n \n=\n \nnew\n \nFolders\n();\n\n\n\n\n\n\n\n\n\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435\n\n\n\u0414\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u043a\u043b\u0430\u0441\u0441\u0430 Folders \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f SDK \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c MasterKey.\n\n\n\n\n\n\n\n\n.getFoldersList(pathToFolder, callback)\n\n\n\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043f\u0438\u0441\u043a\u0430 \u043f\u0430\u043f\u043e\u043a \u043f\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u043f\u0443\u0442\u0438.\n\n\n\n\n\n\n\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n\n\n\u0422\u0438\u043f\n\n\n\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430\n\n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n\n\n\n\n\n\n\n\n\n\npathToFolder\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\n\u041f\u0443\u0442\u044c \u043a \u043f\u0430\u043f\u043a\u0435\n\n\n\"server_scripts\"\n\n\n\n\n\n\ncallback\n\n\nCallbackGetFoldersList\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nCallback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440\n\n\nScorocodeSdk\n.\ninitWith\n(\ndb8a1b41b8543397a798a181d9891b4c\n,\n \n563452bbc611d8106d5da767365897de\n,\n \n28f06b89b62165c33de55265166d8781\n,\n \nnull\n,\n \nnull\n,\n \nnull\n,\n \nnull\n);\n\n\n\nFolders\n \nfolders\n \n=\n \nnew\n \nFolders\n();\n\n\nfolders\n.\ngetFoldersList\n(\nserver_code\n,\n \nnew\n \nCallbackGetFoldersList\n()\n \n{\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonRequestSucceed\n(\nList\nScorocodeFolder\n \nfolderList\n)\n \n{\n\n        \n//sdk returned list of folders\n\n    \n}\n\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonRequestFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n        \n//error during request\n\n    \n}\n\n\n});\n\n\n\n\n\n\n\n\n\n\n.createFolder(pathToFolder, callback)\n\n\n\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0439 \u043f\u0430\u043f\u043a\u0438 \u043f\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u043f\u0443\u0442\u0438\n\n\n\n\n\n\n\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n\n\n\u0422\u0438\u043f\n\n\n\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430\n\n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n\n\n\n\n\n\n\n\n\n\npathToFolder\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\n\u041f\u0443\u0442\u044c \u043a \u043f\u0430\u043f\u043a\u0435\n\n\n\"server_scripts\"\n\n\n\n\n\n\ncallback\n\n\nCallbackCreateNewFolder\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nCallback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440\n\n\nScorocodeSdk\n.\ninitWith\n(\ndb8a1b41b8543397a798a181d9891b4c\n,\n \n563452bbc611d8106d5da767365897de\n,\n \n28f06b89b62165c33de55265166d8781\n,\n \nnull\n,\n \nnull\n,\n \nnull\n,\n \nnull\n);\n\n\n\nFolders\n \nfolders\n \n=\n \nnew\n \nFolders\n();\n\n\nfolders\n.\ncreateFolder\n(\ntest_path\n,\n \nnew\n \nCallbackCreateNewFolder\n()\n \n{\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonFolderCreated\n()\n \n{\n\n        \n//folder created\n\n    \n}\n\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonCreationFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n        \n//error during request\n\n    \n}\n\n\n});\n\n\n\n\n\n\n\n\n\n\n.deleteFolder(pathToFolder, callback)\n\n\n\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0439 \u043f\u0430\u043f\u043a\u0438 \u043f\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u043f\u0443\u0442\u0438\n\n\n\n\n\n\n\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n\n\n\u0422\u0438\u043f\n\n\n\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430\n\n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n\n\n\n\n\n\n\n\n\n\npathToFolder\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\n\u041f\u0443\u0442\u044c \u043a \u043f\u0430\u043f\u043a\u0435\n\n\n\"server_scripts\"\n\n\n\n\n\n\ncallback\n\n\nCallbackDeleteFolder\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nCallback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440\n\n\nScorocodeSdk\n.\ninitWith\n(\ndb8a1b41b8543397a798a181d9891b4c\n,\n \n563452bbc611d8106d5da767365897de\n,\n \n28f06b89b62165c33de55265166d8781\n,\n \nnull\n,\n \nnull\n,\n \nnull\n,\n \nnull\n);\n\n\n\nFolders\n \nfolders\n \n=\n \nnew\n \nFolders\n();\n\n\nfolders\n.\ndeleteFolder\n(\nserver_code\n,\n \nnew\n \nCallbackDeleteFolder\n()\n \n{\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonFolderDeleted\n()\n \n{\n\n        \n//folder deleted\n\n    \n}\n\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonDeletionFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n        \n//error during request\n\n    \n}\n\n\n});", 
            "title": "Folders"
        }, 
        {
            "location": "/Java/Folders/#new-folders", 
            "text": "\u041a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440 Folders  ScorocodeSdk . initWith ( db8a1b41b8543397a798a181d9891b4c ,   563452bbc611d8106d5da767365897de ,   28f06b89b62165c33de55265166d8781 ,   null ,   null ,   null ,   null );  Folders   folders   =   new   Folders ();    \u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435  \u0414\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u043a\u043b\u0430\u0441\u0441\u0430 Folders \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f SDK \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c MasterKey.", 
            "title": "new Folders()"
        }, 
        {
            "location": "/Java/Folders/#getfolderslistpathtofolder-callback", 
            "text": "\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043f\u0438\u0441\u043a\u0430 \u043f\u0430\u043f\u043e\u043a \u043f\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u043f\u0443\u0442\u0438.     \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440  \u0422\u0438\u043f  \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430  \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435  \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f      pathToFolder  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  \u041f\u0443\u0442\u044c \u043a \u043f\u0430\u043f\u043a\u0435  \"server_scripts\"    callback  CallbackGetFoldersList  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Callback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435     \u041f\u0440\u0438\u043c\u0435\u0440  ScorocodeSdk . initWith ( db8a1b41b8543397a798a181d9891b4c ,   563452bbc611d8106d5da767365897de ,   28f06b89b62165c33de55265166d8781 ,   null ,   null ,   null ,   null );  Folders   folders   =   new   Folders ();  folders . getFoldersList ( server_code ,   new   CallbackGetFoldersList ()   { \n     @Override \n     public   void   onRequestSucceed ( List ScorocodeFolder   folderList )   { \n         //sdk returned list of folders \n     } \n\n     @Override \n     public   void   onRequestFailed ( String   errorCode ,   String   errorMessage )   { \n         //error during request \n     }  });", 
            "title": ".getFoldersList(pathToFolder, callback)"
        }, 
        {
            "location": "/Java/Folders/#createfolderpathtofolder-callback", 
            "text": "\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0439 \u043f\u0430\u043f\u043a\u0438 \u043f\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u043f\u0443\u0442\u0438     \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440  \u0422\u0438\u043f  \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430  \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435  \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f      pathToFolder  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  \u041f\u0443\u0442\u044c \u043a \u043f\u0430\u043f\u043a\u0435  \"server_scripts\"    callback  CallbackCreateNewFolder  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Callback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435     \u041f\u0440\u0438\u043c\u0435\u0440  ScorocodeSdk . initWith ( db8a1b41b8543397a798a181d9891b4c ,   563452bbc611d8106d5da767365897de ,   28f06b89b62165c33de55265166d8781 ,   null ,   null ,   null ,   null );  Folders   folders   =   new   Folders ();  folders . createFolder ( test_path ,   new   CallbackCreateNewFolder ()   { \n     @Override \n     public   void   onFolderCreated ()   { \n         //folder created \n     } \n\n     @Override \n     public   void   onCreationFailed ( String   errorCode ,   String   errorMessage )   { \n         //error during request \n     }  });", 
            "title": ".createFolder(pathToFolder, callback)"
        }, 
        {
            "location": "/Java/Folders/#deletefolderpathtofolder-callback", 
            "text": "\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0439 \u043f\u0430\u043f\u043a\u0438 \u043f\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u043f\u0443\u0442\u0438     \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440  \u0422\u0438\u043f  \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430  \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435  \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f      pathToFolder  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  \u041f\u0443\u0442\u044c \u043a \u043f\u0430\u043f\u043a\u0435  \"server_scripts\"    callback  CallbackDeleteFolder  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Callback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435     \u041f\u0440\u0438\u043c\u0435\u0440  ScorocodeSdk . initWith ( db8a1b41b8543397a798a181d9891b4c ,   563452bbc611d8106d5da767365897de ,   28f06b89b62165c33de55265166d8781 ,   null ,   null ,   null ,   null );  Folders   folders   =   new   Folders ();  folders . deleteFolder ( server_code ,   new   CallbackDeleteFolder ()   { \n     @Override \n     public   void   onFolderDeleted ()   { \n         //folder deleted \n     } \n\n     @Override \n     public   void   onDeletionFailed ( String   errorCode ,   String   errorMessage )   { \n         //error during request \n     }  });", 
            "title": ".deleteFolder(pathToFolder, callback)"
        }, 
        {
            "location": "/Java/ScorocodeScript/", 
            "text": "\u041a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441\u043e \u0441\u043a\u0440\u0438\u043f\u0442\u0430\u043c\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.\n\n\n\u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435\n\n\n\n\nScorocodeScript\n\n\nnew ScorocodeScript()\n\n\n.createScript(script, callback)\n\n\n.getScriptById(scriptId, callback)\n\n\n.updateScript(scriptToUpdateId, newScriptInfo, callback)\n\n\n.deleteScript(scriptToDeleteId, callback)\n\n\n\n\n\n\n\n\n\n\n\n\nnew ScorocodeScript()\n\n\n\u041a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440 ScorocodeScript\n\n\nScorocodeSdk\n.\ninitWith\n(\ndb8a1b41b8543397a798a181d9891b4c\n,\n \n563452bbc611d8106d5da767365897de\n,\n \n28f06b89b62165c33de55265166d8781\n,\n \nnull\n,\n \nnull\n,\n \nnull\n,\n \nnull\n);\n\n\n\nScorocodeScript\n \nnewScript\n \n=\n \nnew\n \nScorocodeScript\n();\n\n\n\n\n\n\n\n\n\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435\n\n\n\u0414\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u043a\u043b\u0430\u0441\u0441\u0430 ScorocodeScript \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f SDK \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c MasterKey.\n\n\n\n\n\n\n\n\n.createScript(script, callback)\n\n\n\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0441\u043a\u0440\u0438\u043f\u0442\u0430\n\n\n\n\n\n\n\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n\n\n\u0422\u0438\u043f\n\n\n\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430\n\n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n\n\n\n\n\n\n\n\n\n\nscript\n\n\nScorocodeScript\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\n\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0435\u043c\u043e\u043c \u0441\u043a\u0440\u0438\u043f\u0442\u0435\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\ncallback\n\n\nCallbackCreateScript\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nCallback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440\n\n\nScorocodeSdk\n.\ninitWith\n(\ndb8a1b41b8543397a798a181d9891b4c\n,\n \n563452bbc611d8106d5da767365897de\n,\n \n28f06b89b62165c33de55265166d8781\n,\n \nnull\n,\n \nnull\n,\n \nnull\n,\n \nnull\n);\n\n\n\nScorocodeScript\n \nscript\n \n=\n \nnew\n \nScorocodeScript\n();\n\n\nscript\n.\nsetScriptName\n(\ntestscript.js\n);\n\n\nscript\n.\nsetScriptPath\n(\ntestscript.js\n);\n\n\nnew\n \nScript\n().\ncreateScript\n(\nscript\n,\n \nnew\n \nCallbackCreateScript\n()\n \n{\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonScriptCreated\n(\nScorocodeScript\n \nscript\n)\n \n{\n\n         \n//script created\n\n    \n}\n\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonCreationFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n        \n//error during request         \n\n    \n}\n\n\n});\n\n\n\n\n\n\n\n\n\n\n.getScriptById(scriptId, callback)\n\n\n\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0441\u043a\u0440\u0438\u043f\u0442\u0435 \u043f\u043e \u0435\u0433\u043e id.\n\n\n\n\n\n\n\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n\n\n\u0422\u0438\u043f\n\n\n\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430\n\n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n\n\n\n\n\n\n\n\n\n\nscriptId\n\n\nScorocodeScript\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nId \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043c\u043e\u0433\u043e \u0441\u043a\u0440\u0438\u043f\u0442\u0430\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\ncallback\n\n\nCallbackGetScriptById\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nCallback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440\n\n\nScorocodeSdk\n.\ninitWith\n(\ndb8a1b41b8543397a798a181d9891b4c\n,\n \n563452bbc611d8106d5da767365897de\n,\n \n28f06b89b62165c33de55265166d8781\n,\n \nnull\n,\n \nnull\n,\n \nnull\n,\n \nnull\n);\n\n\n\nScript\n \nscript\n \n=\n \nnew\n \nScript\n();\n\n\nscript\n.\ngetScriptById\n(\ntestScript\n.\ngetScriptId\n(),\n \nnew\n \nCallbackGetScriptById\n()\n \n{\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonRequestSucceed\n(\nScorocodeScript\n \nscript\n)\n \n{\n\n        \n//sdk returned script\n\n    \n}\n\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonRequestFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n        \n//error during request\n\n    \n}\n\n\n});\n\n\n\n\n\n\n\n\n\n\n.updateScript(scriptToUpdateId, newScriptInfo, callback)\n\n\n\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0441\u043a\u0440\u0438\u043f\u0442\u0435\n\n\n\n\n\n\n\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n\n\n\u0422\u0438\u043f\n\n\n\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430\n\n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n\n\n\n\n\n\n\n\n\n\nscriptToUpdateId\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nId \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c\u043e\u0433\u043e \u0441\u043a\u0440\u0438\u043f\u0442\u0430\n\n\n\"123434451234\"\n\n\n\n\n\n\nnewScriptInfo\n\n\nScorocodeScript\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\n\u041d\u043e\u0432\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0441\u043a\u0440\u0438\u043f\u0442\u0435\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\ncallback\n\n\nCallbackUpdateScript\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nCallback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440\n\n\nScorocodeSdk\n.\ninitWith\n(\ndb8a1b41b8543397a798a181d9891b4c\n,\n \n563452bbc611d8106d5da767365897de\n,\n \n28f06b89b62165c33de55265166d8781\n,\n \nnull\n,\n \nnull\n,\n \nnull\n,\n \nnull\n);\n\n\n\nScorocodeScript\n \nnewScript\n \n=\n \nnew\n \nScorocodeScript\n()\n\n        \n.\nsetScriptId\n(\nsdfsdfdsdsfdf\n)\n\n        \n.\nsetScriptName\n(\ntestscript\n)\n\n        \n.\nsetScriptSourceCode\n(\nupdated source code\n);\n\n\n\nScript\n \nscript\n \n=\n \nnew\n \nScript\n();\n\n\nscript\n.\nupdateScript\n(\nassafdfsdf\n,\n \nnewScript\n,\n \nnew\n \nCallbackUpdateScript\n()\n \n{\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonUpdateScriptSucceed\n(\nScorocodeScript\n \nscorocodeScript\n)\n \n{\n\n        \n//script updated\n\n    \n}\n\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonUpdateScriptFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n        \n//error during request\n\n    \n}\n\n\n});\n\n\n\n\n\n\n\n\n\n\n.deleteScript(scriptToDeleteId, callback)\n\n\n\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0441\u043a\u0440\u0438\u043f\u0442\u0430 \u043f\u043e \u0435\u0433\u043e id\n\n\n\n\n\n\n\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\n\n\n\u0422\u0438\u043f\n\n\n\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430\n\n\n\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n\n\n\n\n\n\n\n\n\n\nscriptToDeleteId\n\n\nString\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nId \u0443\u0434\u0430\u043b\u044f\u0435\u043c\u043e\u0433\u043e \u0441\u043a\u0440\u0438\u043f\u0442\u0430\n\n\n\"fdsfsdfdsd\"\n\n\n\n\n\n\ncallback\n\n\nCallbackDeleteScript\n\n\n\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439\n\n\nCallback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n\n\n\u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435\n\n\n\n\n\n\n\n\n\u041f\u0440\u0438\u043c\u0435\u0440\n\n\nScorocodeSdk\n.\ninitWith\n(\ndb8a1b41b8543397a798a181d9891b4c\n,\n \n563452bbc611d8106d5da767365897de\n,\n \n28f06b89b62165c33de55265166d8781\n,\n \nnull\n,\n \nnull\n,\n \nnull\n,\n \nnull\n);\n\n\n\nnew\n \nScript\n().\ndeleteScript\n(\nscriptId\n,\n \nnew\n \nCallbackDeleteScript\n()\n \n{\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonScriptDeleted\n()\n \n{\n\n       \n//script deleted\n\n    \n}\n\n\n    \n@Override\n\n    \npublic\n \nvoid\n \nonDeletionFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n        \n//error during request\n\n    \n}\n\n\n});", 
            "title": "ScorocodeScript"
        }, 
        {
            "location": "/Java/ScorocodeScript/#new-scorocodescript", 
            "text": "\u041a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440 ScorocodeScript  ScorocodeSdk . initWith ( db8a1b41b8543397a798a181d9891b4c ,   563452bbc611d8106d5da767365897de ,   28f06b89b62165c33de55265166d8781 ,   null ,   null ,   null ,   null );  ScorocodeScript   newScript   =   new   ScorocodeScript ();    \u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435  \u0414\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u043a\u043b\u0430\u0441\u0441\u0430 ScorocodeScript \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f SDK \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c MasterKey.", 
            "title": "new ScorocodeScript()"
        }, 
        {
            "location": "/Java/ScorocodeScript/#createscriptscript-callback", 
            "text": "\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0441\u043a\u0440\u0438\u043f\u0442\u0430     \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440  \u0422\u0438\u043f  \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430  \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435  \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f      script  ScorocodeScript  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  \u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0435\u043c\u043e\u043c \u0441\u043a\u0440\u0438\u043f\u0442\u0435  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435    callback  CallbackCreateScript  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Callback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435     \u041f\u0440\u0438\u043c\u0435\u0440  ScorocodeSdk . initWith ( db8a1b41b8543397a798a181d9891b4c ,   563452bbc611d8106d5da767365897de ,   28f06b89b62165c33de55265166d8781 ,   null ,   null ,   null ,   null );  ScorocodeScript   script   =   new   ScorocodeScript ();  script . setScriptName ( testscript.js );  script . setScriptPath ( testscript.js );  new   Script (). createScript ( script ,   new   CallbackCreateScript ()   { \n     @Override \n     public   void   onScriptCreated ( ScorocodeScript   script )   { \n          //script created \n     } \n\n     @Override \n     public   void   onCreationFailed ( String   errorCode ,   String   errorMessage )   { \n         //error during request          \n     }  });", 
            "title": ".createScript(script, callback)"
        }, 
        {
            "location": "/Java/ScorocodeScript/#getscriptbyidscriptid-callback", 
            "text": "\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0441\u043a\u0440\u0438\u043f\u0442\u0435 \u043f\u043e \u0435\u0433\u043e id.     \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440  \u0422\u0438\u043f  \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430  \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435  \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f      scriptId  ScorocodeScript  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Id \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043c\u043e\u0433\u043e \u0441\u043a\u0440\u0438\u043f\u0442\u0430  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435    callback  CallbackGetScriptById  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Callback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435     \u041f\u0440\u0438\u043c\u0435\u0440  ScorocodeSdk . initWith ( db8a1b41b8543397a798a181d9891b4c ,   563452bbc611d8106d5da767365897de ,   28f06b89b62165c33de55265166d8781 ,   null ,   null ,   null ,   null );  Script   script   =   new   Script ();  script . getScriptById ( testScript . getScriptId (),   new   CallbackGetScriptById ()   { \n     @Override \n     public   void   onRequestSucceed ( ScorocodeScript   script )   { \n         //sdk returned script \n     } \n\n     @Override \n     public   void   onRequestFailed ( String   errorCode ,   String   errorMessage )   { \n         //error during request \n     }  });", 
            "title": ".getScriptById(scriptId, callback)"
        }, 
        {
            "location": "/Java/ScorocodeScript/#updatescriptscripttoupdateid-newscriptinfo-callback", 
            "text": "\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0441\u043a\u0440\u0438\u043f\u0442\u0435     \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440  \u0422\u0438\u043f  \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430  \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435  \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f      scriptToUpdateId  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Id \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c\u043e\u0433\u043e \u0441\u043a\u0440\u0438\u043f\u0442\u0430  \"123434451234\"    newScriptInfo  ScorocodeScript  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  \u041d\u043e\u0432\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0441\u043a\u0440\u0438\u043f\u0442\u0435  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435    callback  CallbackUpdateScript  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Callback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435     \u041f\u0440\u0438\u043c\u0435\u0440  ScorocodeSdk . initWith ( db8a1b41b8543397a798a181d9891b4c ,   563452bbc611d8106d5da767365897de ,   28f06b89b62165c33de55265166d8781 ,   null ,   null ,   null ,   null );  ScorocodeScript   newScript   =   new   ScorocodeScript () \n         . setScriptId ( sdfsdfdsdsfdf ) \n         . setScriptName ( testscript ) \n         . setScriptSourceCode ( updated source code );  Script   script   =   new   Script ();  script . updateScript ( assafdfsdf ,   newScript ,   new   CallbackUpdateScript ()   { \n     @Override \n     public   void   onUpdateScriptSucceed ( ScorocodeScript   scorocodeScript )   { \n         //script updated \n     } \n\n     @Override \n     public   void   onUpdateScriptFailed ( String   errorCode ,   String   errorMessage )   { \n         //error during request \n     }  });", 
            "title": ".updateScript(scriptToUpdateId, newScriptInfo, callback)"
        }, 
        {
            "location": "/Java/ScorocodeScript/#deletescriptscripttodeleteid-callback", 
            "text": "\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0441\u043a\u0440\u0438\u043f\u0442\u0430 \u043f\u043e \u0435\u0433\u043e id     \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440  \u0422\u0438\u043f  \u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430  \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435  \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f      scriptToDeleteId  String  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Id \u0443\u0434\u0430\u043b\u044f\u0435\u043c\u043e\u0433\u043e \u0441\u043a\u0440\u0438\u043f\u0442\u0430  \"fdsfsdfdsd\"    callback  CallbackDeleteScript  \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439  Callback, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430.  \u0441\u043c. \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0438\u0436\u0435     \u041f\u0440\u0438\u043c\u0435\u0440  ScorocodeSdk . initWith ( db8a1b41b8543397a798a181d9891b4c ,   563452bbc611d8106d5da767365897de ,   28f06b89b62165c33de55265166d8781 ,   null ,   null ,   null ,   null );  new   Script (). deleteScript ( scriptId ,   new   CallbackDeleteScript ()   { \n     @Override \n     public   void   onScriptDeleted ()   { \n        //script deleted \n     } \n\n     @Override \n     public   void   onDeletionFailed ( String   errorCode ,   String   errorMessage )   { \n         //error during request \n     }  });", 
            "title": ".deleteScript(scriptToDeleteId, callback)"
        }, 
        {
            "location": "/Java/Storehouse/", 
            "text": "\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \"\u0421\u043a\u043b\u0430\u0434\"\n\n\n\u0414\u0430\u043d\u043d\u0430\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0434\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \"\u0421\u043a\u043b\u0430\u0434\". \u0418\u0441\u0445\u043e\u0434\u043d\u044b\u0439 \u043a\u043e\u0434 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0432 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0438 \nhttps://github.com/Scorocode/scorocode-sample-storehouse\n.\n\n\n\u0414\u0430\u043d\u043d\u043e\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0432\u043e\u0434\u0438\u0442 \u0443\u0447\u0435\u0442 \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u044b\u0445 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u043e\u0432 \u043d\u0430 \u0441\u043a\u043b\u0430\u0434\u0435 \u043f\u043e\u0441\u0442\u0430\u0432\u0449\u0438\u043a\u0430 \u0438 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442:\n\n\n\n\n\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u0411\u0414 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\n\n\n\u041f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\n\n\n\u041f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u0434\u0435\u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.\n\n\n\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u043e\u0432 \u043d\u0430 \u0441\u043a\u043b\u0430\u0434\u0435\n\n\n\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430 \u0432 \u0411\u0414\n\n\n\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430 \u0438\u0437 \u0411\u0414\n\n\n\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043c\u043e\u0434\u0435\u043b\u0438 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430\n\n\n\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043c\u043e\u0434\u0435\u043b\u0438 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430\n\n\n\u0412\u044b\u0431\u0440\u0430\u0442\u044c \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u044e\u0449\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0444\u0438\u043b\u044c\u0442\u0440\n\n\n\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u043b\u0438\u0441\u0442 \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438\n\n\n\u041e\u0442\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e\n\n\n\u041e\u043f\u043e\u0432\u0435\u0441\u0442\u0438\u0442\u044c \u043e\u0431 \u043e\u0442\u0433\u0440\u0443\u0437\u043a\u0435 \u0431\u0443\u0445\u0433\u0430\u043b\u0442\u0435\u0440\u0438\u044e \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 email \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f\n\n\n\u041e\u043f\u043e\u0432\u0435\u0441\u0442\u0438\u0442\u044c \u0433\u0440\u0443\u0437\u0447\u0438\u043a\u0430 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 push \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f.\n\n\n\u041e\u043f\u043e\u0432\u0435\u0441\u0442\u0438\u0442\u044c \u043a\u0443\u0440\u044c\u0435\u0440\u0430 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 sms \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f.\n\n\n\u041f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u043f\u0435\u0440\u0435\u0441\u0447\u0435\u0442 \u0431\u0430\u043b\u0430\u043d\u0441\u0430 \u0444\u0438\u0440\u043c\u044b \u0441 \u0443\u0447\u0435\u0442\u043e\u043c \u043e\u0442\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0445 \u043a \u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u043c\u043e\u043c\u0435\u043d\u0442\u0443 \u043c\u043e\u0434\u0435\u043b\u0435\u0439.\n\n\n\n\n\u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f:\n\n\n\u0421\u043e\u0437\u0434\u0430\u043d\u0430 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044f \nstorehouse\n \u0441\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c\u0438 \u043f\u043e\u043b\u044f\u043c\u0438:\n\n\n\n\nplatform (String)\n\n\ncameraInfo (String)\n\n\ndeviceName (String)\n\n\ncolorsAvailable (Array)\n\n\ndevicePrice (Number)\n\n\nbuyers (Array)\n\n\nlastSend (Date)\n\n\nsendInfo (File)\n\n\n\n\n\u0412 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u0443\u044e \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044e \nRoles\n \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u044b 3 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0441\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438 \u043f\u043e\u043b\u044f \nname\n \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e:\n\n\n\n\ndeliveryPerson\n\n\naccountantPerson\n\n\nloaderPerson\n\n\n\n\n\u0421\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0439 \u044d\u043a\u0440\u0430\u043d \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.\n\n\n\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0439 \u044d\u043a\u0440\u0430\u043d \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \nLoginActivity\n. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0432 Android Studio \u0432\u044b\u0431\u0435\u0440\u0435\u043c \nFile \u2192 New \u2192 Activity \u2192 Empty Activity\n \u0438 \u0432 layout-\u0444\u0430\u0439\u043b \u0434\u0430\u043d\u043d\u043e\u0439 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043a\u043e\u0434:\n\n\n?xml version=\n1.0\n encoding=\nutf-8\n?\n\n\nRelativeLayout\n \nxmlns:android=\nhttp://schemas.android.com/apk/res/android\n\n    \nxmlns:tools=\nhttp://schemas.android.com/tools\n\n    \nandroid:id=\n@+id/activity_login\n\n    \nandroid:layout_width=\nmatch_parent\n\n    \nandroid:layout_height=\nmatch_parent\n\n    \nandroid:paddingBottom=\n@dimen/activity_vertical_margin\n\n    \nandroid:paddingLeft=\n@dimen/activity_horizontal_margin\n\n    \nandroid:paddingRight=\n@dimen/activity_horizontal_margin\n\n    \nandroid:paddingTop=\n@dimen/activity_vertical_margin\n\n    \ntools:context=\nprof_itgroup.ru.storehouseapp.Activities.LoginActivity\n\n    \nLinearLayout\n\n        \nandroid:layout_width=\nmatch_parent\n\n        \nandroid:layout_height=\nwrap_content\n\n        \nandroid:gravity=\ncenter\n\n        \nandroid:orientation=\nvertical\n\n        \nTextView\n\n            \nstyle=\n@style/label_style\n\n            \nandroid:layout_marginTop=\n16dp\n\n            \nandroid:text=\n@string/login\n \n/\n\n        \nEditText\n\n            \nandroid:id=\n@+id/etEmail\n\n            \nandroid:gravity=\ncenter\n\n            \nstyle=\n@style/textStyle\n\n            \nandroid:hint=\n@string/login_hint\n \n/\n\n        \nTextView\n\n            \nstyle=\n@style/label_style\n\n            \nandroid:layout_marginTop=\n16dp\n\n            \nandroid:text=\n@string/password\n/\n\n        \nEditText\n\n            \nandroid:gravity=\ncenter\n\n            \nandroid:id=\n@+id/etPassword\n\n            \nstyle=\n@style/textStyle\n\n            \nandroid:hint=\n@string/password_hint\n\n            \nandroid:inputType=\ntextPassword\n\n            \nandroid:maxLines=\n1\n \n/\n\n        \nLinearLayout\n\n            \nandroid:layout_width=\nwrap_content\n\n            \nandroid:layout_height=\nwrap_content\n\n            \nandroid:gravity=\ncenter_horizontal\n\n            \nandroid:orientation=\nvertical\n\n            \nButton\n\n                \nandroid:id=\n@+id/btnLogin\n\n                \nandroid:layout_width=\nmatch_parent\n\n                \nandroid:layout_height=\nwrap_content\n\n                \nandroid:layout_marginTop=\n4dp\n\n                \nandroid:text=\n@string/login_button_text\n \n/\n\n            \nButton\n\n                \nandroid:id=\n@+id/btnRegister\n\n                \nandroid:layout_width=\nmatch_parent\n\n                \nandroid:layout_height=\nwrap_content\n\n                \nandroid:layout_marginTop=\n4dp\n\n                \nandroid:text=\n@string/register_button_text\n \n/\n\n        \n/LinearLayout\n\n    \n/LinearLayout\n\n\n/RelativeLayout\n\n\n\n\n\u0421\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0439 \u044d\u043a\u0440\u0430\u043d \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u043a\u043b\u0430\u0441\u0441\u0443 \nLoginActivity\n, \u043f\u043e\u043a\u0430\u0437\u0430\u043d \u043d\u0430 \u0440\u0438\u0441\u0443\u043d\u043a\u0435 1.1. \n\n\n\n\n\u0420\u0438\u0441\u0443\u043d\u043e\u043a 1.1 \u2013 \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0439 \u044d\u043a\u0440\u0430\u043d \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.\n\n\n\u0412 \u043c\u0435\u0442\u043e\u0434 \nonCreate\n \u043a\u043b\u0430\u0441\u0441\u0430 \nLoginActivity\n \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043a\u043e\u0434:\n\n\n@Override\n\n\nprotected\n \nvoid\n \nonCreate\n(\nBundle\n \nsavedInstanceState\n)\n \n{\n\n    \nsuper\n.\nonCreate\n(\nsavedInstanceState\n);\n\n    \nsetContentView\n(\nR\n.\nlayout\n.\nactivity_login\n);\n\n    \nif\n \n(\nisUserLogined\n(\nthis\n))\n \n{\n\n        \nMainActivity\n.\ndisplay\n(\nthis\n);\n\n    \n}\n\n    \nScorocodeSdk\n.\ninitWith\n(\nAPPLICATION_ID\n,\n \nCLIENT_KEY\n,\n \nnull\n,\n \nFILE_KEY\n,\n \nMESSAGE_KEY\n,\n \nSCRIPT_KEY\n,\n \nnull\n);\n\n    \nButterKnife\n.\nbind\n(\nthis\n);\n\n\n}\n\n\n\n\n\n\n\u0412 \u043c\u0435\u0442\u043e\u0434\u0435 \nonCreate\n \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \nScorocodeSdk\n \u043a\u043b\u044e\u0447\u0430\u043c\u0438 \nappId\n, \nclientKey\n (android), \nfileKey\n, \nmessageKey\n, \nscriptKey\n \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 \nScorocodeSdk.initWith(...)\n; \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043a\u043b\u044e\u0447\u0438 \u043c\u043e\u0436\u043d\u043e \u043d\u0430 \u0432\u043a\u043b\u0430\u0434\u043a\u0435 \u00ab\u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u044c\u00bb \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a \u043f\u0440\u043e\u0435\u043a\u0442\u0430.\n\n\n\u041d\u0430 \u0434\u0430\u043d\u043d\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0411\u0414 \u043c\u043e\u0436\u0435\u0442 \u0432\u0432\u0435\u0441\u0442\u0438 \u0441\u0432\u043e\u0439 \u043b\u043e\u0433\u0438\u043d \u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u0435. \u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 \n.login()\n \u043a\u043b\u0430\u0441\u0441\u0430 \nUser\n. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430 \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u043e \u0432 \u043b\u0438\u0441\u0442\u0438\u043d\u0433\u0435:\n\n\n@OnClick\n(\nR\n.\nid\n.\nbtnLogin\n)\n\n\npublic\n \nvoid\n \nonBtnLoginClicked\n()\n \n{\n\n    \nUser\n \nuser\n \n=\n \nnew\n \nUser\n();\n\n    \nuser\n.\nlogin\n(\netEmail\n.\ngetText\n().\ntoString\n(),\n \netPassword\n.\ngetText\n().\ntoString\n(),\n \nnew\n \nCallbackLoginUser\n()\n \n{\n\n        \n@Override\n\n        \npublic\n \nvoid\n \nonLoginSucceed\n(\nResponseLogin\n \nresponseLogin\n)\n \n{\n\n            \nDocumentInfo\n \nuserInfo\n \n=\n \nresponseLogin\n.\ngetResult\n().\ngetUserInfo\n();\n\n            \nsaveUserInfo\n(\nuserInfo\n);\n\n            \nMainActivity\n.\ndisplay\n(\nLoginActivity\n.\nthis\n);\n\n        \n}\n\n        \n@Override\n\n        \npublic\n \nvoid\n \nonLoginFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n            \nHelper\n.\nshowToast\n(\ngetBaseContext\n(),\n \nR\n.\nstring\n.\nerror_login\n);\n\n        \n}\n\n    \n});\n\n\n}\n\n\n\n\n\n\n\u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u043c\u0435\u0442\u043e\u0434\u0435 \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043d\u043e\u0432\u044b\u0439 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043a\u043b\u0430\u0441\u0441\u0430 \nUser\n \u0438 \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u0435\u0433\u043e \u043c\u0435\u0442\u043e\u0434 \nlogin\n \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e email \u0438 password \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043c\u044b \u0431\u0435\u0440\u0435\u043c \u0438\u0437 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \nEditText\n. \u041c\u0435\u0442\u043e\u0434 \nlogin\n \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442 \u0442\u043e\u0442 \u0444\u0430\u043a\u0442, \u0447\u0442\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0441 \u0442\u0430\u043a\u0438\u043c email \u0438 \u043f\u0430\u0440\u043e\u043b\u0435\u043c \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0432 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u00abusers\u00bb.\n\n\n\u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0435\u0441\u043b\u0438 \u0432 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u00abusers\u00bb \u0438\u043c\u0435\u0435\u0442\u0441\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c\u0438 email \u0438 password, \u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d \u043c\u0435\u0442\u043e\u0434 \nonLoginSucceed(...) callback\n \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 \u0438\u043d\u0430\u0447\u0435 - \nonFoginFailed(...)\n. \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0438\u0442\u044c\u0441\u044f \u0432 \u043d\u0430\u043b\u0438\u0447\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0441 \u0442\u0430\u043a\u0438\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0432 \u043d\u0430\u0448\u0435\u0439 \u0411\u0414 \u0438 \u043f\u0440\u0438\u043d\u044f\u0442\u044c \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0438\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f.\n\n\n\u041d\u0430 \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0435 (\u043f\u043e\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c \u043d\u0430 \u0440\u0438\u0441\u0443\u043d\u043a\u0435 1.1) \u0442\u0430\u043a \u0436\u0435 \u0438\u043c\u0435\u0435\u0442\u0441\u044f \u043a\u043d\u043e\u043f\u043a\u0430 \u00ab\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u00bb \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0449\u0430\u044f \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0435 (\u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0435\u0433\u043e \u0432 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044e \u00abusers\u00bb \u0411\u0414). \u041f\u0440\u0438\u0432\u044f\u0436\u0435\u043c \u043a \u0434\u0430\u043d\u043d\u043e\u0439 \u043a\u043d\u043e\u043f\u043a\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043d\u0430\u0436\u0430\u0442\u0438\u044f \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f:\n\n\n@OnClick\n(\nR\n.\nid\n.\nbtnRegister\n)\n\n\npublic\n \nvoid\n \nonBtnRegisterClicked\n()\n \n{\n\n    \nRegisterActivity\n.\ndisplay\n(\nthis\n);\n\n\n}\n\n\n\n\n\n\n\u042d\u043a\u0440\u0430\u043d \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\n\n\n\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043d\u043e\u0432\u0443\u044e \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \nRegisterActivity\n \u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0432 layout-\u0444\u0430\u0439\u043b \u0434\u0430\u043d\u043d\u043e\u0439 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 xml \u043a\u043e\u0434:\n\n\n?xml version=\n1.0\n encoding=\nutf-8\n?\n\n\nLinearLayout\n \nxmlns:android=\nhttp://schemas.android.com/apk/res/android\n\n    \nxmlns:tools=\nhttp://schemas.android.com/tools\n\n    \nandroid:id=\n@+id/activity_register\n\n    \nandroid:layout_width=\nmatch_parent\n\n    \nandroid:layout_height=\nmatch_parent\n\n    \nandroid:gravity=\ncenter_horizontal\n\n    \nandroid:orientation=\nvertical\n\n    \nandroid:paddingBottom=\n@dimen/activity_vertical_margin\n\n    \nandroid:paddingLeft=\n@dimen/activity_horizontal_margin\n\n    \nandroid:paddingRight=\n@dimen/activity_horizontal_margin\n\n    \nandroid:paddingTop=\n@dimen/activity_vertical_margin\n\n    \ntools:context=\nprof_itgroup.ru.storehouseapp.Activities.RegisterActivity\n\n    \nTextView\n\n        \nstyle=\n@style/label_style\n\n        \nandroid:text=\n@string/register_username\n \n/\n\n    \nEditText\n\n        \nandroid:id=\n@+id/etUsername\n\n        \nstyle=\n@style/textStyle\n\n        \nandroid:hint=\n@string/register_username_hint\n/\n\n    \nTextView\n\n        \nandroid:layout_marginTop=\n16dp\n\n        \nstyle=\n@style/label_style\n\n        \nandroid:text=\n@string/register_email\n \n/\n\n    \nEditText\n\n        \nandroid:id=\n@+id/etEmail\n\n        \nstyle=\n@style/textStyle\n\n        \nandroid:hint=\n@string/register_email_hint\n/\n\n    \nTextView\n\n        \nandroid:layout_marginTop=\n16dp\n\n        \nstyle=\n@style/label_style\n\n        \nandroid:text=\n@string/register_password\n \n/\n\n    \nEditText\n\n        \nandroid:id=\n@+id/etPassword\n\n        \nstyle=\n@style/textStyle\n\n        \nandroid:inputType=\ntextPassword\n\n        \nandroid:hint=\n@string/register_email_password\n/\n\n    \nEditText\n\n        \nandroid:id=\n@+id/etPasswordCheck\n\n        \nstyle=\n@style/textStyle\n\n        \nandroid:inputType=\ntextPassword\n\n        \nandroid:hint=\n@string/register_email_password_again\n/\n\n    \nButton\n\n        \nandroid:layout_marginTop=\n32dp\n\n        \nandroid:id=\n@+id/btnRegister\n\n        \nstyle=\n@style/textStyle\n\n        \nandroid:text=\n@string/btn_register_text\n/\n\n\n/LinearLayout\n\n\n\n\n\u0414\u0430\u043d\u043d\u0430\u044f \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u044d\u043a\u0440\u0430\u043d \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043d\u0430 \u0440\u0438\u0441\u0443\u043d\u043a\u0435 1.2\n\n\n\n\n\u0420\u0438\u0441\u0443\u043d\u043e\u043a 1.2 \u2014 \u044d\u043a\u0440\u0430\u043d \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n\n\u041d\u0430 \u0434\u0430\u043d\u043d\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0435 \u0432\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0432\u0441\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u043f\u043e\u043b\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 (\u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0437\u0443\u044e\u0449\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f). \u0414\u043e\u0431\u0430\u0432\u0438\u043c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043d\u0430\u0436\u0430\u0442\u0438\u044f \u0434\u043b\u044f \u043a\u043d\u043e\u043f\u043a\u0438 \u00ab\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u00bb \u0432\u044b\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u043c\u0435\u0442\u043e\u0434 \n.register\n \u043a\u043b\u0430\u0441\u0441\u0430 \nUser\n \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043d\u0438\u0436\u0435:\n\n\n@OnClick\n(\nR\n.\nid\n.\nbtnRegister\n)\n\n\npublic\n \nvoid\n \nonBtnRegisterClicked\n()\n \n{\n\n    \nString\n \nuserName\n \n=\n \netUsername\n.\ngetText\n().\ntoString\n();\n\n    \nString\n \nemail\n \n=\n \netEmail\n.\ngetText\n().\ntoString\n();\n\n    \nString\n \npassword\n \n=\n \netPassword\n.\ngetText\n().\ntoString\n();\n\n    \nString\n \npasswordCheck\n \n=\n \netPasswordCheck\n.\ngetText\n().\ntoString\n();\n\n\n    \nif\n(\nisInputValid\n(\nuserName\n,\n \nemail\n,\n \npassword\n,\n \npasswordCheck\n))\n \n{\n\n        \nnew\n \nUser\n().\nregister\n(\nuserName\n,\n \nemail\n,\n \npassword\n,\n \nnew\n \nCallbackRegisterUser\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonRegisterSucceed\n()\n \n{\n\n                \nToast\n.\nmakeText\n(\nRegisterActivity\n.\nthis\n,\n \ngetResources\n().\ngetString\n(\nR\n.\nstring\n.\nregister_succeed\n),\n \nToast\n.\nLENGTH_SHORT\n).\nshow\n();\n\n                \nLoginActivity\n.\ndisplay\n(\nRegisterActivity\n.\nthis\n);\n\n            \n}\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonRegisterFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \nToast\n.\nmakeText\n(\nRegisterActivity\n.\nthis\n,\n \ngetResources\n().\ngetString\n(\nR\n.\nstring\n.\nerror_register\n),\n \nToast\n.\nLENGTH_SHORT\n).\nshow\n();\n\n            \n}\n\n        \n});\n\n    \n}\n \nelse\n \n{\n\n        \nToast\n.\nmakeText\n(\nthis\n,\n \ngetResources\n().\ngetString\n(\nR\n.\nstring\n.\nwrong_data\n)\n \n,\n \nToast\n.\nLENGTH_SHORT\n).\nshow\n();\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u043c\u0435\u0442\u043e\u0434\u0435 \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0435 \u0432 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \nEditText\n, \u0430 \u0438\u043c\u0435\u043d\u043d\u043e: \u0438\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0435\u0433\u043e email, \u043f\u0430\u0440\u043e\u043b\u044c \u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e (\u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438).\n\n\n\u0414\u0430\u043b\u0435\u0435 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 isInputValid \u043c\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u043f\u043e\u043b\u044f \u043d\u0435 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043f\u0443\u0441\u0442\u044b\u043c\u0438 \u0438 \u0447\u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u043e\u0435 \u0432 \u043f\u043e\u043b\u044f \u043f\u0430\u0440\u043e\u043b\u044f \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043f\u0430\u0440\u043e\u043b\u044f \u0438\u0434\u0435\u043d\u0442\u0438\u0447\u043d\u044b, \u043f\u043e\u0441\u043b\u0435 \u0447\u0435\u0433\u043e \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u043c\u0435\u0442\u043e\u0434 \n.register\n \u043a\u043b\u0430\u0441\u0441\u0430 \nUser\n.\n\n\n\u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0435\u0441\u043b\u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u0440\u043e\u0448\u043b\u0430 \u0443\u0441\u043f\u0435\u0448\u043d\u043e (\u0442.\u0435 \u0435\u0441\u043b\u0438 sdk \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d, \u0432\u0441\u0435 \u043a\u043b\u044e\u0447\u0438 \u0443\u043a\u0430\u0437\u0430\u043d\u044b \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u0438 \u043d\u0435\u0442 \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442\u0430 \u0441 \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u043c\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438), \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d \u043c\u0435\u0442\u043e\u0434  \nonRegisterSucceed(...) callback\n \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 \u0438\u043d\u0430\u0447\u0435 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d \u043c\u0435\u0442\u043e\u0434 \nonRegisterFailed(...)\n.\n\n\n\u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043f\u0440\u0438 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432\u044b\u0434\u0430\u0435\u0442\u0441\u044f Toast-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e \u0442\u043e\u043c, \u0447\u0442\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d \u0438 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \nLoginActivity\n \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043c\u043e\u0433 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0438 \u043f\u0440\u0438\u0441\u0442\u0443\u043f\u0438\u0442\u044c \u043a \u0440\u0430\u0431\u043e\u0442\u0435 \u0441 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u043c.\n\n\n\u0413\u043b\u0430\u0432\u043d\u044b\u0439 \u044d\u043a\u0440\u0430\u043d \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.\n\n\n\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0433\u043b\u0430\u0432\u043d\u044b\u0439 \u044d\u043a\u0440\u0430\u043d \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \nMainActivity\n \u0438 \u0432 layout-\u0444\u0430\u0439\u043b \u0434\u0430\u043d\u043d\u043e\u0439 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 xml \u043a\u043e\u0434:\n\n\n?xml version=\n1.0\n encoding=\nutf-8\n?\n\n\nRelativeLayout\n\n    \nxmlns:android=\nhttp://schemas.android.com/apk/res/android\n\n    \nxmlns:tools=\nhttp://schemas.android.com/tools\n\n    \nandroid:id=\n@+id/activity_main\n\n    \nandroid:layout_width=\nmatch_parent\n\n    \nandroid:layout_height=\nmatch_parent\n\n    \nandroid:paddingLeft=\n@dimen/activity_horizontal_margin\n\n    \nandroid:paddingRight=\n@dimen/activity_horizontal_margin\n\n    \nandroid:paddingTop=\n@dimen/activity_vertical_margin\n\n    \nandroid:paddingBottom=\n@dimen/activity_vertical_margin\n\n    \ntools:context=\nprof_itgroup.ru.storehouseapp.Activities.MainActivity\n\n    \nListView\n\n        \nandroid:id=\n@+id/lvItemsInStorehouse\n\n        \nandroid:layout_width=\nmatch_parent\n\n        \nandroid:layout_height=\nwrap_content\n/\n\n\n/RelativeLayout\n\n\n\n\n\n\n\u0410\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \nListView\n \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0442\u043e\u0432\u0430\u0440\u0430\u0445, \u0445\u0440\u0430\u043d\u044f\u0449\u0438\u0445\u0441\u044f \u0432 \u0411\u0414. \u041a\u0440\u043e\u043c\u0435 \u0442\u043e\u0433\u043e \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0438\u043a\u043e\u043d\u043a\u0438 \nActionBar\n \u043e \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0431\u0443\u0434\u0435\u0442 \u0441\u043a\u0430\u0437\u0430\u043d\u043e \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0439.\n\n\n\u0414\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0430\u0434\u0430\u043f\u0442\u0435\u0440 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \nStoreItemAdapter\n \u043a\u043e\u0434 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043f\u043e\u043a\u0430\u0437\u0430\u043d \u043d\u0438\u0436\u0435:\n\n\npackage\n \nprof_itgroup.ru.storehouseapp.Objects\n;\n\n\nimport\n \nandroid.content.Context\n;\n\n\nimport\n \nandroid.support.annotation.NonNull\n;\n\n\nimport\n \nandroid.view.LayoutInflater\n;\n\n\nimport\n \nandroid.view.View\n;\n\n\nimport\n \nandroid.view.ViewGroup\n;\n\n\nimport\n \nandroid.widget.BaseAdapter\n;\n\n\nimport\n \nandroid.widget.TextView\n;\n\n\nimport\n \njava.util.List\n;\n\n\nimport\n \nbutterknife.BindView\n;\n\n\nimport\n \nbutterknife.ButterKnife\n;\n\n\nimport\n \nprof_itgroup.ru.storehouseapp.Activities.ItemDetailsActivity\n;\n\n\nimport\n \nprof_itgroup.ru.storehouseapp.R\n;\n\n\nimport\n \nru.profit_group.scorocode_sdk.scorocode_objects.DocumentInfo\n;\n\n\n\npublic\n \nclass\n \nStoredItemsAdapter\n \nextends\n \nBaseAdapter\n \n{\n\n    \nprivate\n \nContext\n \ncontext\n;\n\n    \nprivate\n \nList\nDocumentInfo\n \nstoredItems\n;\n\n    \nprivate\n \nint\n \nlayoutId\n;\n\n    \nprivate\n \nLayoutInflater\n \ninflater\n;\n\n    \nprivate\n \nDocumentFields\n \nfields\n;\n\n    \npublic\n \nStoredItemsAdapter\n(\nContext\n \ncontext\n,\n \n@NonNull\n \nList\nDocumentInfo\n \nstoredItems\n,\n \nint\n \nlayoutId\n)\n \n{\n\n        \nthis\n.\ncontext\n \n=\n \ncontext\n;\n\n        \nthis\n.\nstoredItems\n \n=\n \nstoredItems\n;\n\n        \nthis\n.\nlayoutId\n \n=\n \nlayoutId\n;\n\n        \ninflater\n \n=\n \nLayoutInflater\n.\nfrom\n(\ncontext\n);\n\n        \nfields\n \n=\n \nnew\n \nDocumentFields\n(\ncontext\n,\n \nnull\n);\n\n    \n}\n\n    \n@Override\n\n    \npublic\n \nint\n \ngetCount\n()\n \n{\n\n        \nreturn\n \nstoredItems\n.\nsize\n();\n\n    \n}\n\n    \n@Override\n\n    \npublic\n \nObject\n \ngetItem\n(\nint\n \nposition\n)\n \n{\n\n        \nreturn\n \nstoredItems\n.\nget\n(\nposition\n);\n\n    \n}\n\n    \n@Override\n\n    \npublic\n \nlong\n \ngetItemId\n(\nint\n \nposition\n)\n \n{\n\n        \nreturn\n \nposition\n;\n\n    \n}\n\n    \n@Override\n\n    \npublic\n \nView\n \ngetView\n(\nint\n \nposition\n,\n \nView\n \nview\n,\n \nViewGroup\n \nparent\n)\n \n{\n\n        \nViewHolder\n \nholder\n;\n\n        \nif\n \n(\nview\n \n!=\n \nnull\n)\n \n{\n\n            \nholder\n \n=\n \n(\nViewHolder\n)\n \nview\n.\ngetTag\n();\n\n        \n}\n \nelse\n \n{\n\n            \nview\n \n=\n \ninflater\n.\ninflate\n(\nlayoutId\n,\n \nparent\n,\n \nfalse\n);\n\n            \nholder\n \n=\n \nnew\n \nViewHolder\n(\nview\n);\n\n            \nview\n.\nsetTag\n(\nholder\n);\n\n        \n}\n\n        \ncustomizeView\n(\nview\n,\n \nholder\n,\n \nstoredItems\n.\nget\n(\nposition\n));\n\n        \nreturn\n \nview\n;\n\n    \n}\n\n    \nprivate\n \nvoid\n \ncustomizeView\n(\nView\n \nview\n,\n \nViewHolder\n \nholder\n,\n \nfinal\n \nDocumentInfo\n \ndocumentInfo\n)\n \n{\n\n        \nString\n \ndeviceName\n \n=\n \n(\nString\n)\n \ndocumentInfo\n.\ngetFields\n().\nget\n(\nfields\n.\ngetDeviceNameField\n());\n\n        \nString\n \ndevicePlatform\n \n=\n \n(\nString\n)\n \ndocumentInfo\n.\ngetFields\n().\nget\n(\nfields\n.\ngetPlatformField\n());\n\n        \nDouble\n \ndevicePrice\n \n=\n \n(\nDouble\n)\n \ndocumentInfo\n.\ngetFields\n().\nget\n(\nfields\n.\ngetDevicePriceField\n());\n\n        \nholder\n.\ntvStoredItemName\n.\nsetText\n(\ndeviceName\n);\n\n        \nholder\n.\ntvStoredItemStatus\n.\nsetText\n(\ndevicePlatform\n);\n\n        \nholder\n.\ntvStoredItemPrice\n.\nsetText\n(\nString\n.\nvalueOf\n(\ndevicePrice\n));\n\n        \nview\n.\nsetOnClickListener\n(\nnew\n \nView\n.\nOnClickListener\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonClick\n(\nView\n \nv\n)\n \n{\n\n                \nItemDetailsActivity\n.\ndisplay\n(\ncontext\n,\n \ndocumentInfo\n);\n\n            \n}\n\n        \n});\n\n    \n}\n\n    \nstatic\n \nclass\n \nViewHolder\n \n{\n\n        \n@BindView\n(\nR\n.\nid\n.\ntvStoredItemName\n)\n \nTextView\n \ntvStoredItemName\n;\n\n        \n@BindView\n(\nR\n.\nid\n.\ntvStoredItemPlatform\n)\n \nTextView\n \ntvStoredItemStatus\n;\n\n        \n@BindView\n(\nR\n.\nid\n.\ntvStoredItemPrice\n)\n \nTextView\n \ntvStoredItemPrice\n;\n\n        \npublic\n \nViewHolder\n(\nView\n \nview\n)\n \n{\n\n            \nButterKnife\n.\nbind\n(\nthis\n,\n \nview\n);\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0441\u043f\u0438\u0441\u043a\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 layout-\u0444\u0430\u0439\u043b:\n\n\n \n?xml version=\n1.0\n encoding=\nutf-8\n?\n\n\nRelativeLayout\n \nxmlns:android=\nhttp://schemas.android.com/apk/res/android\n\n    \nandroid:layout_width=\nmatch_parent\n\n    \nandroid:layout_height=\nmatch_parent\n\n    \nandroid:orientation=\nhorizontal\n\n    \nandroid:padding=\n8dp\n\n    \nTextView\n\n        \nandroid:id=\n@+id/tvStoredItemName\n\n        \nstyle=\n@style/textStyle\n\n        \nandroid:layout_alignParentLeft=\ntrue\n\n        \nandroid:layout_toLeftOf=\n@+id/tvStoredItemPlatform\n\n        \nandroid:text=\n@string/storedItemName\n \n/\n\n    \nTextView\n\n        \nandroid:id=\n@+id/tvStoredItemPlatform\n\n        \nstyle=\n@style/textStyle\n\n        \nandroid:layout_marginRight=\n32dp\n\n        \nandroid:layout_toLeftOf=\n@+id/tvStoredItemPrice\n\n        \nandroid:text=\n@string/storedItemStatus\n \n/\n\n    \nTextView\n\n        \nandroid:id=\n@+id/tvStoredItemPrice\n\n        \nstyle=\n@style/textStyle\n\n        \nandroid:layout_alignParentRight=\ntrue\n\n        \nandroid:text=\n@string/storedItemPrice\n \n/\n\n\n/RelativeLayout\n\n\n\n\n\n\n\u0414\u0430\u043d\u043d\u044b\u0435 \u043e \u0442\u043e\u0432\u0430\u0440\u0430\u0445, \u0445\u0440\u0430\u043d\u044f\u0449\u0438\u0445\u0441\u044f \u0432 \u0411\u0414 \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u0432 \u043c\u0435\u0442\u043e\u0434\u0435 \nonResume()\n \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 \nMainActivity\n. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0432 \u043c\u0435\u0442\u043e\u0434 \nonResume\n \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043a\u043e\u0434:\n\n\n@Override\n\n\nprotected\n \nvoid\n \nonResume\n()\n \n{\n\n    \nsuper\n.\nonResume\n();\n\n    \nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\nCOLLECTION_NAME\n);\n\n    \nquery\n.\nfindDocuments\n(\nnew\n \nCallbackFindDocument\n()\n \n{\n\n        \n@Override\n\n        \npublic\n \nvoid\n \nonDocumentFound\n(\nList\nDocumentInfo\n \ndocumentInfos\n)\n \n{\n\n            \nif\n(\ndocumentInfos\n \n!=\n \nnull\n)\n \n{\n\n                \nsetAdapter\n(\ndocumentInfos\n);\n\n            \n}\n\n        \n}\n\n        \n@Override\n\n        \npublic\n \nvoid\n \nonDocumentNotFound\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n            \nToast\n.\nmakeText\n(\nMainActivity\n.\nthis\n,\n \ngetResources\n().\ngetString\n(\nR\n.\nstring\n.\nerror_get_docs\n),\n \nToast\n.\nLENGTH_SHORT\n).\nshow\n();\n\n        \n}\n\n    \n});\n\n\n}\n\n\n\n\n\n\n\u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u043a\u043e\u0434\u0435 \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \nQuery\n \u043d\u0435 \u0437\u0430\u0434\u0430\u0432\u0430\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 (\u0442.\u0435 \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u043f\u0435\u0440\u0432\u044b\u0435 100 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u0438\u0437 \u0434\u0430\u043d\u043d\u043e\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438) \u0438 \u0434\u0430\u043b\u0435\u0435 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u0435\u0442\u043e\u0434\u0430 findDocument \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b \u0438\u0437 \u043d\u0430\u0448\u0435\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438.\n\n\n\u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0435\u0441\u043b\u0438 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043d\u0430\u0439\u0442\u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b \u043c\u044b \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u0430\u0434\u0430\u043f\u0442\u0435\u0440, \u0438\u043d\u0430\u0447\u0435 \u0432\u044b\u0434\u0430\u0435\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435.\n\n\n\u0422\u0430\u043a \u0436\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0438\u043a\u043e\u043d\u043a\u0438 \u0432 \nActionBar\n \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \nlayout\n \u0444\u0430\u0439\u043b \nmain_activity_menu\n \u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0442\u0443\u0434\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 xml \u043a\u043e\u0434:\n\n\nmenu\n \nxmlns:android=\nhttp://schemas.android.com/apk/res/android\n\n    \nxmlns:app=\nhttp://schemas.android.com/apk/res-auto\n\n    \nitem\n\n        \nandroid:id=\n@+id/action_add_item\n\n        \nandroid:icon=\n@drawable/ic_create_new_folder_white_24dp\n\n        \nandroid:title=\n@string/action_add_item\n\n        \napp:showAsAction=\nalways\n/\n\n    \nitem\n\n        \nandroid:id=\n@+id/action_set_filter\n\n        \nandroid:icon=\n@drawable/ic_filter_list_white_24dp\n\n        \nandroid:title=\n@string/action_filter_item\n\n        \napp:showAsAction=\nifRoom\n/\n\n    \nitem\n\n        \nandroid:id=\n@+id/action_logout\n\n        \nandroid:icon=\n@drawable/ic_exit_to_app_white_24dp\n\n        \nandroid:title=\n@string/action_logout_item\n\n        \napp:showAsAction=\nifRoom\n/\n\n\n\n/menu\n\n\n\n\n\n\n\u0422.\u0435 \u0432 \nActionBar\n \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u044c \u0438\u043a\u043e\u043d\u043a\u0438 \u00ab\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0432 \u0411\u0414\u00bb, \u00ab\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0444\u0438\u043b\u044c\u0442\u0440\u00bb \u0438 \u00ab\u0417\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c \u0430\u043a\u0442\u0438\u0432\u043d\u0443\u044e \u0441\u0435\u0441\u0441\u0438\u044e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u00bb (logout). \u041d\u0430 \u044d\u043a\u0440\u0430\u043d \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u043a\u043e\u043d\u043a\u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430:\n\n\n@Override\n\n\npublic\n \nboolean\n \nonCreateOptionsMenu\n(\nMenu\n \nmenu\n)\n \n{\n\n    \ngetMenuInflater\n().\ninflate\n(\nR\n.\nmenu\n.\nmain_activity_menu\n,\n \nmenu\n);\n\n    \nreturn\n \nsuper\n.\nonCreateOptionsMenu\n(\nmenu\n);\n\n\n}\n\n\n\n\n\n\n\u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u043d\u0430\u0436\u0430\u0442\u0438\u044f \u043d\u0430 \u0438\u043a\u043e\u043d\u043a\u0438 \u0431\u0443\u0434\u0435\u043c \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043d\u0438\u0436\u0435\n\n\n@Override\n\n\npublic\n \nboolean\n \nonOptionsItemSelected\n(\nMenuItem\n \nitem\n)\n \n{\n\n    \nswitch\n \n(\nitem\n.\ngetItemId\n())\n \n{\n\n        \ncase\n \nR\n.\nid\n.\naction_add_item\n:\n\n            \nAddItemActivity\n.\ndisplay\n(\nthis\n);\n\n            \nbreak\n;\n\n\n        \ncase\n \nR\n.\nid\n.\naction_set_filter\n:\n\n            \nnew\n \nFilterDialog\n(\nthis\n).\nshowFilterDialog\n(\nnew\n \nFilterDialog\n.\nCallbackFilterDialog\n()\n \n{\n\n                \n@Override\n\n                \npublic\n \nvoid\n \nonFilterApplied\n(\nList\nDocumentInfo\n \ndocumentInfo\n)\n \n{\n\n                    \nsetAdapter\n(\ndocumentInfo\n);\n\n                \n}\n\n            \n});\n\n            \nbreak\n;\n\n\n        \ncase\n \nR\n.\nid\n.\naction_logout\n:\n\n            \nLoginActivity\n.\nlogout\n(\nthis\n);\n\n            \nbreak\n;\n\n    \n}\n\n    \nreturn\n \nsuper\n.\nonOptionsItemSelected\n(\nitem\n);\n\n\n}\n\n\n\n\n\n\n\u0413\u043e\u0442\u043e\u0432\u044b\u0439 \u044d\u043a\u0440\u0430\u043d \u0434\u0430\u043d\u043d\u043e\u0439 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 \u043f\u043e\u043a\u0430\u0437\u0430\u043d \u043d\u0430 \u0440\u0438\u0441\u0443\u043d\u043a\u0435 2.1\n\n\n\n\n\u0420\u0438\u0441\u0443\u043d\u043e\u043a 2.1 \u2014 \u0433\u043b\u0430\u0432\u043d\u044b\u0439 \u044d\u043a\u0440\u0430\u043d \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.\n\n\n\u041d\u0430 \u0434\u0430\u043d\u043d\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u044b \u0442\u0435\u043a\u0443\u0449\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u043e\u0432, \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u043d\u0430 \u0441\u043a\u043b\u0430\u0434\u0435. \u0412 \u0432\u0435\u0440\u0445\u043d\u0435\u043c \u043f\u0440\u0430\u0432\u043e\u043c \u0443\u0433\u043b\u0443 \u044d\u043a\u0440\u0430\u043d\u0430 \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u044b \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0438\u043a\u043e\u043d\u043a\u0438:\n\n\n - \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043d\u043e\u0432\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c \u0432 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445.\n\n\n - \u041f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c \u0444\u0438\u043b\u044c\u0442\u0440 \u043a \u0441\u043f\u0438\u0441\u043a\u0443 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432.\n\n\n - \u0417\u0430\u043a\u043e\u043d\u0447\u0438\u0442\u044c \u0430\u043a\u0442\u0438\u0432\u043d\u0443\u044e \u0441\u0435\u0441\u0441\u0438\u044e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f (logout).  \n\n\n\u041f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \n  \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u0442 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u0432 \u0411\u0414.\n\n\n\u042d\u043a\u0440\u0430\u043d \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430\n\n\n\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \nAddItemActivity\n \u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0432 \u0435\u0451 layout-\u0444\u0430\u0439\u043b \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 xml \u043a\u043e\u0434:\n\n\n?xml version=\n1.0\n encoding=\nutf-8\n?\n\n\nLinearLayout\n \nxmlns:android=\nhttp://schemas.android.com/apk/res/android\n\n    \nxmlns:tools=\nhttp://schemas.android.com/tools\n\n    \nandroid:id=\n@+id/activity_add_item\n\n    \nandroid:layout_width=\nmatch_parent\n\n    \nandroid:layout_height=\nmatch_parent\n\n    \nandroid:orientation=\nvertical\n\n    \nandroid:padding=\n8dp\n\n    \ntools:context=\nprof_itgroup.ru.storehouseapp.Activities.AddItemActivity\n\n    \nScrollView\n\n        \nandroid:layout_width=\nmatch_parent\n\n        \nandroid:layout_height=\nwrap_content\n\n        \ninclude\n \nlayout=\n@layout/item_core\n/\n\n    \n/ScrollView\n\n\n/LinearLayout\n\n\n\n\n\n\n\u0412 \u0441\u0432\u043e\u044e \u043e\u0447\u0435\u0440\u0435\u0434\u044c, \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u043c\u044b\u0439 \u0444\u0430\u0439\u043b item_core.xml \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439:\n\n\nLinearLayout\n \nandroid:layout_width=\nmatch_parent\n\n    \nandroid:layout_height=\nwrap_content\n\n    \nandroid:orientation=\nvertical\n\n    \nxmlns:android=\nhttp://schemas.android.com/apk/res/android\n\n    \nTextView\n\n        \nstyle=\n@style/label_style\n\n        \nandroid:text=\n@string/add_item_device_name\n \n/\n\n    \nEditText\n\n        \nandroid:id=\n@+id/etDeviceName\n\n        \nstyle=\n@style/textStyle\n\n        \nandroid:hint=\n@string/add_item_hint_device_name\n \n/\n\n    \nTextView\n\n        \nstyle=\n@style/label_style\n\n        \nandroid:text=\n@string/add_item_device_platform\n \n/\n\n    \nEditText\n\n        \nandroid:id=\n@+id/etDevicePlatform\n\n        \nstyle=\n@style/textStyle\n\n        \nandroid:hint=\n@string/add_item_hint_device_platform\n \n/\n\n    \nTextView\n\n        \nstyle=\n@style/label_style\n\n        \nandroid:text=\n@string/add_item_camera_info\n \n/\n\n    \nEditText\n\n        \nandroid:id=\n@+id/etDeviceCameraInfo\n\n        \nstyle=\n@style/textStyle\n\n        \nandroid:hint=\n@string/add_item_hint_camera_info\n \n/\n\n    \nTextView\n\n        \nstyle=\n@style/label_style\n\n        \nandroid:text=\n@string/add_item_available_colors_info\n \n/\n\n    \nEditText\n\n        \nandroid:id=\n@+id/etDeviceColors\n\n        \nstyle=\n@style/textStyle\n\n        \nandroid:hint=\n@string/add_item_hint_available_colors_info\n \n/\n\n    \nLinearLayout\n\n        \nandroid:id=\n@+id/llChangeColorList\n\n        \nandroid:visibility=\ngone\n\n        \nandroid:gravity=\ncenter_horizontal\n\n        \nandroid:orientation=\nhorizontal\n\n        \nandroid:layout_width=\nmatch_parent\n\n        \nandroid:layout_height=\nwrap_content\n\n        \nButton\n\n            \nandroid:id=\n@+id/btnAddColor\n\n            \nandroid:padding=\n12dp\n\n            \nandroid:layout_marginRight=\n8dp\n\n            \nandroid:text=\n@string/add_color\n\n            \nandroid:layout_width=\nwrap_content\n\n            \nandroid:layout_height=\nwrap_content\n \n/\n\n        \nButton\n\n            \nandroid:id=\n@+id/btnRemoveColor\n\n            \nandroid:padding=\n12dp\n\n            \nandroid:layout_marginLeft=\n8dp\n\n            \nandroid:text=\n@string/remove_color\n\n            \nandroid:layout_width=\nwrap_content\n\n            \nandroid:layout_height=\nwrap_content\n \n/\n\n    \n/LinearLayout\n\n    \nTextView\n\n        \nstyle=\n@style/label_style\n\n        \nandroid:text=\n@string/add_item_price\n \n/\n\n    \nEditText\n\n        \nandroid:id=\n@+id/etDevicePrice\n\n        \nstyle=\n@style/textStyle\n\n        \nandroid:inputType=\nnumber\n\n        \nandroid:hint=\n@string/add_item_hint_available_amount_info\n \n/\n\n    \nLinearLayout\n\n        \nandroid:id=\n@+id/llChangePrice\n\n        \nandroid:visibility=\ngone\n\n        \nandroid:gravity=\ncenter_horizontal\n\n        \nandroid:orientation=\nhorizontal\n\n        \nandroid:layout_width=\nmatch_parent\n\n        \nandroid:layout_height=\nwrap_content\n\n        \nButton\n\n            \nandroid:id=\n@+id/btnIncreaseCount\n\n            \nandroid:padding=\n8dp\n\n            \nandroid:layout_marginRight=\n8dp\n\n            \nandroid:text=\n@string/increase_item_count\n\n            \nandroid:layout_width=\nwrap_content\n\n            \nandroid:layout_height=\nwrap_content\n \n/\n\n        \nButton\n\n            \nandroid:id=\n@+id/btnDecreaseCount\n\n            \nandroid:padding=\n8dp\n\n            \nandroid:layout_marginLeft=\n8dp\n\n            \nandroid:text=\n@string/decrease_item_count\n\n            \nandroid:layout_width=\nwrap_content\n\n            \nandroid:layout_height=\nwrap_content\n \n/\n\n    \n/LinearLayout\n\n    \nLinearLayout\n\n        \nandroid:orientation=\nvertical\n\n        \nandroid:gravity=\ncenter\n\n        \nandroid:layout_gravity=\ncenter\n\n        \nandroid:layout_width=\n200dp\n\n        \nandroid:layout_height=\nwrap_content\n\n        \nandroid:weightSum=\n1\n\n        \nButton\n\n            \nandroid:id=\n@+id/btnAddItem\n\n            \nandroid:padding=\n8dp\n\n            \nandroid:background=\n#64b5f6\n\n            \nandroid:textColor=\n@android:color/white\n\n            \nandroid:layout_width=\nmatch_parent\n\n            \nandroid:layout_height=\nwrap_content\n\n            \nandroid:layout_gravity=\ncenter_horizontal\n\n            \nandroid:layout_marginTop=\n8dp\n\n            \nandroid:text=\n@string/add\n \n/\n\n        \nButton\n\n            \nandroid:id=\n@+id/btnClear\n\n            \nandroid:padding=\n8dp\n\n            \nandroid:background=\n#64b5f6\n\n            \nandroid:textColor=\n@android:color/white\n\n            \nandroid:layout_width=\nmatch_parent\n\n            \nandroid:layout_height=\nwrap_content\n\n            \nandroid:layout_gravity=\ncenter_horizontal\n\n            \nandroid:layout_marginTop=\n8dp\n\n            \nandroid:text=\n@string/button_clear\n\n            \nandroid:layout_weight=\n0.22\n \n/\n\n    \n/LinearLayout\n\n\n/LinearLayout\n\n\n\n\n\n\n\u0418\u0442\u043e\u0433\u043e\u0432\u044b\u0439 \u0432\u0438\u0434 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 \u043f\u043e\u043a\u0430\u0437\u0430\u043d \u043d\u0430 \u0440\u0438\u0441\u0443\u043d\u043a\u0435 2.2\n\n\n\n\n\u0420\u0438\u0441\u0443\u043d\u043e\u043a 2.2 \u2014 \u042d\u043a\u0440\u0430\u043d \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u0432 \u0411\u0414.\n\n\n\u041d\u0430 \u044d\u0442\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0432\u0432\u043e\u0434\u0438\u0442 \u0432\u0441\u044e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0443 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 \u0438 \u043d\u0430\u0436\u0438\u043c\u0430\u0435\u0442 \u043a\u043d\u043e\u043f\u043a\u0443 \u00ab\u0414\u041e\u0411\u0410\u0412\u0418\u0422\u042c\u00bb. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442, \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0435\u0433\u043e \u043f\u043e\u043b\u044f \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435.  \u0414\u043e\u0431\u0430\u0432\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f: \u0437\u0430\u0434\u0430\u0434\u0438\u043c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043d\u0430\u0436\u0430\u0442\u0438\u044f \u043a\u043d\u043e\u043f\u043a\u0438 \u00ab\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c\u00bb \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c \u043c\u0435\u0442\u043e\u0434 \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043d\u0438\u0436\u0435:\n\n\n@OnClick\n(\nR\n.\nid\n.\nbtnAddItem\n)\n\n\npublic\n \nvoid\n \nonBtnAddItemClicked\n()\n \n{\n\n    \nDocument\n \ndocument\n \n=\n \nnew\n \nDocument\n(\nMainActivity\n.\nCOLLECTION_NAME\n);\n\n    \nif\n \n(\nisAllFieldsFilled\n())\n \n{\n\n        \ndocument\n.\nsetField\n(\nfields\n.\ngetDeviceNameField\n(),\n \ngetStringFrom\n(\netDeviceName\n).\ntrim\n());\n\n        \ndocument\n.\nsetField\n(\nfields\n.\ngetPlatformField\n(),\n \ngetStringFrom\n(\netDevicePlatform\n).\ntrim\n());\n\n        \ndocument\n.\nsetField\n(\nfields\n.\ngetCameraInfoField\n(),\n \ngetStringFrom\n(\netDeviceCameraInfo\n).\ntrim\n());\n\n        \ndocument\n.\nsetField\n(\nfields\n.\ngetColorsAvailableField\n(),\n \ngetColorsListFrom\n(\ngetStringFrom\n(\netDeviceColors\n)));\n\n        \ndocument\n.\nsetField\n(\nfields\n.\ngetDevicePriceField\n(),\n \nDouble\n.\nvalueOf\n(\ngetStringFrom\n(\netDevicePrice\n)));\n\n        \ndocument\n.\nsaveDocument\n(\nnew\n \nCallbackDocumentSaved\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentSaved\n()\n \n{\n\n                \nToast\n.\nmakeText\n(\nAddItemActivity\n.\nthis\n,\n \ngetString\n(\nR\n.\nstring\n.\nsucced_add_item\n),\n \nToast\n.\nLENGTH_SHORT\n).\nshow\n();\n\n                \nfinish\n();\n\n            \n}\n\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentSaveFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \nToast\n.\nmakeText\n(\nAddItemActivity\n.\nthis\n,\n \ngetString\n(\nR\n.\nstring\n.\nerror_add_item\n),\n \nToast\n.\nLENGTH_SHORT\n).\nshow\n();\n\n            \n}\n\n        \n});\n\n    \n}\n \nelse\n \n{\n\n        \nToast\n.\nmakeText\n(\nthis\n,\n \ngetString\n(\nR\n.\nstring\n.\nwrong_data\n),\n \nToast\n.\nLENGTH_SHORT\n).\nshow\n();\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u043c\u0435\u0442\u043e\u0434\u0435 \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043a\u043b\u0430\u0441\u0441\u0430 \nDocument\n, \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u043b \u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0432\u0441\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \nEditText\n \u0438 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u043f\u043e\u043b\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 \nsetField(\u2026)\n \u043f\u043e\u0441\u043b\u0435 \u0447\u0435\u0433\u043e \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u043c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442. \u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0441\u043e\u0437\u0434\u0430\u043d \u0431\u0435\u0437 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0446\u0438\u0438 \u0441 \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u043c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u043c \u0438\u0437 \u0411\u0414 (\u0442.\u0435 \u0431\u0435\u0437 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u0435\u0442\u043e\u0434\u0430 \ngetDocumentById()\n, \u0442\u043e \u043d\u043e\u0432\u044b\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c\u0438 \u043f\u043e\u043b\u044f\u043c\u0438 \u0431\u0443\u0434\u0435\u0442 \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440.\n\n\n\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b \u0445\u0440\u0430\u043d\u044f\u0442\u0441\u044f \u0432 \u0411\u0414 Scorocode \u0432 \u0432\u0438\u0434\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c \u043d\u0430 \u0440\u0438\u0441\u0443\u043d\u043a\u0435 2.3\n\n\n\n\n\u0420\u0438\u0441\u0443\u043d\u043e\u043a 2.3 \u2014 \u0445\u0440\u0430\u043d\u0438\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u0432 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u0411\u0414 Scorocode.\n\n\n\u041a\u0430\u0436\u0434\u044b\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u0435 \u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0435 \u043f\u043e\u043b\u044f.\n\u0421\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u043c\u0438 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f:\n\n\n\n\nid \u2014 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0432 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438\n\n\nreadACL \u2014 \u043f\u0440\u0430\u0432\u0430 \u043d\u0430 \u0447\u0442\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430.\n\n\nupdateACL \u2014 \u043f\u0440\u0430\u0432\u0430 \u043d\u0430 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430.\n\n\nremoveACL \u2014 \u043f\u0440\u0430\u0432\u0430 \u043d\u0430 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430.\n\n\ncreatedAt \u2014 \u0432\u0440\u0435\u043c\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430.\n\n\nupdatedAt - \u0432\u0440\u0435\u043c\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430.\n\n\n\n\n\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043c\u043e\u0436\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u0434\u0440\u0443\u0433\u0438\u0435 \u043f\u043e\u043b\u044f \u043f\u043e \u0441\u0432\u043e\u0435\u043c\u0443 \u0443\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u0438\u044e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043a\u043d\u043e\u043f\u043a\u0443 \u00ab\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u043e\u043b\u0435\u00bb \u043d\u0430 \u0432\u0435\u0440\u0445\u043d\u0435\u0439 \u043f\u0430\u043d\u0435\u043b\u0438. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0442\u0430\u043a \u0436\u0435 \u043c\u043e\u0436\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u043d\u0430\u0436\u0430\u0432 \u043a\u043d\u043e\u043f\u043a\u0443 \u00ab\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u00bb \u043d\u0430 \u0432\u0435\u0440\u0445\u043d\u0435\u0439 \u043f\u0430\u043d\u0435\u043b\u0438 \u0438 \u0432\u0432\u0435\u0434\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u0435\u0439 \u0432\u0440\u0443\u0447\u043d\u0443\u044e. \u0411\u043e\u043b\u0435\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e \u043e \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0432\u0435\u0440\u0445\u043d\u0435\u0439 \u043f\u0430\u043d\u0435\u043b\u0438 \u0411\u0414 \u0441\u043c.\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e Scorocode.\n\n\n\u041f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \n \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043f\u043e\u043f\u0430\u0434\u0430\u0435\u0442 \u0432 \u0434\u0438\u0430\u043b\u043e\u0433\u043e\u0432\u043e\u0435 \u043e\u043a\u043d\u043e \u0444\u0438\u043b\u044c\u0442\u0440\u0430.\n\n\n\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0434\u0430\u043d\u043d\u043e\u0435 \u0434\u0438\u0430\u043b\u043e\u0433\u043e\u0432\u043e\u0435 \u043e\u043a\u043d\u043e. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043a\u043b\u0430\u0441\u0441 \nFilterDialog\n \u043a\u043e\u0434 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043f\u043e\u043a\u0430\u0437\u0430\u043d \u043d\u0438\u0436\u0435:\n\n\npackage\n \nprof_itgroup.ru.storehouseapp.Objects\n;\n\n\nimport\n \nandroid.content.Context\n;\n\n\nimport\n \nandroid.content.DialogInterface\n;\n\n\nimport\n \nandroid.support.v7.app.AlertDialog\n;\n\n\nimport\n \nandroid.view.LayoutInflater\n;\n\n\nimport\n \nandroid.view.View\n;\n\n\nimport\n \nandroid.widget.CheckBox\n;\n\n\nimport\n \nandroid.widget.EditText\n;\n\n\nimport\n \njava.util.ArrayList\n;\n\n\nimport\n \njava.util.Arrays\n;\n\n\nimport\n \njava.util.List\n;\n\n\nimport\n \nbutterknife.ButterKnife\n;\n\n\nimport\n \nprof_itgroup.ru.storehouseapp.Activities.MainActivity\n;\n\n\nimport\n \nprof_itgroup.ru.storehouseapp.Helpers.Helper\n;\n\n\nimport\n \nprof_itgroup.ru.storehouseapp.R\n;\n\n\nimport\n \nru.profit_group.scorocode_sdk.Callbacks.CallbackFindDocument\n;\n\n\nimport\n \nru.profit_group.scorocode_sdk.scorocode_objects.DocumentInfo\n;\n\n\nimport\n \nru.profit_group.scorocode_sdk.scorocode_objects.Query\n;\n\n\n\npublic\n \nclass\n \nFilterDialog\n \n{\n\n    \nprivate\n \nContext\n \ncontext\n;\n\n    \npublic\n \nFilterDialog\n(\nContext\n \ncontext\n)\n \n{\n\n        \nthis\n.\ncontext\n \n=\n \ncontext\n;\n\n    \n}\n\n    \npublic\n \nvoid\n \nshowFilterDialog\n(\nfinal\n \nCallbackFilterDialog\n \ncallbackFilterDialog\n)\n \n{\n\n        \nfinal\n \nView\n \nv\n \n=\n \nLayoutInflater\n.\nfrom\n(\ncontext\n).\ninflate\n(\nR\n.\nlayout\n.\nfilter_layout\n,\n \nnull\n);\n\n        \nfinal\n \nCheckBox\n \ncbPriceFilter\n \n=\n \nButterKnife\n.\nfindById\n(\nv\n,\n \nR\n.\nid\n.\ncbPriceFilter\n);\n\n        \nfinal\n \nCheckBox\n \ncbPlatformFilter\n \n=\n \nButterKnife\n.\nfindById\n(\nv\n,\n \nR\n.\nid\n.\ncbPlatformFilter\n);\n\n        \nfinal\n \nCheckBox\n \ncbColourFilter\n \n=\n \nButterKnife\n.\nfindById\n(\nv\n,\n \nR\n.\nid\n.\ncbColorFilter\n);\n\n        \nfinal\n \nEditText\n \netPlatformFilter\n \n=\n \nButterKnife\n.\nfindById\n(\nv\n,\n \nR\n.\nid\n.\netPlatformFilter\n);\n\n        \nfinal\n \nEditText\n \netColors\n \n=\n \nButterKnife\n.\nfindById\n(\nv\n,\n \nR\n.\nid\n.\netColors\n);\n\n        \nAlertDialog\n.\nBuilder\n \nbuilder\n \n=\n \nnew\n \nAlertDialog\n.\nBuilder\n(\ncontext\n)\n\n                \n.\nsetTitle\n(\nR\n.\nstring\n.\ntitleChooseFilterProperties\n)\n\n                \n.\nsetPositiveButton\n(\nR\n.\nstring\n.\ncontinue_action\n,\n \nnew\n \nDialogInterface\n.\nOnClickListener\n()\n \n{\n\n                    \n@Override\n\n                    \npublic\n \nvoid\n \nonClick\n(\nDialogInterface\n \ndialog\n,\n \nint\n \nwhich\n)\n \n{\n\n                        \nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\nMainActivity\n.\nCOLLECTION_NAME\n);\n\n                        \nif\n \n(\ncbPriceFilter\n.\nisChecked\n())\n \n{\n\n                            \nsetPriceFilter\n(\nv\n,\n \nquery\n);\n\n                        \n}\n\n                        \nif\n \n(\ncbPlatformFilter\n.\nisChecked\n())\n \n{\n\n                            \nquery\n.\nequalTo\n(\nnew\n \nDocumentFields\n(\ncontext\n).\ngetPlatformField\n(),\n \netPlatformFilter\n.\ngetText\n().\ntoString\n());\n\n                        \n}\n\n                        \nif\n(\ncbColourFilter\n.\nisChecked\n())\n \n{\n\n                            \nList\nObject\n \ncolors\n \n=\n \nnew\n \nArrayList\n();\n\n                            \ncolors\n.\naddAll\n(\nArrays\n.\nasList\n(\nHelper\n.\ngetStringFrom\n(\netColors\n).\nsplit\n(\n,\n)));\n\n                            \nquery\n.\ncontainedIn\n(\nnew\n \nDocumentFields\n(\ncontext\n).\ngetColorsAvailableField\n(),\n \ncolors\n);\n\n                        \n}\n\n                        \nquery\n.\nfindDocuments\n(\nnew\n \nCallbackFindDocument\n()\n \n{\n\n                            \n@Override\n\n                            \npublic\n \nvoid\n \nonDocumentFound\n(\nList\nDocumentInfo\n \ndocumentInfos\n)\n \n{\n\n                                 \ncallbackFilterDialog\n.\nonFilterApplied\n(\ndocumentInfos\n);\n\n                            \n}\n\n                            \n@Override\n\n                            \npublic\n \nvoid\n \nonDocumentNotFound\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                                \nHelper\n.\nshowToast\n(\ncontext\n,\n \nR\n.\nstring\n.\nerror\n);\n\n                            \n}\n\n                        \n});\n\n                    \n}\n\n                \n}).\nsetView\n(\nv\n);\n\n        \nbuilder\n.\nshow\n();\n\n    \n}\n\n    \nprivate\n \nvoid\n \nsetPriceFilter\n(\nView\n \nview\n,\n \nQuery\n \nquery\n)\n \n{\n\n        \nString\n \npriceField\n \n=\n \nnew\n \nDocumentFields\n(\nview\n.\ngetContext\n()).\ngetDevicePriceField\n();\n\n        \nfinal\n \nCheckBox\n \ncbIncludeLower\n \n=\n \nButterKnife\n.\nfindById\n(\nview\n,\n \nR\n.\nid\n.\ncbIncludeLower\n);\n\n        \nfinal\n \nCheckBox\n \ncbIncludeUpper\n \n=\n \nButterKnife\n.\nfindById\n(\nview\n,\n \nR\n.\nid\n.\ncbIncludeUpper\n);\n\n        \nfinal\n \nEditText\n \netLowerPrice\n \n=\n \nButterKnife\n.\nfindById\n(\nview\n,\n \nR\n.\nid\n.\netPriceFrom\n);\n\n        \nfinal\n \nEditText\n \netUpperPrice\n \n=\n \nButterKnife\n.\nfindById\n(\nview\n,\n \nR\n.\nid\n.\netPriceTo\n);\n\n        \nif\n(\ncbIncludeLower\n.\nisChecked\n())\n \n{\n\n            \nquery\n.\ngreaterThenOrEqualTo\n(\npriceField\n,\n \ngetPrice\n(\netLowerPrice\n));\n\n        \n}\n \nelse\n \n{\n\n            \nquery\n.\ngreaterThan\n(\npriceField\n,\n \ngetPrice\n(\netLowerPrice\n));\n\n        \n}\n\n        \nif\n(\ncbIncludeUpper\n.\nisChecked\n())\n \n{\n\n            \nquery\n.\nlessThanOrEqualTo\n(\npriceField\n,\n \ngetPrice\n(\netUpperPrice\n));\n\n        \n}\n \nelse\n \n{\n\n            \nquery\n.\nlessThan\n(\npriceField\n,\n \ngetPrice\n(\netUpperPrice\n));\n\n        \n}\n\n    \n}\n\n    \nprivate\n \nDouble\n \ngetPrice\n(\nEditText\n \netPrice\n)\n \n{\n\n        \nString\n \nprice\n \n=\n \netPrice\n.\ngetText\n().\ntoString\n();\n\n        \nDouble\n \npriceDouble\n \n=\n \n0d\n;\n\n        \nif\n(!\nprice\n.\nisEmpty\n())\n \n{\n\n            \npriceDouble\n \n=\n \nDouble\n.\nvalueOf\n(\nprice\n);\n\n        \n}\n\n        \nreturn\n \npriceDouble\n;\n\n    \n}\n\n    \npublic\n \ninterface\n \nCallbackFilterDialog\n \n{\n\n        \nvoid\n \nonFilterApplied\n(\nList\nDocumentInfo\n \ndocumentInfo\n);\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\u0412 \u043c\u0435\u0442\u043e\u0434\u0435 \nshowFilterDialog\n \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u0435\u043c \nAlertDialog\n \u0438 \u0437\u0430\u0434\u0430\u0435\u043c \u0435\u043c\u0443 \nView\n \u0438\u0437 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e layout-\u0444\u0430\u0439\u043b\u0430:\n\n\n \n?xml version=\n1.0\n encoding=\nutf-8\n?\n\n\nLinearLayout\n \nxmlns:android=\nhttp://schemas.android.com/apk/res/android\n\n    \nandroid:orientation=\nvertical\n\n    \nandroid:padding=\n16dp\n\n    \nandroid:layout_width=\nmatch_parent\n\n    \nandroid:layout_height=\nmatch_parent\n\n    \ninclude\n \nlayout=\n@layout/price_filter_layout\n \n/\n\n\n    \ninclude\n \nlayout=\n@layout/dilimeter\n \n/\n\n\n    \ninclude\n \nlayout=\n@layout/platform_filter\n \n/\n\n\n    \ninclude\n \nlayout=\n@layout/dilimeter\n \n/\n\n\n    \nLinearLayout\n\n        \nandroid:orientation=\nhorizontal\n\n        \nandroid:layout_width=\nmatch_parent\n\n        \nandroid:layout_height=\nwrap_content\n\n        \nCheckBox\n\n            \nandroid:id=\n@+id/cbColorFilter\n\n            \nandroid:layout_width=\nwrap_content\n\n            \nandroid:layout_height=\nwrap_content\n \n/\n\n        \nTextView\n\n            \nandroid:text=\n@string/colorsFilter\n\n            \nstyle=\n@style/label_style\n/\n\n        \nEditText\n\n            \nandroid:id=\n@+id/etColors\n\n            \nandroid:layout_marginLeft=\n16dp\n\n            \nandroid:hint=\n@string/color_filter_hint\n\n            \nstyle=\n@style/label_style\n \n/\n\n    \n/LinearLayout\n\n\n/LinearLayout\n\n\n\n\n\n\n\u0412\u043a\u043b\u044e\u0447\u0430\u0435\u043c\u044b\u0435 layout-\u0444\u0430\u0439\u043b\u044b \nprice_filter_layout\n \u0438 \nplatform_filter\n \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u044b \u043d\u0438\u0436\u0435:\n\n\n?xml version=\n1.0\n encoding=\nutf-8\n?\n\n\nLinearLayout\n \nxmlns:android=\nhttp://schemas.android.com/apk/res/android\n\n    \nxmlns:tools=\nhttp://schemas.android.com/tools\n\n    \nandroid:orientation=\nvertical\n\n    \nandroid:layout_width=\nmatch_parent\n\n    \nandroid:layout_height=\nwrap_content\n\n    \ntools:showIn=\n@layout/filter_layout\n\n    \nLinearLayout\n\n        \nandroid:orientation=\nhorizontal\n\n        \nandroid:layout_width=\nmatch_parent\n\n        \nandroid:layout_height=\nwrap_content\n\n        \nCheckBox\n\n            \nandroid:id=\n@+id/cbPriceFilter\n\n            \nandroid:layout_width=\nwrap_content\n\n            \nandroid:layout_height=\nwrap_content\n \n/\n\n        \nTextView\n\n            \nandroid:layout_marginLeft=\n8dp\n\n            \nandroid:layout_marginStart=\n8dp\n\n            \nandroid:text=\n@string/filter_price_from\n\n            \nstyle=\n@style/label_style\n \n/\n\n        \nEditText\n\n            \nandroid:id=\n@+id/etPriceFrom\n\n            \nandroid:layout_marginLeft=\n4dp\n\n            \nandroid:layout_marginStart=\n4dp\n\n            \nandroid:minWidth=\n60dp\n\n            \nandroid:layout_width=\nwrap_content\n\n            \nandroid:layout_height=\nwrap_content\n \n/\n\n        \nTextView\n\n            \nandroid:text=\n@string/filter_price_up_to\n\n            \nandroid:layout_width=\nwrap_content\n\n            \nandroid:layout_height=\nwrap_content\n \n/\n\n        \nEditText\n\n            \nandroid:id=\n@+id/etPriceTo\n\n            \nandroid:layout_marginLeft=\n4dp\n\n            \nandroid:layout_marginStart=\n4dp\n\n            \nandroid:minWidth=\n60dp\n\n            \nstyle=\n@style/label_style\n/\n\n    \n/LinearLayout\n\n    \nRelativeLayout\n\n        \nandroid:layout_width=\nmatch_parent\n\n        \nandroid:layout_height=\nwrap_content\n\n        \nLinearLayout\n\n            \nandroid:id=\n@+id/llLowerBound\n\n            \nandroid:layout_marginLeft=\n32dp\n\n            \nandroid:layout_alignParentLeft=\ntrue\n\n            \nandroid:orientation=\nhorizontal\n\n            \nandroid:layout_width=\nwrap_content\n\n            \nandroid:layout_height=\nwrap_content\n\n            \nCheckBox\n\n                \nandroid:id=\n@+id/cbIncludeLower\n\n                \nandroid:layout_width=\nwrap_content\n\n                \nandroid:layout_height=\nwrap_content\n \n/\n\n            \nTextView\n\n                \nandroid:layout_gravity=\nfill\n\n                \nandroid:text=\n@string/include_lower\n\n                \nstyle=\n@style/label_style\n \n/\n\n        \n/LinearLayout\n\n        \nLinearLayout\n\n            \nandroid:layout_marginLeft=\n160dp\n\n            \nandroid:orientation=\nhorizontal\n\n            \nandroid:layout_width=\nwrap_content\n\n            \nandroid:layout_height=\nwrap_content\n\n            \nCheckBox\n\n                \nandroid:id=\n@+id/cbIncludeUpper\n\n                \nandroid:layout_width=\nwrap_content\n\n                \nandroid:layout_height=\nwrap_content\n \n/\n\n            \nTextView\n\n                \nandroid:layout_gravity=\nfill\n\n                \nandroid:text=\n@string/include_upper\n\n                \nstyle=\n@style/label_style\n \n/\n\n        \n/LinearLayout\n\n    \n/RelativeLayout\n\n\n/LinearLayout\n\n\n\n\n\n\n?xml version=\n1.0\n encoding=\nutf-8\n?\n\n\nLinearLayout\n \nxmlns:android=\nhttp://schemas.android.com/apk/res/android\n\n    \nxmlns:tools=\nhttp://schemas.android.com/tools\n\n    \nandroid:orientation=\nhorizontal\n\n    \nandroid:layout_width=\nwrap_content\n\n    \nandroid:layout_height=\nwrap_content\n\n    \ntools:showIn=\n@layout/filter_layout\n\n    \nCheckBox\n\n        \nandroid:id=\n@+id/cbPlatformFilter\n\n        \nandroid:layout_width=\nwrap_content\n\n        \nandroid:layout_height=\nwrap_content\n \n/\n\n    \nTextView\n\n        \nandroid:layout_marginLeft=\n8dp\n\n        \nandroid:layout_marginStart=\n8dp\n\n        \nandroid:text=\n@string/filter_platform\n\n        \nstyle=\n@style/label_style\n \n/\n\n    \nEditText\n\n        \nandroid:id=\n@+id/etPlatformFilter\n\n        \nandroid:layout_marginLeft=\n4dp\n\n        \nandroid:layout_marginStart=\n4dp\n\n        \nandroid:minWidth=\n60dp\n\n        \nandroid:layout_width=\nwrap_content\n\n        \nandroid:layout_height=\nwrap_content\n \n/\n\n\n/LinearLayout\n\n\n\n\n\n\n\u0414\u0438\u0430\u043b\u043e\u0433\u043e\u0432\u043e\u0435 \u043e\u043a\u043d\u043e \u0444\u0438\u043b\u044c\u0442\u0440\u0430 \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u043e \u043d\u0430 \u0440\u0438\u0441\u0443\u043d\u043a\u0435 2.4\n\n\n\n\n\u0420\u0438\u0441\u0443\u043d\u043e\u043a 2.4 \u2014 \u0434\u0438\u0430\u043b\u043e\u0433\u043e\u0432\u043e\u0435 \u043e\u043a\u043d\u043e \u0444\u0438\u043b\u044c\u0442\u0440\u0430.\n\n\n\u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u0434\u0438\u0430\u043b\u043e\u0433\u043e\u0432\u043e\u043c \u043e\u043a\u043d\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043c\u043e\u0436\u0435\u0442 \u0437\u0430\u0434\u0430\u0442\u044c \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u0438\u0437 \u0411\u0414 \u043f\u043e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u043c \u043a\u0440\u0438\u0442\u0435\u0440\u0438\u044f\u043c, \u0430 \u0438\u043c\u0435\u043d\u043d\u043e:\n\n \u0426\u0435\u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430\n\n \u041f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 (Android \u0438\u043b\u0438 iOS, \u0430 \u0442\u0430\u043a \u0436\u0435 \u043d\u043e\u043c\u0435\u0440 \u0432\u0435\u0440\u0441\u0438\u0438 \u041e\u0421).\n* \u0414\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u0432 \u043d\u0430\u043b\u0438\u0447\u0438\u0438 \u0446\u0432\u0435\u0442\u0430.\n\n\n\u041f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \u00ab\u041f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c\u00bb \u043c\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0432\u044b\u0431\u0440\u0430\u043d\u044b \u043b\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b CheckBox \u0438 \u0435\u0441\u043b\u0438 \u0434\u0430 \u2014 \u0441\u0442\u0430\u0432\u0438\u043c \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u0444\u0438\u043b\u044c\u0442\u0440.\n\n\n\u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430 \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0444\u0438\u043b\u044c\u0442\u0440\u0430:  \n\n\npublic\n \nvoid\n \nshowFilterDialog\n(\nfinal\n \nCallbackFilterDialog\n \ncallbackFilterDialog\n)\n \n{\n\n    \nfinal\n \nView\n \nv\n \n=\n \nLayoutInflater\n.\nfrom\n(\ncontext\n).\ninflate\n(\nR\n.\nlayout\n.\nfilter_layout\n,\n \nnull\n);\n\n    \nfinal\n \nCheckBox\n \ncbPriceFilter\n \n=\n \nButterKnife\n.\nfindById\n(\nv\n,\n \nR\n.\nid\n.\ncbPriceFilter\n);\n\n    \nfinal\n \nCheckBox\n \ncbPlatformFilter\n \n=\n \nButterKnife\n.\nfindById\n(\nv\n,\n \nR\n.\nid\n.\ncbPlatformFilter\n);\n\n    \nfinal\n \nCheckBox\n \ncbColourFilter\n \n=\n \nButterKnife\n.\nfindById\n(\nv\n,\n \nR\n.\nid\n.\ncbColorFilter\n);\n\n    \nfinal\n \nEditText\n \netPlatformFilter\n \n=\n \nButterKnife\n.\nfindById\n(\nv\n,\n \nR\n.\nid\n.\netPlatformFilter\n);\n\n    \nfinal\n \nEditText\n \netColors\n \n=\n \nButterKnife\n.\nfindById\n(\nv\n,\n \nR\n.\nid\n.\netColors\n);\n\n\n    \nAlertDialog\n.\nBuilder\n \nbuilder\n \n=\n \nnew\n \nAlertDialog\n.\nBuilder\n(\ncontext\n)\n\n            \n.\nsetTitle\n(\nR\n.\nstring\n.\ntitleChooseFilterProperties\n)\n\n            \n.\nsetPositiveButton\n(\nR\n.\nstring\n.\ncontinue_action\n,\n \nnew\n \nDialogInterface\n.\nOnClickListener\n()\n \n{\n\n                \n@Override\n\n                \npublic\n \nvoid\n \nonClick\n(\nDialogInterface\n \ndialog\n,\n \nint\n \nwhich\n)\n \n{\n\n                    \nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\nMainActivity\n.\nCOLLECTION_NAME\n);\n\n                    \nif\n \n(\ncbPriceFilter\n.\nisChecked\n())\n \n{\n\n                        \nsetPriceFilter\n(\nv\n,\n \nquery\n);\n\n                    \n}\n\n\n                    \nif\n \n(\ncbPlatformFilter\n.\nisChecked\n())\n \n{\n\n                        \nquery\n.\nequalTo\n(\nnew\n \nDocumentFields\n(\ncontext\n).\ngetPlatformField\n(),\n \netPlatformFilter\n.\ngetText\n().\ntoString\n());\n\n                    \n}\n\n\n                    \nif\n(\ncbColourFilter\n.\nisChecked\n())\n \n{\n\n                        \nList\nObject\n \ncolors\n \n=\n \nnew\n \nArrayList\n();\n\n                        \ncolors\n.\naddAll\n(\nArrays\n.\nasList\n(\nHelper\n.\ngetStringFrom\n(\netColors\n).\nsplit\n(\n,\n)));\n\n                        \nquery\n.\ncontainedIn\n(\nnew\n \nDocumentFields\n(\ncontext\n).\ngetColorsAvailableField\n(),\n \ncolors\n);\n\n                    \n}\n\n                    \nquery\n.\nfindDocuments\n(\nnew\n \nCallbackFindDocument\n()\n \n{\n\n                        \n@Override\n\n                        \npublic\n \nvoid\n \nonDocumentFound\n(\nList\nDocumentInfo\n \ndocumentInfos\n)\n \n{\n\n                             \ncallbackFilterDialog\n.\nonFilterApplied\n(\ndocumentInfos\n);\n\n                        \n}\n\n                        \n@Override\n\n                        \npublic\n \nvoid\n \nonDocumentNotFound\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                            \nHelper\n.\nshowToast\n(\ncontext\n,\n \nR\n.\nstring\n.\nerror\n);\n\n                        \n}\n\n                    \n});\n\n                \n}\n\n            \n}).\nsetView\n(\nv\n);\n\n    \nbuilder\n.\nshow\n();\n\n\n}\n\n\n\nprivate\n \nvoid\n \nsetPriceFilter\n(\nView\n \nview\n,\n \nQuery\n \nquery\n)\n \n{\n\n    \nString\n \npriceField\n \n=\n \nnew\n \nDocumentFields\n(\nview\n.\ngetContext\n()).\ngetDevicePriceField\n();\n\n    \nfinal\n \nCheckBox\n \ncbIncludeLower\n \n=\n \nButterKnife\n.\nfindById\n(\nview\n,\n \nR\n.\nid\n.\ncbIncludeLower\n);\n\n    \nfinal\n \nCheckBox\n \ncbIncludeUpper\n \n=\n \nButterKnife\n.\nfindById\n(\nview\n,\n \nR\n.\nid\n.\ncbIncludeUpper\n);\n\n    \nfinal\n \nEditText\n \netLowerPrice\n \n=\n \nButterKnife\n.\nfindById\n(\nview\n,\n \nR\n.\nid\n.\netPriceFrom\n);\n\n    \nfinal\n \nEditText\n \netUpperPrice\n \n=\n \nButterKnife\n.\nfindById\n(\nview\n,\n \nR\n.\nid\n.\netPriceTo\n);\n\n    \nif\n(\ncbIncludeLower\n.\nisChecked\n())\n \n{\n\n        \nquery\n.\ngreaterThenOrEqualTo\n(\npriceField\n,\n \ngetPrice\n(\netLowerPrice\n));\n\n    \n}\n \nelse\n \n{\n\n        \nquery\n.\ngreaterThan\n(\npriceField\n,\n \ngetPrice\n(\netLowerPrice\n));\n\n    \n}\n\n    \nif\n(\ncbIncludeUpper\n.\nisChecked\n())\n \n{\n\n        \nquery\n.\nlessThanOrEqualTo\n(\npriceField\n,\n \ngetPrice\n(\netUpperPrice\n));\n\n    \n}\n \nelse\n \n{\n\n        \nquery\n.\nlessThan\n(\npriceField\n,\n \ngetPrice\n(\netUpperPrice\n));\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\u0424\u0438\u043b\u044c\u0442\u0440 \u0437\u0430\u0434\u0430\u0435\u0442\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c: \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442 \nQuery\n, \u0432\u044b\u0431\u043e\u0440\u043a\u0443 \u043c\u044b \u0432\u0435\u0434\u0435\u043c \u0438\u0437 \u043d\u0430\u0448\u0435\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438. \u0414\u0430\u043b\u0435\u0435: \u0435\u0441\u043b\u0438 \u0432\u044b\u0431\u0440\u0430\u043d \u0444\u0438\u043b\u044c\u0442\u0440 \u0446\u0435\u043d\u044b (\u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0430\u044f \u0433\u0430\u043b\u043e\u0447\u043a\u0430), \u0442\u043e \u043c\u044b \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u0438\u0437 \u0411\u0414 \u0442\u043e\u043b\u044c\u043a\u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u0434\u043b\u044f \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0446\u0435\u043d\u0430 \u043f\u043e\u043f\u0430\u0434\u0430\u0435\u0442 \u0432 \u043f\u0440\u0435\u0434\u0435\u043b\u044b \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0445 \u0433\u0440\u0430\u043d\u0438\u0446.\n\n\n\u0413\u0440\u0430\u043d\u0438\u0446\u044b \u0446\u0435\u043d \u0437\u0430\u0434\u0430\u044e\u0442\u0441\u044f \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432:\n\n greaterThan \u0437\u0430\u0434\u0430\u0435\u0442 \u043d\u0438\u0436\u043d\u044e\u044e \u0433\u0440\u0430\u043d\u0438\u0446\u0443 \u0446\u0435\u043d\u044b (\u043d\u0435 \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0443\u044e \u0446\u0435\u043d\u0443).\n\n lessThan \u0437\u0430\u0434\u0430\u0435\u0442 \u0432\u0435\u0440\u0445\u043d\u044e\u044e \u0433\u0440\u0430\u043d\u0438\u0446\u0443 \u0446\u0435\u043d\u044b (\u043d\u0435 \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0443\u044e \u0446\u0435\u043d\u0443).\n\n greaterThanOrEqualTo \u0437\u0430\u0434\u0430\u0435\u0442 \u043d\u0438\u0436\u043d\u044e\u044e \u0433\u0440\u0430\u043d\u0438\u0446\u0443 \u0446\u0435\u043d\u044b \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0443\u044e \u0446\u0435\u043d\u0443.\n\n lessThanOrEqualTo \u0437\u0430\u0434\u0430\u0435\u0442 \u0432\u0435\u0440\u0445\u043d\u044e\u044e \u0433\u0440\u0430\u043d\u0438\u0446\u0443 \u0446\u0435\u043d\u044b \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0443\u044e \u0446\u0435\u043d\u0443.\n\n\n\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0435 \u0437\u0430\u0434\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 \nequalTo(field, value)\n \u043a\u043b\u0430\u0441\u0441\u0430 \nQuery\n \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0443 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430 \u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0432 \u0432\u044b\u0431\u043e\u0440\u043a\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435 \nfield\n \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u0435\u0442 \u0441 \nvalue\n. \u0412 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435 Android 7.0 \u0434\u0435\u0432\u0430\u0439\u0441\u044b, \u0443\u043a\u0430\u0437\u0430\u0432 \nquery.equalTo(\u00abplatform\u00bb, \u00abAndroid 7.0\u00bb);\n\n\n\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u043c \u0446\u0432\u0435\u0442\u0430\u043c \u0437\u0430\u0434\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 \ncontainedIn\n \u043a\u043b\u0430\u0441\u0441\u0430 \nQuery\n \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0432 \u0432\u044b\u0431\u043e\u0440\u043a\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b \u0434\u043b\u044f \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043f\u043e\u043b\u0435 (\u0442\u0438\u043f\u0430 \u043c\u0430\u0441\u0441\u0438\u0432) \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432\u0441\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430.\n\n\n\u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u043c\u044b \u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u043c \u0437\u0430\u043f\u0440\u043e\u0441 (query) \u0434\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u0411\u0414 \u0438 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u044b \u043a\u043b\u0430\u0441\u0441\u0430 \nDocumentInfo\n \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0437\u0443\u044e\u0449\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b, \u0443\u0434\u043e\u0432\u043b\u0435\u0442\u0432\u043e\u0440\u044f\u044e\u0449\u0438\u0435 \u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443. \u042d\u0442\u0443 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u0432 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 callback \u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e.\n\n\n\u041f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \n \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0435 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0439 \u0441\u0435\u0441\u0441\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f (logout) \u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043f\u043e\u043f\u0430\u0434\u0430\u0435\u0442 \u043e\u0431\u0440\u0430\u0442\u043d\u043e \u043d\u0430 \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0439 \u044d\u043a\u0440\u0430\u043d \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.\n\n\n\u0414\u043b\u044f \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043d\u0443\u0436\u043d\u043e \u0437\u0430\u0434\u0430\u0442\u044c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043d\u0430\u0436\u0430\u0442\u0438\u044f \u0434\u043b\u044f \u0434\u0430\u043d\u043d\u043e\u0439 \u043a\u043d\u043e\u043f\u043a\u0438, \u0432\u044b\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u043c\u0435\u0442\u043e\u0434  \nlogout\n \u043a\u043b\u0430\u0441\u0441\u0430 \nUser\n \u0434\u043b\u044f \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0439 \u0441\u0435\u0441\u0441\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f:\n\n\npublic\n \nstatic\n \nvoid\n \nlogout\n(\nfinal\n \nContext\n \ncontext\n)\n \n{\n\n    \nLocalPersistence\n.\nwriteObjectToFile\n(\ncontext\n,\n \nnull\n,\n \nLocalPersistence\n.\nFILE_USER_INFO\n);\n\n    \nnew\n \nUser\n().\nlogout\n(\nnew\n \nCallbackLogoutUser\n()\n \n{\n\n        \n@Override\n\n        \npublic\n \nvoid\n \nonLogoutSucceed\n()\n \n{\n\n            \ndisplay\n(\ncontext\n);\n\n        \n}\n\n\n        \n@Override\n\n        \npublic\n \nvoid\n \nonLogoutFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n            \nHelper\n.\nshowToast\n(\ncontext\n,\n \nR\n.\nstring\n.\nerror\n);\n\n        \n}\n\n    \n});\n\n\n}\n\n\n\n\n\u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u043c\u0435\u0442\u043e\u0434\u0435 \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u0443\u0434\u0430\u043b\u044f\u0435\u0442\u0441\u044f \u0444\u0430\u0439\u043b \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435 (\u0434\u0430\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b \u0445\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0442\u043e\u0433\u043e \u0444\u0430\u043a\u0442\u0430, \u0447\u0442\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043f\u0440\u043e\u0448\u0435\u043b \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e \u0432 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438) \u0437\u0430\u0442\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043c\u0435\u0442\u043e\u0434 \nlogout(\u2026)\n \u043a\u043b\u0430\u0441\u0441\u0430 \nUser\n, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0437\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442 \u0430\u043a\u0442\u0438\u0432\u043d\u0443\u044e \u0441\u0435\u0441\u0441\u0438\u044e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n\n\u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0439 \u0441\u0435\u0441\u0441\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043c\u0435\u0442\u043e\u0434 \nonLogoutSucceed(...) callback\n \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430, \u0438\u043d\u0430\u0447\u0435 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043c\u0435\u0442\u043e\u0434 \nonLogoutFailed(...)\n.\n\n\n\u042d\u043a\u0440\u0430\u043d \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435.\n\n\n\u041f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u043b\u044e\u0431\u043e\u0439 \u0438\u0437 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0441\u043f\u0438\u0441\u043a\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432 \u0433\u043b\u0430\u0432\u043d\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043f\u043e\u043f\u0430\u0434\u0430\u0435\u0442 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0431 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435.\n\n\n\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \nItemDetailsInfo\n \u0438 \u0432 layout-\u0444\u0430\u0439\u043b \u0434\u0430\u043d\u043d\u043e\u0439 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 xml \u043a\u043e\u0434:\n\n\n?xml version=\n1.0\n encoding=\nutf-8\n?\n\n\nLinearLayout\n \nxmlns:android=\nhttp://schemas.android.com/apk/res/android\n\n    \nxmlns:tools=\nhttp://schemas.android.com/tools\n\n    \nandroid:id=\n@+id/activity_detailed_item_info\n\n    \nandroid:layout_width=\nmatch_parent\n\n    \nandroid:layout_height=\nmatch_parent\n\n    \nandroid:padding=\n16dp\n\n    \nandroid:orientation=\nvertical\n\n    \ntools:context=\nprof_itgroup.ru.storehouseapp.Activities.ItemDetailsActivity\n\n    \nScrollView\n\n        \nandroid:layout_width=\nmatch_parent\n\n        \nandroid:layout_height=\nwrap_content\n\n            \ninclude\n \nlayout=\n@layout/item_core\n/\n\n    \n/ScrollView\n\n\n/LinearLayout\n\n\n\n\n\n\n\u041a\u0430\u043a \u0432\u0438\u0434\u043d\u043e layout-\u0444\u0430\u0439\u043b \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 \u043f\u0435\u0440\u0435\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 xml \u043a\u043e\u0434 \u044d\u043a\u0440\u0430\u043d\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0432 \u0411\u0414, \u043d\u043e \u043d\u0430 \u0434\u0430\u043d\u043d\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0435 \u0442\u0430\u043a \u0436\u0435 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u0435\u0440\u0435\u0439\u0442\u0438 \u0432 \u0440\u0435\u0436\u0438\u043c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f, \u0442.\u0435 \u0430\u043a\u0442\u0438\u0432\u0438\u0432\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u043a\u0440\u044b\u0442\u044b\u0435 \nView\n \u044d\u043a\u0440\u0430\u043d\u0430.\n\n\n\u0412 \nActionBar\n \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430 \u0442\u0430\u043a \u0436\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0438\u043a\u043e\u043d\u043a\u0438 \u0434\u043b\u044f \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0437\u0430\u043f\u0438\u0441\u0438 \u043e\u0431 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 (\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430), \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0438\u0441\u0438 \u043e\u0431 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 (\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430) \u0438 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0430 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0431 \u043e\u0442\u0433\u0440\u0443\u0437\u043a\u0435.\n\n\n\u0414\u043b\u044f \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0438\u043a\u043e\u043d\u043e\u043a \u0432 \nActionBar\n \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c layout-\u0444\u0430\u0439\u043b \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \ndetailed_info_menu\n \u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0432 \u043d\u0435\u0433\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043a\u043e\u0434:\n\n\nmenu\n \nxmlns:android=\nhttp://schemas.android.com/apk/res/android\n\n    \nxmlns:app=\nhttp://schemas.android.com/apk/res-auto\n\n    \nitem\n\n        \nandroid:id=\n@+id/action_edit_item\n\n        \nandroid:title=\n@string/action_edit_item\n\n        \nandroid:icon=\n@drawable/ic_mode_edit_white_24dp\n\n        \napp:showAsAction=\nalways\n/\n\n\n    \nitem\n\n        \nandroid:id=\n@+id/action_remove_item\n\n        \nandroid:title=\n@string/action_remove_item\n\n        \nandroid:icon=\n@drawable/ic_delete_forever_white_24dp\n\n        \napp:showAsAction=\nifRoom\n/\n\n\n     \nitem\n\n        \nandroid:id=\n@+id/action_prepare_item\n\n        \nandroid:icon=\n@drawable/ic_assignment_white_24dp\n\n        \nandroid:title=\n@string/action_prepare_item\n\n        \napp:showAsAction=\nifRoom\n/\n\n\n/menu\n\n\n\n\n\n\n\u0412 \u0441\u0430\u043c\u043e\u0439 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u043c\u0435\u0442\u043e\u0434:\n\n\n@Override\n\n\npublic\n \nboolean\n \nonCreateOptionsMenu\n(\nMenu\n \nmenu\n)\n \n{\n\n    \ngetMenuInflater\n().\ninflate\n(\nR\n.\nmenu\n.\ndetailed_info_menu\n,\n \nmenu\n);\n\n    \nreturn\n \nsuper\n.\nonCreateOptionsMenu\n(\nmenu\n);\n\n\n}\n\n\n\n\n\n\n\u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442 \u0438\u043a\u043e\u043d\u043a\u0438 \u0432 \nActionBar\n.\n\n\n\u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u043d\u0430\u0436\u0430\u0442\u0438\u0435 \u043d\u0430 \u0438\u043a\u043e\u043d\u043a\u0438 \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043d\u0438\u0436\u0435:\n\n\n@Override\n\n\npublic\n \nboolean\n \nonOptionsItemSelected\n(\nMenuItem\n \nitem\n)\n \n{\n\n    \nswitch\n \n(\nitem\n.\ngetItemId\n())\n \n{\n\n        \ncase\n \nandroid\n.\nR\n.\nid\n.\nhome\n:\n\n            \nfinish\n();\n\n            \nbreak\n;\n\n        \ncase\n \nR\n.\nid\n.\naction_edit_item\n:\n\n            \nsetEditMode\n(\ntrue\n);\n\n            \nbreak\n;\n\n        \ncase\n \nR\n.\nid\n.\naction_remove_item\n:\n\n            \nDocumentHelper\n.\nfetchAndRemoveDocument\n(\nthis\n,\n \ndocument\n,\n \ngetDocumentInfo\n());\n\n            \nbreak\n;\n\n        \ncase\n \nR\n.\nid\n.\naction_prepare_item\n:\n\n            \nSendItemActivity\n.\ndisplay\n(\nthis\n,\n \ngetDocumentInfo\n());\n\n            \nbreak\n;\n\n    \n}\n\n    \nreturn\n \nsuper\n.\nonOptionsItemSelected\n(\nitem\n);\n\n\n}\n\n\n\n\n\n\n\u0412 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u043c \u044d\u043a\u0440\u0430\u043d \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043d\u0430 \u0440\u0438\u0441\u0443\u043d\u043a\u0435 3.1\n\n\n\n\n\u0420\u0438\u0441\u0443\u043d\u043e\u043a 3.1 \u2014 \u044d\u043a\u0440\u0430\u043d \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0431 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435.\n\n\n\u0412 \u0432\u0435\u0440\u0445\u043d\u0435\u0439 \u043f\u0440\u0430\u0432\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u044d\u043a\u0440\u0430\u043d\u0430 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0438\u043a\u043e\u043d\u043a\u0438:\n\n\n \u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435\n\n\n \u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u043e\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u0438\u0437 \u0411\u0414\n\n\n \u041f\u0435\u0440\u0435\u0439\u0442\u0438 \u043a \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0431 \u043e\u0442\u0433\u0440\u0443\u0437\u043a\u0435 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u043e\u0432\u0430\u0440\u0430.\n\n\n\u041f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \n \u044d\u043a\u0440\u0430\u043d \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u0432 \u0440\u0435\u0436\u0438\u043c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0441\u0434\u0435\u043b\u0430\u0435\u043c \u0432\u0438\u0434\u0438\u043c\u044b\u043c\u0438 \u043a\u043d\u043e\u043f\u043a\u0438 \u00ab\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0446\u0432\u0435\u0442\u00bb, \u00ab\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0446\u0432\u0435\u0442\u00bb, \u00ab\u0423\u0432\u0435\u043b\u0438\u0447\u0438\u0442\u044c \u0446\u0435\u043d\u0443 \u043d\u0430 \u0441\u043a\u043b\u0430\u0434\u0435\u00bb, \u00ab\u0423\u043c\u0435\u043d\u044c\u0448\u0438\u0442\u044c \u0446\u0435\u043d\u0443 \u043d\u0430 \u0441\u043a\u043b\u0430\u0434\u0435\u00bb. \u042d\u043a\u0440\u0430\u043d \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 \u0432 \u0440\u0435\u0436\u0438\u043c\u0435 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u043e\u043a\u0430\u0437\u0430\u043d \u043d\u0430 \u0440\u0438\u0441\u0443\u043d\u043a\u0435 3.2\n\n\n\n\n\u0420\u0438\u0441\u0443\u043d\u043e\u043a 3.2 \u2014 \u042d\u043a\u0440\u0430\u043d \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0431 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 \u0432 \u0440\u0435\u0436\u0438\u043c\u0435 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\n\n\u0417\u0430\u0434\u0430\u0434\u0438\u043c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043d\u0430\u0436\u0430\u0442\u0438\u044f \u043a\u043d\u043e\u043f\u043a\u0438 \u00ab\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0437\u0430\u043f\u0438\u0441\u044c\u00bb, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043c\u0435\u0442\u043e\u0434:\n\n\nprivate\n \nvoid\n \nupdateItemDocument\n()\n \n{\n\n    \ndocument\n.\ngetDocumentById\n(\ngetDocumentInfo\n().\ngetId\n(),\n \nnew\n \nCallbackGetDocumentById\n()\n \n{\n\n        \n@Override\n\n        \npublic\n \nvoid\n \nonDocumentFound\n(\nDocumentInfo\n \ndocumentInfo\n)\n \n{\n\n            \ndocument\n.\nupdateDocument\n()\n\n                    \n.\nset\n(\nfields\n.\ngetDeviceNameField\n(),\n \ngetStringFrom\n(\netDeviceName\n))\n\n                    \n.\nset\n(\nfields\n.\ngetPlatformField\n(),\n \ngetStringFrom\n(\netDevicePlatform\n))\n\n                    \n.\nset\n(\nfields\n.\ngetCameraInfoField\n(),\n \ngetStringFrom\n(\netDeviceCameraInfo\n));\n\n            \nsetColorsUpdateInfo\n();\n\n            \ndocument\n.\nupdateDocument\n().\ninc\n(\nfields\n.\ngetDevicePriceField\n(),\n \nincreaseCount\n);\n\n            \ndocument\n.\nsaveDocument\n(\nnew\n \nCallbackDocumentSaved\n()\n \n{\n\n                \n@Override\n\n                \npublic\n \nvoid\n \nonDocumentSaved\n()\n \n{\n\n                    \nsetEditMode\n(\nfalse\n);\n\n                    \nfor\n \n(\nString\n \ncolor\n \n:\n \ndeviceColors\n.\nkeySet\n())\n \n{\n\n                        \ndeviceColors\n.\nput\n(\ncolor\n,\n \nColorState\n.\nFROM_DB\n);\n\n                    \n}\n\n                    \ndocument\n.\nupdateDocument\n().\ngetUpdateInfo\n().\nclear\n();\n\n                \n}\n\n                \n@Override\n\n                \npublic\n \nvoid\n \nonDocumentSaveFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                    \nshowToast\n(\nR\n.\nstring\n.\nerror_update_item\n);\n\n                    \nsetFields\n();\n\n                \n}\n\n            \n});\n\n        \n}\n\n        \n@Override\n\n        \npublic\n \nvoid\n \nonDocumentNotFound\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n            \nshowToast\n(\nR\n.\nstring\n.\nerror_update_item\n);\n\n            \nsetFields\n();\n\n        \n}\n\n    \n});\n\n\n}\n\n\nprivate\n \nvoid\n \nsetColorsUpdateInfo\n()\n \n{\n\n    \nfor\n \n(\nString\n \ncolor\n \n:\n \ndeviceColors\n.\nkeySet\n())\n \n{\n\n        \nColorState\n \ncolorState\n \n=\n \ndeviceColors\n.\nget\n(\ncolor\n);\n\n        \nswitch\n \n(\ncolorState\n)\n \n{\n\n            \ncase\n \nTO_REMOVE\n:\n\n                \ndocument\n.\nupdateDocument\n().\npull\n(\nfields\n.\ngetColorsAvailableField\n(),\n \ncolor\n);\n\n                \nbreak\n;\n\n\n            \ncase\n \nNEW\n:\n\n                \ndocument\n.\nupdateDocument\n().\npush\n(\nfields\n.\ngetColorsAvailableField\n(),\n \ncolor\n);\n\n                \nbreak\n;\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\u0414\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0431 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043c\u0435\u0442\u043e\u0434 \nupdateDocument()\n \u043a\u043b\u0430\u0441\u0441\u0430 \nDocument\n. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043a\u043b\u0430\u0441\u0441\u0430 Document \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043c\u044b \u043f\u0440\u043e\u0432\u043e\u0434\u0438\u043c \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0430\u0441\u0441\u043e\u0446\u0438\u0438\u0440\u043e\u0432\u0430\u043d \u0441 \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u043c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u043c \u0438\u0437 \u0411\u0414 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 \ngetDocumentById\n. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u043d\u043e\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u043f\u043e\u043b\u0435\u0439:\n\n\n\n\n\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 (\u043f\u043e\u043b\u0435 deviceName \u0432 \u0411\u0414)\n\n\n\u041e\u0421 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 (\u043f\u043e\u043b\u0435 platform \u0432 \u0411\u0414)\n\n\n\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u0430\u043c\u0435\u0440\u0435 (deviceCameraInfo)\n\n\n\n\n\u0437\u0430\u0434\u0430\u044e\u0442\u0441\u044f \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 \nset(field, value)\n \u043a\u043b\u0430\u0441\u0441\u0430 \nUpdate\n.\n\n\n\u041f\u043e\u043b\u0435 \u00ab\u0446\u0435\u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430\u00bb (\u043f\u043e\u043b\u0435 devicePrice \u0432 \u0411\u0414) \u0437\u0430\u0434\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 \n.inc(field, value)\n \u043a\u043b\u0430\u0441\u0441\u0430 \nUpdate\n. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u0435\u0441\u043b\u0438 \u043c\u044b \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u043c \u0446\u0435\u043d\u0443, \u0442\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0432 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 value, \u0435\u0441\u043b\u0438 \u0443\u043c\u0435\u043d\u044c\u0448\u0430\u0435\u043c, \u0442\u043e \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u0443\u044e.\n\n\n\u041f\u043e\u043b\u0435 \u00ab\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u0446\u0432\u0435\u0442\u0430\u00bb (\u043f\u043e\u043b\u0435 colorsAvailable \u0432 \u0411\u0414) \u0437\u0430\u0434\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \n.push()\n (\u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0446\u0432\u0435\u0442\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430) \u0438 \n.pull()\n (\u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0446\u0432\u0435\u0442\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430).\n\n\n\u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0435\u0449\u0435 \u0440\u0430\u0437 \u0440\u0430\u0431\u043e\u0442\u0443 \u043c\u0435\u0442\u043e\u0434\u0430 \nupdateItemDocument(...)\n: \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u0435\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0438\u0442\u044c\u0441\u044f, \u0447\u0442\u043e \u0442\u0430\u043a\u043e\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0438 \u0430\u0441\u0441\u043e\u0446\u0438\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043d\u0430\u0448 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043a\u043b\u0430\u0441\u0441\u0430 \nDocument\n \u0441 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u043c \u0432 \u0411\u0414. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043c\u0435\u0442\u043e\u0434 \n.getDocumentById(\u2026)\n \u043a\u043b\u0430\u0441\u0441\u0430 \nDocument\n.\n\u041f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e \u043a\u0430\u043a \u043c\u044b \u0430\u0441\u0441\u043e\u0446\u0438\u0438\u0440\u043e\u0432\u0430\u043b\u0438 \u043d\u0430\u0448 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0441 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u043c \u0438\u0437 \u0411\u0414 \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442 \u043a\u043b\u0430\u0441\u0441\u0430 \nUpdate\n \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 \n.updateDocument()\n. \u0414\u0430\u043b\u0435\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043e\u0431\u044a\u0435\u043a\u0442 \u043a\u043b\u0430\u0441\u0441\u0430 Update \u043c\u044b \u0437\u0430\u0434\u0430\u0435\u043c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435, \u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0443 \u0438 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u0430\u043c\u0435\u0440\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 \n.set(\u2026)\n, \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0432 \u043c\u0430\u0441\u0441\u0438\u0432 (\u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 \n.push()\n) \u0438\u043b\u0438 \u0443\u0434\u0430\u043b\u044f\u0435\u043c \u0438\u0437 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 (\u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 \n.pull\n) \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u0446\u0432\u0435\u0442\u0430 \u0434\u043b\u044f \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u0438 \u0438\u0437\u043c\u0435\u043d\u044f\u0435\u043c \u0446\u0435\u043d\u0443 (\u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 \n.inc()\n) \u0432 \u043f\u043e\u043b\u0435 \u0446\u0435\u043d\u044b. \u041f\u043e\u0441\u043b\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0432\u0441\u0435\u0445 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0445 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439 \u0432 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0435 \u043a\u043b\u0430\u0441\u0441\u0430 \nUpdate\n \u043c\u044b \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u043c \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 \n.saveDocument(\u2026)\n \u043a\u043b\u0430\u0441\u0441\u0430 \nDocument\n.\n\n\n\u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d \u043f\u0443\u0442\u0435\u043c \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0446\u0438\u0438 \u0441 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u043c \u0438\u0437 \u0411\u0414 (\u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 \n.getDocumentById\n), \u0442\u043e \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \n.saveDocument(\u2026)\n \u043f\u0440\u043e\u0438\u0437\u043e\u0439\u0434\u0435\u0442 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430, \u0430 \u043d\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430.\n\n\n\u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u043a\u043d\u043e\u043f\u043a\u0438 \n - \u043f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u0434\u0430\u043d\u043d\u0443\u044e \u043a\u043d\u043e\u043f\u043a\u0443 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0431 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 \u0438\u0437 \u0411\u0414. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043d\u0430\u0436\u0430\u0442\u0438\u044f \u0434\u0430\u043d\u043d\u043e\u0439 \u043a\u043d\u043e\u043f\u043a\u0438 \u0432\u044b\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u043c\u0435\u0442\u043e\u0434 \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043d\u0438\u0436\u0435:\n\n\npublic\n \nstatic\n \nvoid\n \nfetchAndRemoveDocument\n(\nfinal\n \nContext\n \ncontext\n,\n \nfinal\n \nDocument\n \ndocument\n,\n \nDocumentInfo\n \ndocumentInfo\n)\n \n{\n\n    \ndocument\n.\ngetDocumentById\n(\ndocumentInfo\n.\ngetId\n(),\n \nnew\n \nCallbackGetDocumentById\n()\n \n{\n\n        \n@Override\n\n        \npublic\n \nvoid\n \nonDocumentFound\n(\nDocumentInfo\n \ndocumentInfo\n)\n \n{\n\n            \nremoveDocument\n(\ncontext\n,\n \ndocument\n);\n\n        \n}\n\n        \n@Override\n\n        \npublic\n \nvoid\n \nonDocumentNotFound\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n            \nHelper\n.\nshowToast\n(\ncontext\n,\n \nR\n.\nstring\n.\nerror_document_not_removed\n);\n\n        \n}\n\n    \n});\n\n\n}\n\n\npublic\n \nstatic\n \nvoid\n \nremoveDocument\n(\nfinal\n \nContext\n \ncontext\n,\n \nDocument\n \ndocument\n)\n \n{\n\n        \ndocument\n.\nremoveDocument\n(\nnew\n \nCallbackRemoveDocument\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonRemoveSucceed\n(\nResponseRemove\n \nresponseRemove\n)\n \n{\n\n                \nToast\n.\nmakeText\n(\ncontext\n,\n \ncontext\n.\ngetString\n(\nR\n.\nstring\n.\ndocument_removed\n),\n \nToast\n.\nLENGTH_SHORT\n).\nshow\n();\n\n                \n((\nActivity\n)\n \ncontext\n).\nfinish\n();\n\n            \n}\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonRemoveFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \nToast\n.\nmakeText\n(\ncontext\n,\n \ncontext\n.\ngetString\n(\nR\n.\nstring\n.\nerror_document_not_removed\n),\n \nToast\n.\nLENGTH_SHORT\n).\nshow\n();\n\n            \n}\n\n        \n});\n\n\n}\n\n\n\n\n\n\n\u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0439:\n\u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043c\u0435\u0442\u043e\u0434 \n.getDocumentById(...)\n \u043a\u043b\u0430\u0441\u0441\u0430 \nDocument\n \u0434\u043b\u044f \u0442\u043e\u0433\u043e \u0447\u0442\u043e\u0431\u044b \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0438\u0442\u044c\u0441\u044f, \u0447\u0442\u043e \u0442\u0430\u043a\u043e\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0438 \u043f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0446\u0438\u044e \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0441 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u043c \u043d\u0430\u043c\u0438 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u043e\u043c \u043a\u043b\u0430\u0441\u0441\u0430 \nDocument\n.\n\n\n\u041f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e \u043a\u0430\u043a \u043c\u044b \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0438\u043b\u0438\u0441\u044c \u0432 \u043d\u0430\u043b\u0438\u0447\u0438\u0438 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u043c\u044b \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u043c\u0435\u0442\u043e\u0434 \n.removeDocument()\n \u043a\u043b\u0430\u0441\u0441\u0430 \nDocument\n \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0438\u0437 \u0411\u0414.\n\n\n\u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u043a\u043d\u043e\u043f\u043a\u0438 \n. \u041f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u044d\u0442\u0443 \u043a\u043d\u043e\u043f\u043a\u0443 \u043c\u044b \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u043a \u044d\u043a\u0440\u0430\u043d\u0443 \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e\u0431 \u043e\u0442\u0433\u0440\u0443\u0437\u043a\u0435 \u0442\u043e\u0432\u0430\u0440\u0430. \n\n\n\u042d\u043a\u0440\u0430\u043d \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0431 \u043e\u0442\u0433\u0440\u0443\u0437\u043a\u0435 \u0442\u043e\u0432\u0430\u0440\u0430.\n\n\n\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043d\u043e\u0432\u0443\u044e \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \nSendItemActivity\n \u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0432 layout-\u0444\u0430\u0439\u043b \u0434\u0430\u043d\u043d\u043e\u0439 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 xml \u043a\u043e\u0434:\n\n\n?xml version=\n1.0\n encoding=\nutf-8\n?\n\n\nLinearLayout\n \nxmlns:android=\nhttp://schemas.android.com/apk/res/android\n\n    \nxmlns:tools=\nhttp://schemas.android.com/tools\n\n    \nandroid:id=\n@+id/activity_send_item\n\n    \nandroid:layout_width=\nmatch_parent\n\n    \nandroid:layout_height=\nmatch_parent\n\n    \nandroid:padding=\n16dp\n\n    \nandroid:orientation=\nvertical\n\n    \ntools:context=\nprof_itgroup.ru.storehouseapp.Activities.SendItemActivity\n\n    \nLinearLayout\n\n        \nandroid:id=\n@+id/llWaitingUsers\n\n        \nandroid:orientation=\nvertical\n\n        \nandroid:layout_width=\nmatch_parent\n\n        \nandroid:layout_height=\nwrap_content\n\n        \nTextView\n\n            \nstyle=\n@style/label_style\n\n            \nandroid:textColor=\n@android:color/black\n\n            \nandroid:text=\n@string/action_waiting_list\n/\n\n        \nTextView\n\n            \nandroid:id=\n@+id/tvWaitingUsers\n\n            \nstyle=\n@style/label_style\n/\n\n        \nTextView\n\n            \nandroid:id=\n@+id/tvLastChangeLabel\n\n            \nandroid:textColor=\n@android:color/black\n\n            \nandroid:layout_marginTop=\n8dp\n\n            \nstyle=\n@style/label_style\n\n            \nandroid:text=\n@string/last_change\n/\n\n        \nTextView\n\n            \nandroid:id=\n@+id/tvLastChange\n\n            \nstyle=\n@style/label_style\n/\n\n        \nLinearLayout\n\n            \nandroid:id=\n@+id/llInfoContainer\n\n            \nandroid:orientation=\nvertical\n\n            \nandroid:layout_width=\nmatch_parent\n\n            \nandroid:layout_height=\nwrap_content\n\n            \nRelativeLayout\n\n                \nandroid:layout_width=\nmatch_parent\n\n                \nandroid:layout_height=\nwrap_content\n\n                \nTextView\n\n                    \nandroid:layout_marginTop=\n8dp\n\n                    \nandroid:textColor=\n@android:color/black\n\n                    \nandroid:text=\n@string/item_info\n\n                    \nstyle=\n@style/label_style\n \n/\n\n                \nTextView\n\n                    \nandroid:id=\n@+id/tvEdit\n\n                    \nandroid:layout_alignParentRight=\ntrue\n\n                    \nandroid:layout_marginTop=\n10dp\n\n                    \nandroid:text=\n@string/editInfo\n\n                    \nandroid:textColor=\n@color/colorPrimary\n\n                    \nandroid:layout_width=\nwrap_content\n\n                    \nandroid:layout_height=\nwrap_content\n \n/\n\n            \n/RelativeLayout\n\n            \nScrollView\n\n                \nandroid:layout_marginTop=\n8dp\n\n                \nandroid:layout_width=\nwrap_content\n\n                \nandroid:layout_height=\n180dp\n\n                \nEditText\n\n                    \nandroid:id=\n@+id/etItemInfo\n\n                    \nandroid:enabled=\nfalse\n\n                    \nandroid:layout_width=\nwrap_content\n\n                    \nandroid:layout_height=\n180dp\n \n/\n\n            \n/ScrollView\n\n        \n/LinearLayout\n\n    \n/LinearLayout\n\n    \nLinearLayout\n\n        \nandroid:orientation=\nvertical\n\n        \nandroid:layout_gravity=\ncenter_horizontal\n\n        \nandroid:layout_width=\nwrap_content\n\n        \nandroid:layout_height=\nwrap_content\n\n        \nButton\n\n            \nandroid:layout_marginTop=\n8dp\n\n            \nandroid:layout_gravity=\ncenter_horizontal\n\n            \nandroid:id=\n@+id/btnAppUserInList\n\n            \nandroid:text=\n@string/addUserInList\n\n            \nandroid:layout_width=\nmatch_parent\n\n            \nandroid:layout_height=\nwrap_content\n \n/\n\n        \nButton\n\n            \nandroid:layout_marginTop=\n8dp\n\n            \nandroid:layout_gravity=\ncenter_horizontal\n\n            \nandroid:id=\n@+id/btnSendToUser\n\n            \nandroid:text=\n@string/sendToUser\n\n            \nandroid:layout_width=\nmatch_parent\n\n            \nandroid:layout_height=\nwrap_content\n \n/\n\n    \n/LinearLayout\n\n\n/LinearLayout\n\n\n\n\n\n\n\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u044d\u043a\u0440\u0430\u043d \u043f\u043e\u043a\u0430\u0437\u0430\u043d \u043d\u0430 \u0440\u0438\u0441\u0443\u043d\u043a\u0435  4.1\n\n\n\n\n\u0420\u0438\u0441\u0443\u043d\u043e\u043a 4.1 \u2014 \u044d\u043a\u0440\u0430\u043d \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e\u0431 \u043e\u0442\u0433\u0440\u0443\u0437\u043a\u0435 \u0442\u043e\u0432\u0430\u0440\u0430\n\n\n\u041f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \u00ab\u0414\u041e\u0411\u0410\u0412\u0418\u0422\u042c \u041f\u041e\u041a\u0423\u041f\u0410\u0422\u0415\u041b\u042f\u00bb \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0434\u0438\u0430\u043b\u043e\u0433\u043e\u0432\u043e\u0435 \u043e\u043a\u043d\u043e \u0441 \u043f\u0440\u043e\u0441\u044c\u0431\u043e\u0439 \u0432\u0432\u0435\u0441\u0442\u0438 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u0435 \u043f\u043e\u0441\u043b\u0435 \u0447\u0435\u0433\u043e \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043c\u0435\u0442\u043e\u0434:\n\n\nprivate\n \nvoid\n \naddBuyerAndRefreshWaitingList\n(\nfinal\n \nString\n \nbuyerInfo\n)\n \n{\n\n    \nif\n(!\nbuyerInfo\n.\ntrim\n().\nisEmpty\n())\n \n{\n\n        \ndocument\n.\ngetDocumentById\n(\ngetDocumentInfo\n().\ngetId\n(),\n \nnew\n \nCallbackGetDocumentById\n()\n \n{\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentFound\n(\nDocumentInfo\n \ndocumentInfo\n)\n \n{\n\n                \ndocument\n.\nupdateDocument\n().\npush\n(\nfields\n.\ngetBuyersField\n(),\n \nbuyerInfo\n);\n\n                \ndocument\n.\nsaveDocument\n(\nnew\n \nCallbackDocumentSaved\n()\n \n{\n\n                    \n@Override\n\n                    \npublic\n \nvoid\n \nonDocumentSaved\n()\n \n{\n\n                        \ndocument\n.\nupdateDocument\n().\ngetUpdateInfo\n().\nclear\n();\n\n                        \nrefreshWaitingList\n();\n\n                        \nshowToast\n(\ngetBaseContext\n(),\n \nR\n.\nstring\n.\nadd_waiting_buyer\n);\n\n                    \n}\n\n                    \n@Override\n\n                    \npublic\n \nvoid\n \nonDocumentSaveFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                        \nshowToast\n(\ngetBaseContext\n(),\n \nR\n.\nstring\n.\nerror\n);\n\n                    \n}\n\n                \n});\n\n            \n}\n\n            \n@Override\n\n            \npublic\n \nvoid\n \nonDocumentNotFound\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                \nshowToast\n(\ngetBaseContext\n(),\n \nR\n.\nstring\n.\nerror\n);\n\n            \n}\n\n        \n});\n\n    \n}\n\n\n}\n\n\n\n\n\n\n\u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043c\u0435\u0442\u043e\u0434 \u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e. \u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u043e\u0435 \u043f\u043e\u043b\u0435 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u0443\u0441\u0442\u044b\u043c. \u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0435\u0441\u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0432\u0432\u0435\u043b \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0446\u0438\u044f \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 \u043a\u043b\u0430\u0441\u0441\u0430 Document \u0441 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u043c \u0432 \u0411\u0414 \u043f\u043e\u0441\u043b\u0435 \u0447\u0435\u0433\u043e \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c: \u0432\u0435\u0434\u0435\u043d\u043d\u0430\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0432 \u043a\u043e\u043d\u0435\u0446 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u0435\u0439 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u0435\u0442\u043e\u0434\u0430 \n.push()\n \u043a\u043b\u0430\u0441\u0441\u0430 \nUpdate\n. \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u043e\u0447\u0435\u0440\u0435\u0434\u044c \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u0435\u0439, \u043e\u0436\u0438\u0434\u0430\u044e\u0449\u0438\u0445 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u0442\u043e\u0432\u0430\u0440\u0430.\n\n\n\u041f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \u00ab\u041e\u0422\u0413\u0420\u0423\u0417\u0418\u0422\u042c \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042e\u00bb \u0438\u0437 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043e\u0436\u0438\u0434\u0430\u044e\u0449\u0438\u0445 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0434\u043e\u043b\u0436\u0435\u043d \u0443\u0434\u0430\u043b\u044f\u0442\u044c\u0441\u044f \u043f\u0435\u0440\u0432\u044b\u0439 \u043a\u043b\u0438\u0435\u043d\u0442, \u0434\u043e\u043b\u0436\u043d\u043e \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c\u0441\u044f \u0432\u0440\u0435\u043c\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u0438 \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u0438 (\u0433\u0440\u0443\u0437\u0447\u0438\u043a\u0438, \u043a\u0443\u0440\u044c\u0435\u0440\u044b, \u0431\u0443\u0445\u0433\u0430\u043b\u0442\u0435\u0440\u0438\u044f) \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043e\u043f\u043e\u0432\u0435\u0449\u0435\u043d\u044b \u043e\u0431 \u044d\u0442\u043e\u043c.\n\n\u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0434\u043b\u044f \u0434\u0430\u043d\u043d\u043e\u0439 \u043a\u043d\u043e\u043f\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442 \u043c\u0435\u0442\u043e\u0434 \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043d\u0438\u0436\u0435:\n\n\n@OnClick\n(\nR\n.\nid\n.\nbtnSendToUser\n)\n\n\npublic\n \nvoid\n \nonSendToUserButtonClicked\n()\n \n{\n\n    \ndocument\n.\ngetDocumentById\n(\ngetDocumentInfo\n().\ngetId\n(),\n \nnew\n \nCallbackGetDocumentById\n()\n \n{\n\n        \n@Override\n\n        \npublic\n \nvoid\n \nonDocumentFound\n(\nfinal\n \nDocumentInfo\n \ndocumentInfo\n)\n \n{\n\n            \ndocument\n.\nupdateDocument\n()\n\n                    \n.\npopFirst\n(\nfields\n.\ngetBuyersField\n())\n\n                    \n.\nsetCurrentDate\n(\nfields\n.\ngetLastSendField\n());\n\n\n         \ndocument\n.\nsaveDocument\n(\nnew\n \nCallbackDocumentSaved\n()\n \n{\n\n                \n@Override\n\n                \npublic\n \nvoid\n \nonDocumentSaved\n()\n \n{\n\n                    \ndocument\n.\nupdateDocument\n().\ngetUpdateInfo\n().\nclear\n();\n\n                    \nnew\n \nItemNotificator\n(\ngetBaseContext\n(),\n \ndocumentInfo\n.\ngetId\n(),\n \nfields\n.\ngetDeviceName\n()).\nnotifyPersonalAboutItemSend\n();\n\n                    \nnew\n \nBalanceNotificator\n(\ngetBaseContext\n()).\nrefreshCompanyBalance\n();\n\n                    \netItemInfo\n.\nsetVisibility\n(\nView\n.\nVISIBLE\n);\n\n                    \netItemInfo\n.\nappend\n(\nfields\n.\ngetLastSendTime\n());\n\n                    \nrefreshWaitingList\n();\n\n                \n}\n\n\n               \n@Override\n\n                \npublic\n \nvoid\n \nonDocumentSaveFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                    \nshowToast\n(\ngetBaseContext\n(),\n \nR\n.\nstring\n.\nerror\n);\n\n                \n}\n\n            \n});\n\n \n}\n\n\n\n\n\n\n\u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u043c\u0435\u0442\u043e\u0434\u0435 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0446\u0438\u044f \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 \u043a\u043b\u0430\u0441\u0441\u0430 \nDocument\n \u0441 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u043c \u0438\u0437 \u0411\u0414 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 \n.getDocumentById()\n \u043a\u043b\u0430\u0441\u0441\u0430 \nDocument\n, \u043f\u043e\u0441\u043b\u0435 \u0447\u0435\u0433\u043e \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043a\u043b\u0430\u0441\u0441\u0430 \nUpdate\n \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0435\u0433\u043e \u043c\u0435\u0442\u043e\u0434 \n.popFirst\n \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 (\u0438\u043c\u0438\u0442\u0438\u0440\u0443\u044f \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u043d\u0438\u0435 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u0438). \u041a\u0440\u043e\u043c\u0435 \u0442\u043e\u0433\u043e \u0432 \u043f\u043e\u043b\u0435 \u00ab\u041f\u043e\u0441\u043b\u0435\u0434\u043d\u044f\u044f \u043e\u0442\u0433\u0440\u0443\u0437\u043a\u0430 \u0441\u043e\u0432\u0435\u0440\u0448\u0435\u043d\u0430 \u0432\u00bb (\u043f\u043e\u043b\u0435 lastSend \u0432 \u0411\u0414) \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0432\u0440\u0435\u043c\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043e\u0442\u0433\u0440\u0443\u0437\u043a\u0438 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 \n.setCurrentDate(\u2026)\n \u043a\u043b\u0430\u0441\u0441\u0430 \nUpdate\n.\n\n\n\u0422\u0430\u043a \u0436\u0435 \u043d\u0430 \u044d\u0442\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0435 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u043a \u043e\u0442\u0433\u0440\u0443\u0437\u043a\u0435 \u0442\u043e\u0432\u0430\u0440\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0445\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u0432 \u0444\u0430\u0439\u043b\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 (\u043f\u043e\u043b\u0435 sendInfo \u0442\u0438\u043f\u0430 File). \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u044d\u0442\u043e\u0442 \u0444\u0430\u0439\u043b \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0438 \u0432 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u0435 \u043e\u043a\u043d\u043e \u0432\u044b\u0434\u0430\u0435\u0442\u0441\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u00ab\u041f\u043e \u0442\u043e\u0432\u0430\u0440\u0443 \u0432 \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f \u043d\u0435\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f ...\u00bb. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043c\u043e\u0436\u0435\u0442 \u043d\u0430\u0436\u0430\u0442\u044c \u043a\u043d\u043e\u043f\u043a\u0443 \u00ab\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u00bb, \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u043a \u043e\u0442\u0433\u0440\u0443\u0437\u043a\u0435 \u0438 \u043d\u0430\u0436\u0430\u0442\u044c \u00ab\u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c\u00bb. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043c\u0435\u0442\u043e\u0434:\n\n\npublic\n \nstatic\n \nvoid\n \nuploadFile\n(\nfinal\n \nContext\n \ncontext\n,\n \nDocument\n \ndocument\n,\n \nString\n \ncontent\n)\n \n{\n\n    \ndocument\n.\nuploadFile\n(\nnew\n \nDocumentFields\n(\ncontext\n).\ngetSendInfoField\n(),\n \nFILE_NAME\n,\n \nencode\n(\ncontent\n.\ngetBytes\n()),\n\n        \nnew\n \nCallbackUploadFile\n()\n \n{\n\n        \n@Override\n\n        \npublic\n \nvoid\n \nonDocumentUploaded\n()\n \n{\n\n        \n//file loaded\n\n        \n}\n\n\n        \n@Override\n\n        \npublic\n \nvoid\n \nonDocumentUploadFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n            \nHelper\n.\nshowToast\n(\ncontext\n,\n \nR\n.\nstring\n.\nerror\n);\n\n        \n}\n\n    \n});\n\n\n}\n\n\n\n\n\n\n\u0414\u0430\u043d\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0444\u0430\u0439\u043b \u0432 \u043f\u043e\u043b\u0435 (\u0442\u0438\u043f\u0430 File) \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0411\u0414. \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0430\u0441\u0441\u043e\u0446\u0438\u0438\u0440\u043e\u0432\u0430\u043d \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 \ngetDocumentById(\u2026)\n. \u0410\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u044b\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0438\u0437 \u0411\u0414.\n\n\n\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u0445, \u043e\u0436\u0438\u0434\u0430\u044e\u0449\u0438\u0445 \u043e\u0442\u0433\u0440\u0443\u0437\u043a\u0438 \u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438 \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u044e\u0442\u0441\u044f \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043d\u0438\u0436\u0435.\n\n\nprivate\n \nvoid\n \nrefreshWaitingList\n()\n \n{\n\n    \ndocument\n.\ngetDocumentById\n(\ngetDocumentInfo\n().\ngetId\n(),\n \nnew\n \nCallbackGetDocumentById\n()\n \n{\n\n        \n@Override\n\n        \npublic\n \nvoid\n \nonDocumentFound\n(\nDocumentInfo\n \ndocumentInfo\n)\n \n{\n\n            \nfields\n.\nsetDocumentInfo\n(\ndocumentInfo\n);\n\n            \ntvWaitingUsers\n.\nsetText\n(\nfields\n.\ngetBuyers\n());\n\n            \ntvLastChange\n.\nsetText\n(\nfields\n.\ngetLastSendTime\n());\n\n            \nllWaitingUsers\n.\nsetVisibility\n(\nfields\n.\ngetBuyers\n().\nisEmpty\n()\n \n?\n \nView\n.\nGONE\n \n:\n \nView\n.\nVISIBLE\n);\n\n            \ntvLastChangeLabel\n.\nsetVisibility\n(\nfields\n.\ngetLastSendTime\n().\nisEmpty\n()\n \n?\n \nView\n.\nGONE\n \n:\n \nView\n.\nVISIBLE\n);\n\n            \ntvLastChange\n.\nsetVisibility\n(\nfields\n.\ngetLastSendTime\n().\nisEmpty\n()\n \n?\n \nView\n.\nGONE\n \n:\n \nView\n.\nVISIBLE\n);\n\n            \nbtnSendToUser\n.\nsetVisibility\n(\nfields\n.\ngetBuyers\n().\nisEmpty\n()\n \n?\n \nView\n.\nGONE\n \n:\n \nView\n.\nVISIBLE\n);\n\n            \ndocument\n.\ngetFileContent\n(\nfields\n.\ngetSendInfoField\n(),\n \nFileHelper\n.\nFILE_NAME\n,\n \nnew\n \nCallbackGetFile\n()\n \n{\n\n                \n@Override\n\n                \npublic\n \nvoid\n \nonSucceed\n(\nString\n \nfileContent\n)\n \n{\n\n                    \nif\n(\nfileContent\n \n!=\n \nnull\n \n \n!\nfileContent\n.\ntrim\n().\nisEmpty\n())\n \n{\n\n                        \netItemInfo\n.\nsetText\n(\nfileContent\n);\n\n                    \n}\n \nelse\n \n{\n\n                        \netItemInfo\n.\nsetText\n(\nR\n.\nstring\n.\nno_info\n);\n\n                    \n}\n\n                \n}\n\n                \n@Override\n\n                \npublic\n \nvoid\n \nonFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n                    \nshowToast\n(\ngetBaseContext\n(),\n \nR\n.\nstring\n.\nerror\n);\n\n                \n}\n\n            \n});\n\n        \n}\n\n        \n@Override\n\n        \npublic\n \nvoid\n \nonDocumentNotFound\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n            \ntvWaitingUsers\n.\nsetVisibility\n(\nView\n.\nGONE\n);\n\n        \n}\n\n    \n});\n\n\n}\n\n\n\n\n\n\n\u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u043c\u0435\u0442\u043e\u0434\u0435 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0446\u0438\u044f \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 \u043a\u043b\u0430\u0441\u0441\u0430 \nDocument\n \u0441 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u043c \u0438\u0437 \u0411\u0414 \u043f\u043e\u0441\u043b\u0435 \u0447\u0435\u0433\u043e \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u043f\u043e\u043b\u0435\u0439:\n1. \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u0436\u0438\u0434\u0430\u044e\u0449\u0438\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439\n2. \u0432\u0440\u0435\u043c\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043e\u0442\u0433\u0440\u0443\u0437\u043a\u0438\n3. \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u044c \u0442\u0435\u0445 \u0438\u043b\u0438 \u0438\u043d\u044b\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u043a\u043e\u043d\u0442\u0435\u043d\u0442\u0430.\n4. \u041f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 getFileContent \u043a\u043b\u0430\u0441\u0441\u0430 Document \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0444\u0430\u0439\u043b\u0430 \u0432 \u0432\u0438\u0434\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 (\u0441 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435\u043c \u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f). \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u0432 \u043f\u043e\u043b\u0435 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f.\n\n\n\u0422\u0430\u043a \u0436\u0435 \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043a\u043b\u0430\u0441\u0441  ItemNotificator \u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0432 \u043d\u0435\u0433\u043e \u043c\u0435\u0442\u043e\u0434 notifyPersonalAboutItemSend()\n\u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u043c \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c \u043f\u0440\u0438 \u043e\u0442\u0433\u0440\u0443\u0437\u043a\u0435 \u0442\u043e\u0432\u0430\u0440\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e. \u041a\u043e\u0434 \u043c\u0435\u0442\u043e\u0434\u0430 \u043f\u043e\u043a\u0430\u0437\u0430\u043d \u043d\u0438\u0436\u0435\npublic void notifyPersonalAboutItemSend() {\n    sendPushToLoaderPerson();\n    sendEmailInAccountingDepartment();\n    sendSmsToDeliveryPerson();\n}\n\n\n\u0414\u0430\u043d\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 \u043f\u0440\u043e\u0432\u043e\u0434\u0438\u0442 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0441\u043e\u043d\u0430\u043b\u0430 \u043e \u0442\u043e\u043c, \u0447\u0442\u043e \u0442\u043e\u0432\u0430\u0440 \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043b\u0435\u043d \u043a \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c:\n\n\n\n\n\u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 push \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0433\u0440\u0443\u0437\u0447\u0438\u043a\u0443 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430:\n\n\n\n\nprivate\n \nvoid\n \nsendPushToLoaderPerson\n()\n \n{\n\n    \nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\nroles\n);\n\n    \nquery\n.\nequalTo\n(\nname\n,\n \nloaderPerson\n);\n\n    \nquery\n.\nequalTo\n(\nisFree\n,\n \ntrue\n);\n\n    \nquery\n.\nsetLimit\n(\n1\n);\n\n\n    \nMessagePush\n \nmessagePush\n \n=\n \nnew\n \nMessagePush\n(\ncontext\n.\ngetString\n(\nR\n.\nstring\n.\nyou_should_take\n)\n \n+\n \ngetItemInfo\n()\n \n+\n \ncontext\n.\ngetString\n(\nR\n.\nstring\n.\nand_prepare\n),\n \nnull\n);\n\n    \nmessage\n.\nsendPush\n(\nmessagePush\n,\n \nquery\n,\n \nnew\n \nCallbackSendPush\n()\n \n{\n\n        \n@Override\n\n        \npublic\n \nvoid\n \nonPushSended\n()\n \n{\n\n            \nHelper\n.\nshowToast\n(\ncontext\n,\n \nR\n.\nstring\n.\npush_sended\n);\n\n        \n}\n\n        \n@Override\n\n        \npublic\n \nvoid\n \nonPushSendFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n            \nHelper\n.\nshowToast\n(\ncontext\n,\n \nR\n.\nstring\n.\ncant_send_push\n);\n\n        \n}\n\n    \n});\n\n\n}\n\n\n\n\n\n\n\n\n\u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 sms \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043a\u0443\u0440\u044c\u0435\u0440\u0443\n\n\n\n\nprivate\n \nvoid\n \nsendSmsToDeliveryPerson\n()\n \n{\n\n    \nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\nroles\n);\n\n    \nquery\n.\nequalTo\n(\nname\n,\n \ndeliveryPerson\n);\n\n    \nquery\n.\nequalTo\n(\nisFree\n,\n \ntrue\n);\n\n    \nquery\n.\nsetLimit\n(\n1\n);\n\n\n    \nMessageSms\n \nmessageSms\n \n=\n \nnew\n \nMessageSms\n(\ncontext\n.\ngetString\n(\nR\n.\nstring\n.\ntake_item\n)\n \n+\n \ngetItemInfo\n());\n\n    \nmessage\n.\nsendSms\n(\nmessageSms\n,\n \nquery\n,\n \nnew\n \nCallbackSendSms\n()\n \n{\n\n        \n@Override\n\n        \npublic\n \nvoid\n \nonSmsSended\n()\n \n{\n\n            \nHelper\n.\nshowToast\n(\ncontext\n,\n \nR\n.\nstring\n.\nsms_was_sended\n);\n\n        \n}\n\n\n        \n@Override\n\n        \npublic\n \nvoid\n \nonSmsSendFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n            \nHelper\n.\nshowToast\n(\ncontext\n,\n \nR\n.\nstring\n.\ncant_send_sms\n);\n\n        \n}\n\n    \n});\n\n\n}\n\n\n\n\n\n\n\n\n\u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 email \u0432 \u0431\u0443\u0445\u0433\u0430\u043b\u0442\u0435\u0440\u0438\u044e.\n\n\n\n\nprivate\n \nvoid\n \nsendEmailInAccountingDepartment\n()\n \n{\n\n    \nQuery\n \nquery\n \n=\n \nnew\n \nQuery\n(\nroles\n);\n\n    \nquery\n.\nequalTo\n(\nname\n,\n \naccountantPerson\n);\n\n\n    \nMessageEmail\n \nmessageEmail\n \n=\n \nnew\n \nMessageEmail\n(\ncontext\n.\ngetString\n(\nR\n.\nstring\n.\nfrom\n),\n \ncontext\n.\ngetString\n(\nR\n.\nstring\n.\ndevice\n)\n \n+\n \ngetItemInfo\n()\n \n,\n \ncontext\n.\ngetString\n(\nR\n.\nstring\n.\ndevice\n)\n \n+\n \ngetItemInfo\n()\n \n+\n \ncontext\n.\ngetString\n(\nR\n.\nstring\n.\nsold\n));\n\n    \nmessage\n.\nsendEmail\n(\nmessageEmail\n,\n \nquery\n,\n \nnew\n \nCallbackSendEmail\n()\n \n{\n\n        \n@Override\n\n        \npublic\n \nvoid\n \nonEmailSend\n()\n \n{\n\n            \nHelper\n.\nshowToast\n(\ncontext\n,\n \nR\n.\nstring\n.\nemail_was_sended\n);\n\n        \n}\n\n        \n@Override\n\n        \npublic\n \nvoid\n \nonEmailSendFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n            \nHelper\n.\nshowToast\n(\ncontext\n,\n \nR\n.\nstring\n.\ncant_send_email\n);\n\n        \n}\n\n    \n});\n\n\n}\n\n\n\n\n\n\n\u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0440\u0430\u0431\u043e\u0442\u0443 \u044d\u0442\u0438\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e:\n\n\n\n\n\u0412 \u043c\u0435\u0442\u043e\u0434\u0435 \nsendEmailInAccountingDepartment\n \u0438\u0437 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u0440\u043e\u043b\u0435\u0439 (\u00abroles\u00bb) \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u0442\u0441\u044f \u0440\u043e\u043b\u044c \u00abaccountantPerson\u00bb \u0438 \u0432\u0441\u0435\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c \u0441 \u0442\u0430\u043a\u043e\u0439 \u0440\u043e\u043b\u044c\u044e \u043e\u0442\u0441\u044b\u043b\u0430\u044e\u0442\u0441\u044f email \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 \n.sendEmail()\n \u043a\u043b\u0430\u0441\u0441\u0430 \nMessage\n.\n\n\n\u0412 \u043c\u0435\u0442\u043e\u0434\u0435 \nsendSmdToDeliveryPerson\n \u0438\u0437 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u0440\u043e\u043b\u0435\u0439 (\u00abroles\u00bb) \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u0442\u0441\u044f \u043e\u0434\u0438\u043d (\u0443\u0441\u043b\u043e\u0432\u0438\u0435 setLimit(1)) \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u044b\u0439 (\u0443\u0441\u043b\u043e\u0432\u0438\u0435 isFree == true) \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a \u0441 \u0440\u043e\u043b\u044c\u044e \u00abdeliveryPerson\u00bb \u0438 \u0435\u043c\u0443 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f sms \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 \n.sendSms\n \u043a\u043b\u0430\u0441\u0441\u0430 \nMessage\n.\n\n\n\u0412 \u043c\u0435\u0442\u043e\u0434\u0435 \nsendSmdToLoaderPerson\n \u0438\u0437 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u0440\u043e\u043b\u0435\u0439 (\u00abroles\u00bb) \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u0442\u0441\u044f \u043e\u0434\u0438\u043d (\u0443\u0441\u043b\u043e\u0432\u0438\u0435 setLimit(1)) \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u044b\u0439 (\u0443\u0441\u043b\u043e\u0432\u0438\u0435 isFree == true) \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a \u0441 \u0440\u043e\u043b\u044c\u044e loaderPerson \u0438 \u0435\u043c\u0443 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f push \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 \n.sendPush\n \u043a\u043b\u0430\u0441\u0441\u0430 \nMessage\n.\n\n\n\n\n\u041a\u0440\u043e\u043c\u0435 \u0442\u043e\u0433\u043e \u043f\u043e\u0441\u043b\u0435 \u043d\u0430\u0436\u0430\u0442\u0438\u044f \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \u00ab\u041e\u0422\u0413\u0420\u0423\u0417\u0418\u0422\u042c \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042e\u00bb \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043c\u0435\u0442\u043e\u0434 \nrefreshCompanyBalance()\n \u043a\u043b\u0430\u0441\u0441\u0430 \nBalanceNotivicator\n.\n\n\n\u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043c\u0435\u0442\u043e\u0434\u0430 \nresreshCompanyBalance()\n:\n\n\npublic\n \nvoid\n \nrefreshCompanyBalance\n()\n \n{\n\n    \nScript\n \nscript\n \n=\n \nnew\n \nScript\n();\n\n    \nscript\n.\nrunScript\n(\n 5800ad9342d52f1ba275fbcd\n,\n \nnew\n \nCallbackSendScript\n()\n \n{\n\n        \n@Override\n\n        \npublic\n \nvoid\n \nonScriptSended\n()\n \n{\n\n            \nHelper\n.\nshowToast\n(\ncontext\n,\n \nR\n.\nid\n.\nbalance_refreshed\n);\n\n        \n}\n\n        \n@Override\n\n        \npublic\n \nvoid\n \nonScriptSendFailed\n(\nString\n \nerrorCode\n,\n \nString\n \nerrorMessage\n)\n \n{\n\n            \nHelper\n.\nshowToast\n(\ncontext\n,\n \nR\n.\nid\n.\ncan_refresh_balance\n);\n\n        \n}\n\n    \n});\n\n\n}\n\n\n\n\n\n\n\u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u043b\u0438\u0441\u0442\u0438\u043d\u0433\u0435 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 \nrunScript(...)\n \u043a\u043b\u0430\u0441\u0441\u0430 \nScript\n \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u044b\u0439 \u043a\u043e\u0434 \u0441 id 5800ad9342d52f1ba275fbcd, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0435\u0440\u0435\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0442\u043e\u0432\u0430\u0440\u043e\u0432 \u043d\u0430 \u0441\u043a\u043b\u0430\u0434\u0435, \u0438\u0437\u0434\u0435\u0440\u0436\u043a\u0438 \u043d\u0430 \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0438 \u0434\u0440\u0443\u0433\u0438\u0435 \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0438.", 
            "title": "Storehouse (Android)"
        }, 
        {
            "location": "/Java/Storehouse/#_1", 
            "text": "\u0414\u0430\u043d\u043d\u0430\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0434\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \"\u0421\u043a\u043b\u0430\u0434\". \u0418\u0441\u0445\u043e\u0434\u043d\u044b\u0439 \u043a\u043e\u0434 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0432 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0438  https://github.com/Scorocode/scorocode-sample-storehouse .  \u0414\u0430\u043d\u043d\u043e\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0432\u043e\u0434\u0438\u0442 \u0443\u0447\u0435\u0442 \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u044b\u0445 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u043e\u0432 \u043d\u0430 \u0441\u043a\u043b\u0430\u0434\u0435 \u043f\u043e\u0441\u0442\u0430\u0432\u0449\u0438\u043a\u0430 \u0438 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442:   \u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u0411\u0414 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f  \u041f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f  \u041f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u0434\u0435\u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.  \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u043e\u0432 \u043d\u0430 \u0441\u043a\u043b\u0430\u0434\u0435  \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430 \u0432 \u0411\u0414  \u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430 \u0438\u0437 \u0411\u0414  \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043c\u043e\u0434\u0435\u043b\u0438 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430  \u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043c\u043e\u0434\u0435\u043b\u0438 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430  \u0412\u044b\u0431\u0440\u0430\u0442\u044c \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u044e\u0449\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0444\u0438\u043b\u044c\u0442\u0440  \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u043b\u0438\u0441\u0442 \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438  \u041e\u0442\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e  \u041e\u043f\u043e\u0432\u0435\u0441\u0442\u0438\u0442\u044c \u043e\u0431 \u043e\u0442\u0433\u0440\u0443\u0437\u043a\u0435 \u0431\u0443\u0445\u0433\u0430\u043b\u0442\u0435\u0440\u0438\u044e \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 email \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f  \u041e\u043f\u043e\u0432\u0435\u0441\u0442\u0438\u0442\u044c \u0433\u0440\u0443\u0437\u0447\u0438\u043a\u0430 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 push \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f.  \u041e\u043f\u043e\u0432\u0435\u0441\u0442\u0438\u0442\u044c \u043a\u0443\u0440\u044c\u0435\u0440\u0430 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 sms \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f.  \u041f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u043f\u0435\u0440\u0435\u0441\u0447\u0435\u0442 \u0431\u0430\u043b\u0430\u043d\u0441\u0430 \u0444\u0438\u0440\u043c\u044b \u0441 \u0443\u0447\u0435\u0442\u043e\u043c \u043e\u0442\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0445 \u043a \u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u043c\u043e\u043c\u0435\u043d\u0442\u0443 \u043c\u043e\u0434\u0435\u043b\u0435\u0439.", 
            "title": "\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \"\u0421\u043a\u043b\u0430\u0434\""
        }, 
        {
            "location": "/Java/Storehouse/#_2", 
            "text": "\u0421\u043e\u0437\u0434\u0430\u043d\u0430 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044f  storehouse  \u0441\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c\u0438 \u043f\u043e\u043b\u044f\u043c\u0438:   platform (String)  cameraInfo (String)  deviceName (String)  colorsAvailable (Array)  devicePrice (Number)  buyers (Array)  lastSend (Date)  sendInfo (File)   \u0412 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u0443\u044e \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044e  Roles  \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u044b 3 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0441\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438 \u043f\u043e\u043b\u044f  name  \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e:   deliveryPerson  accountantPerson  loaderPerson", 
            "title": "\u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f:"
        }, 
        {
            "location": "/Java/Storehouse/#_3", 
            "text": "\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0439 \u044d\u043a\u0440\u0430\u043d \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0441 \u0438\u043c\u0435\u043d\u0435\u043c  LoginActivity . \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0432 Android Studio \u0432\u044b\u0431\u0435\u0440\u0435\u043c  File \u2192 New \u2192 Activity \u2192 Empty Activity  \u0438 \u0432 layout-\u0444\u0430\u0439\u043b \u0434\u0430\u043d\u043d\u043e\u0439 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043a\u043e\u0434:  ?xml version= 1.0  encoding= utf-8 ?  RelativeLayout   xmlns:android= http://schemas.android.com/apk/res/android \n     xmlns:tools= http://schemas.android.com/tools \n     android:id= @+id/activity_login \n     android:layout_width= match_parent \n     android:layout_height= match_parent \n     android:paddingBottom= @dimen/activity_vertical_margin \n     android:paddingLeft= @dimen/activity_horizontal_margin \n     android:paddingRight= @dimen/activity_horizontal_margin \n     android:paddingTop= @dimen/activity_vertical_margin \n     tools:context= prof_itgroup.ru.storehouseapp.Activities.LoginActivity \n     LinearLayout \n         android:layout_width= match_parent \n         android:layout_height= wrap_content \n         android:gravity= center \n         android:orientation= vertical \n         TextView \n             style= @style/label_style \n             android:layout_marginTop= 16dp \n             android:text= @string/login   / \n         EditText \n             android:id= @+id/etEmail \n             android:gravity= center \n             style= @style/textStyle \n             android:hint= @string/login_hint   / \n         TextView \n             style= @style/label_style \n             android:layout_marginTop= 16dp \n             android:text= @string/password / \n         EditText \n             android:gravity= center \n             android:id= @+id/etPassword \n             style= @style/textStyle \n             android:hint= @string/password_hint \n             android:inputType= textPassword \n             android:maxLines= 1   / \n         LinearLayout \n             android:layout_width= wrap_content \n             android:layout_height= wrap_content \n             android:gravity= center_horizontal \n             android:orientation= vertical \n             Button \n                 android:id= @+id/btnLogin \n                 android:layout_width= match_parent \n                 android:layout_height= wrap_content \n                 android:layout_marginTop= 4dp \n                 android:text= @string/login_button_text   / \n             Button \n                 android:id= @+id/btnRegister \n                 android:layout_width= match_parent \n                 android:layout_height= wrap_content \n                 android:layout_marginTop= 4dp \n                 android:text= @string/register_button_text   / \n         /LinearLayout \n     /LinearLayout  /RelativeLayout  \n\n\u0421\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0439 \u044d\u043a\u0440\u0430\u043d \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u043a\u043b\u0430\u0441\u0441\u0443  LoginActivity , \u043f\u043e\u043a\u0430\u0437\u0430\u043d \u043d\u0430 \u0440\u0438\u0441\u0443\u043d\u043a\u0435 1.1.    \u0420\u0438\u0441\u0443\u043d\u043e\u043a 1.1 \u2013 \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0439 \u044d\u043a\u0440\u0430\u043d \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.  \u0412 \u043c\u0435\u0442\u043e\u0434  onCreate  \u043a\u043b\u0430\u0441\u0441\u0430  LoginActivity  \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043a\u043e\u0434:  @Override  protected   void   onCreate ( Bundle   savedInstanceState )   { \n     super . onCreate ( savedInstanceState ); \n     setContentView ( R . layout . activity_login ); \n     if   ( isUserLogined ( this ))   { \n         MainActivity . display ( this ); \n     } \n     ScorocodeSdk . initWith ( APPLICATION_ID ,   CLIENT_KEY ,   null ,   FILE_KEY ,   MESSAGE_KEY ,   SCRIPT_KEY ,   null ); \n     ButterKnife . bind ( this );  }   \u0412 \u043c\u0435\u0442\u043e\u0434\u0435  onCreate  \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f  ScorocodeSdk  \u043a\u043b\u044e\u0447\u0430\u043c\u0438  appId ,  clientKey  (android),  fileKey ,  messageKey ,  scriptKey  \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430  ScorocodeSdk.initWith(...) ; \u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043a\u043b\u044e\u0447\u0438 \u043c\u043e\u0436\u043d\u043e \u043d\u0430 \u0432\u043a\u043b\u0430\u0434\u043a\u0435 \u00ab\u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u044c\u00bb \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a \u043f\u0440\u043e\u0435\u043a\u0442\u0430.  \u041d\u0430 \u0434\u0430\u043d\u043d\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0411\u0414 \u043c\u043e\u0436\u0435\u0442 \u0432\u0432\u0435\u0441\u0442\u0438 \u0441\u0432\u043e\u0439 \u043b\u043e\u0433\u0438\u043d \u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u0435. \u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430  .login()  \u043a\u043b\u0430\u0441\u0441\u0430  User . \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430 \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u043e \u0432 \u043b\u0438\u0441\u0442\u0438\u043d\u0433\u0435:  @OnClick ( R . id . btnLogin )  public   void   onBtnLoginClicked ()   { \n     User   user   =   new   User (); \n     user . login ( etEmail . getText (). toString (),   etPassword . getText (). toString (),   new   CallbackLoginUser ()   { \n         @Override \n         public   void   onLoginSucceed ( ResponseLogin   responseLogin )   { \n             DocumentInfo   userInfo   =   responseLogin . getResult (). getUserInfo (); \n             saveUserInfo ( userInfo ); \n             MainActivity . display ( LoginActivity . this ); \n         } \n         @Override \n         public   void   onLoginFailed ( String   errorCode ,   String   errorMessage )   { \n             Helper . showToast ( getBaseContext (),   R . string . error_login ); \n         } \n     });  }   \u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u043c\u0435\u0442\u043e\u0434\u0435 \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043d\u043e\u0432\u044b\u0439 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043a\u043b\u0430\u0441\u0441\u0430  User  \u0438 \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u0435\u0433\u043e \u043c\u0435\u0442\u043e\u0434  login  \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e email \u0438 password \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043c\u044b \u0431\u0435\u0440\u0435\u043c \u0438\u0437 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445  EditText . \u041c\u0435\u0442\u043e\u0434  login  \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442 \u0442\u043e\u0442 \u0444\u0430\u043a\u0442, \u0447\u0442\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0441 \u0442\u0430\u043a\u0438\u043c email \u0438 \u043f\u0430\u0440\u043e\u043b\u0435\u043c \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0432 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u00abusers\u00bb.  \u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0435\u0441\u043b\u0438 \u0432 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u00abusers\u00bb \u0438\u043c\u0435\u0435\u0442\u0441\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c\u0438 email \u0438 password, \u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d \u043c\u0435\u0442\u043e\u0434  onLoginSucceed(...) callback  \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 \u0438\u043d\u0430\u0447\u0435 -  onFoginFailed(...) . \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0438\u0442\u044c\u0441\u044f \u0432 \u043d\u0430\u043b\u0438\u0447\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0441 \u0442\u0430\u043a\u0438\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0432 \u043d\u0430\u0448\u0435\u0439 \u0411\u0414 \u0438 \u043f\u0440\u0438\u043d\u044f\u0442\u044c \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0438\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f.  \u041d\u0430 \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0435 (\u043f\u043e\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c \u043d\u0430 \u0440\u0438\u0441\u0443\u043d\u043a\u0435 1.1) \u0442\u0430\u043a \u0436\u0435 \u0438\u043c\u0435\u0435\u0442\u0441\u044f \u043a\u043d\u043e\u043f\u043a\u0430 \u00ab\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u00bb \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0449\u0430\u044f \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0435 (\u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0435\u0433\u043e \u0432 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044e \u00abusers\u00bb \u0411\u0414). \u041f\u0440\u0438\u0432\u044f\u0436\u0435\u043c \u043a \u0434\u0430\u043d\u043d\u043e\u0439 \u043a\u043d\u043e\u043f\u043a\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043d\u0430\u0436\u0430\u0442\u0438\u044f \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f:  @OnClick ( R . id . btnRegister )  public   void   onBtnRegisterClicked ()   { \n     RegisterActivity . display ( this );  }", 
            "title": "\u0421\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0439 \u044d\u043a\u0440\u0430\u043d \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f."
        }, 
        {
            "location": "/Java/Storehouse/#_4", 
            "text": "\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043d\u043e\u0432\u0443\u044e \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u0441 \u0438\u043c\u0435\u043d\u0435\u043c  RegisterActivity  \u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0432 layout-\u0444\u0430\u0439\u043b \u0434\u0430\u043d\u043d\u043e\u0439 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 xml \u043a\u043e\u0434:  ?xml version= 1.0  encoding= utf-8 ?  LinearLayout   xmlns:android= http://schemas.android.com/apk/res/android \n     xmlns:tools= http://schemas.android.com/tools \n     android:id= @+id/activity_register \n     android:layout_width= match_parent \n     android:layout_height= match_parent \n     android:gravity= center_horizontal \n     android:orientation= vertical \n     android:paddingBottom= @dimen/activity_vertical_margin \n     android:paddingLeft= @dimen/activity_horizontal_margin \n     android:paddingRight= @dimen/activity_horizontal_margin \n     android:paddingTop= @dimen/activity_vertical_margin \n     tools:context= prof_itgroup.ru.storehouseapp.Activities.RegisterActivity \n     TextView \n         style= @style/label_style \n         android:text= @string/register_username   / \n     EditText \n         android:id= @+id/etUsername \n         style= @style/textStyle \n         android:hint= @string/register_username_hint / \n     TextView \n         android:layout_marginTop= 16dp \n         style= @style/label_style \n         android:text= @string/register_email   / \n     EditText \n         android:id= @+id/etEmail \n         style= @style/textStyle \n         android:hint= @string/register_email_hint / \n     TextView \n         android:layout_marginTop= 16dp \n         style= @style/label_style \n         android:text= @string/register_password   / \n     EditText \n         android:id= @+id/etPassword \n         style= @style/textStyle \n         android:inputType= textPassword \n         android:hint= @string/register_email_password / \n     EditText \n         android:id= @+id/etPasswordCheck \n         style= @style/textStyle \n         android:inputType= textPassword \n         android:hint= @string/register_email_password_again / \n     Button \n         android:layout_marginTop= 32dp \n         android:id= @+id/btnRegister \n         style= @style/textStyle \n         android:text= @string/btn_register_text /  /LinearLayout  \n\n\u0414\u0430\u043d\u043d\u0430\u044f \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u044d\u043a\u0440\u0430\u043d \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043d\u0430 \u0440\u0438\u0441\u0443\u043d\u043a\u0435 1.2   \u0420\u0438\u0441\u0443\u043d\u043e\u043a 1.2 \u2014 \u044d\u043a\u0440\u0430\u043d \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.  \u041d\u0430 \u0434\u0430\u043d\u043d\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0435 \u0432\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0432\u0441\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u043f\u043e\u043b\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 (\u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0437\u0443\u044e\u0449\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f). \u0414\u043e\u0431\u0430\u0432\u0438\u043c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043d\u0430\u0436\u0430\u0442\u0438\u044f \u0434\u043b\u044f \u043a\u043d\u043e\u043f\u043a\u0438 \u00ab\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u00bb \u0432\u044b\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u043c\u0435\u0442\u043e\u0434  .register  \u043a\u043b\u0430\u0441\u0441\u0430  User  \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043d\u0438\u0436\u0435:  @OnClick ( R . id . btnRegister )  public   void   onBtnRegisterClicked ()   { \n     String   userName   =   etUsername . getText (). toString (); \n     String   email   =   etEmail . getText (). toString (); \n     String   password   =   etPassword . getText (). toString (); \n     String   passwordCheck   =   etPasswordCheck . getText (). toString (); \n\n     if ( isInputValid ( userName ,   email ,   password ,   passwordCheck ))   { \n         new   User (). register ( userName ,   email ,   password ,   new   CallbackRegisterUser ()   { \n             @Override \n             public   void   onRegisterSucceed ()   { \n                 Toast . makeText ( RegisterActivity . this ,   getResources (). getString ( R . string . register_succeed ),   Toast . LENGTH_SHORT ). show (); \n                 LoginActivity . display ( RegisterActivity . this ); \n             } \n             @Override \n             public   void   onRegisterFailed ( String   errorCode ,   String   errorMessage )   { \n                 Toast . makeText ( RegisterActivity . this ,   getResources (). getString ( R . string . error_register ),   Toast . LENGTH_SHORT ). show (); \n             } \n         }); \n     }   else   { \n         Toast . makeText ( this ,   getResources (). getString ( R . string . wrong_data )   ,   Toast . LENGTH_SHORT ). show (); \n     }  }   \u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u043c\u0435\u0442\u043e\u0434\u0435 \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0435 \u0432 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b  EditText , \u0430 \u0438\u043c\u0435\u043d\u043d\u043e: \u0438\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0435\u0433\u043e email, \u043f\u0430\u0440\u043e\u043b\u044c \u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e (\u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438).  \u0414\u0430\u043b\u0435\u0435 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 isInputValid \u043c\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u043f\u043e\u043b\u044f \u043d\u0435 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043f\u0443\u0441\u0442\u044b\u043c\u0438 \u0438 \u0447\u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u043e\u0435 \u0432 \u043f\u043e\u043b\u044f \u043f\u0430\u0440\u043e\u043b\u044f \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043f\u0430\u0440\u043e\u043b\u044f \u0438\u0434\u0435\u043d\u0442\u0438\u0447\u043d\u044b, \u043f\u043e\u0441\u043b\u0435 \u0447\u0435\u0433\u043e \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u043c\u0435\u0442\u043e\u0434  .register  \u043a\u043b\u0430\u0441\u0441\u0430  User .  \u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0435\u0441\u043b\u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u0440\u043e\u0448\u043b\u0430 \u0443\u0441\u043f\u0435\u0448\u043d\u043e (\u0442.\u0435 \u0435\u0441\u043b\u0438 sdk \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d, \u0432\u0441\u0435 \u043a\u043b\u044e\u0447\u0438 \u0443\u043a\u0430\u0437\u0430\u043d\u044b \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u0438 \u043d\u0435\u0442 \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442\u0430 \u0441 \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u043c\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438), \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d \u043c\u0435\u0442\u043e\u0434   onRegisterSucceed(...) callback  \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 \u0438\u043d\u0430\u0447\u0435 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d \u043c\u0435\u0442\u043e\u0434  onRegisterFailed(...) .  \u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043f\u0440\u0438 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432\u044b\u0434\u0430\u0435\u0442\u0441\u044f Toast-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e \u0442\u043e\u043c, \u0447\u0442\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d \u0438 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c  LoginActivity  \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043c\u043e\u0433 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0438 \u043f\u0440\u0438\u0441\u0442\u0443\u043f\u0438\u0442\u044c \u043a \u0440\u0430\u0431\u043e\u0442\u0435 \u0441 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u043c.", 
            "title": "\u042d\u043a\u0440\u0430\u043d \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f"
        }, 
        {
            "location": "/Java/Storehouse/#_5", 
            "text": "\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0433\u043b\u0430\u0432\u043d\u044b\u0439 \u044d\u043a\u0440\u0430\u043d \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0441 \u0438\u043c\u0435\u043d\u0435\u043c  MainActivity  \u0438 \u0432 layout-\u0444\u0430\u0439\u043b \u0434\u0430\u043d\u043d\u043e\u0439 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 xml \u043a\u043e\u0434:  ?xml version= 1.0  encoding= utf-8 ?  RelativeLayout \n     xmlns:android= http://schemas.android.com/apk/res/android \n     xmlns:tools= http://schemas.android.com/tools \n     android:id= @+id/activity_main \n     android:layout_width= match_parent \n     android:layout_height= match_parent \n     android:paddingLeft= @dimen/activity_horizontal_margin \n     android:paddingRight= @dimen/activity_horizontal_margin \n     android:paddingTop= @dimen/activity_vertical_margin \n     android:paddingBottom= @dimen/activity_vertical_margin \n     tools:context= prof_itgroup.ru.storehouseapp.Activities.MainActivity \n     ListView \n         android:id= @+id/lvItemsInStorehouse \n         android:layout_width= match_parent \n         android:layout_height= wrap_content /  /RelativeLayout   \u0410\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439  ListView  \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0442\u043e\u0432\u0430\u0440\u0430\u0445, \u0445\u0440\u0430\u043d\u044f\u0449\u0438\u0445\u0441\u044f \u0432 \u0411\u0414. \u041a\u0440\u043e\u043c\u0435 \u0442\u043e\u0433\u043e \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0438\u043a\u043e\u043d\u043a\u0438  ActionBar  \u043e \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0431\u0443\u0434\u0435\u0442 \u0441\u043a\u0430\u0437\u0430\u043d\u043e \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0439.  \u0414\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0430\u0434\u0430\u043f\u0442\u0435\u0440 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c  StoreItemAdapter  \u043a\u043e\u0434 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043f\u043e\u043a\u0430\u0437\u0430\u043d \u043d\u0438\u0436\u0435:  package   prof_itgroup.ru.storehouseapp.Objects ;  import   android.content.Context ;  import   android.support.annotation.NonNull ;  import   android.view.LayoutInflater ;  import   android.view.View ;  import   android.view.ViewGroup ;  import   android.widget.BaseAdapter ;  import   android.widget.TextView ;  import   java.util.List ;  import   butterknife.BindView ;  import   butterknife.ButterKnife ;  import   prof_itgroup.ru.storehouseapp.Activities.ItemDetailsActivity ;  import   prof_itgroup.ru.storehouseapp.R ;  import   ru.profit_group.scorocode_sdk.scorocode_objects.DocumentInfo ;  public   class   StoredItemsAdapter   extends   BaseAdapter   { \n     private   Context   context ; \n     private   List DocumentInfo   storedItems ; \n     private   int   layoutId ; \n     private   LayoutInflater   inflater ; \n     private   DocumentFields   fields ; \n     public   StoredItemsAdapter ( Context   context ,   @NonNull   List DocumentInfo   storedItems ,   int   layoutId )   { \n         this . context   =   context ; \n         this . storedItems   =   storedItems ; \n         this . layoutId   =   layoutId ; \n         inflater   =   LayoutInflater . from ( context ); \n         fields   =   new   DocumentFields ( context ,   null ); \n     } \n     @Override \n     public   int   getCount ()   { \n         return   storedItems . size (); \n     } \n     @Override \n     public   Object   getItem ( int   position )   { \n         return   storedItems . get ( position ); \n     } \n     @Override \n     public   long   getItemId ( int   position )   { \n         return   position ; \n     } \n     @Override \n     public   View   getView ( int   position ,   View   view ,   ViewGroup   parent )   { \n         ViewHolder   holder ; \n         if   ( view   !=   null )   { \n             holder   =   ( ViewHolder )   view . getTag (); \n         }   else   { \n             view   =   inflater . inflate ( layoutId ,   parent ,   false ); \n             holder   =   new   ViewHolder ( view ); \n             view . setTag ( holder ); \n         } \n         customizeView ( view ,   holder ,   storedItems . get ( position )); \n         return   view ; \n     } \n     private   void   customizeView ( View   view ,   ViewHolder   holder ,   final   DocumentInfo   documentInfo )   { \n         String   deviceName   =   ( String )   documentInfo . getFields (). get ( fields . getDeviceNameField ()); \n         String   devicePlatform   =   ( String )   documentInfo . getFields (). get ( fields . getPlatformField ()); \n         Double   devicePrice   =   ( Double )   documentInfo . getFields (). get ( fields . getDevicePriceField ()); \n         holder . tvStoredItemName . setText ( deviceName ); \n         holder . tvStoredItemStatus . setText ( devicePlatform ); \n         holder . tvStoredItemPrice . setText ( String . valueOf ( devicePrice )); \n         view . setOnClickListener ( new   View . OnClickListener ()   { \n             @Override \n             public   void   onClick ( View   v )   { \n                 ItemDetailsActivity . display ( context ,   documentInfo ); \n             } \n         }); \n     } \n     static   class   ViewHolder   { \n         @BindView ( R . id . tvStoredItemName )   TextView   tvStoredItemName ; \n         @BindView ( R . id . tvStoredItemPlatform )   TextView   tvStoredItemStatus ; \n         @BindView ( R . id . tvStoredItemPrice )   TextView   tvStoredItemPrice ; \n         public   ViewHolder ( View   view )   { \n             ButterKnife . bind ( this ,   view ); \n         } \n     }  }   \u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0441\u043f\u0438\u0441\u043a\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 layout-\u0444\u0430\u0439\u043b:    ?xml version= 1.0  encoding= utf-8 ?  RelativeLayout   xmlns:android= http://schemas.android.com/apk/res/android \n     android:layout_width= match_parent \n     android:layout_height= match_parent \n     android:orientation= horizontal \n     android:padding= 8dp \n     TextView \n         android:id= @+id/tvStoredItemName \n         style= @style/textStyle \n         android:layout_alignParentLeft= true \n         android:layout_toLeftOf= @+id/tvStoredItemPlatform \n         android:text= @string/storedItemName   / \n     TextView \n         android:id= @+id/tvStoredItemPlatform \n         style= @style/textStyle \n         android:layout_marginRight= 32dp \n         android:layout_toLeftOf= @+id/tvStoredItemPrice \n         android:text= @string/storedItemStatus   / \n     TextView \n         android:id= @+id/tvStoredItemPrice \n         style= @style/textStyle \n         android:layout_alignParentRight= true \n         android:text= @string/storedItemPrice   /  /RelativeLayout   \u0414\u0430\u043d\u043d\u044b\u0435 \u043e \u0442\u043e\u0432\u0430\u0440\u0430\u0445, \u0445\u0440\u0430\u043d\u044f\u0449\u0438\u0445\u0441\u044f \u0432 \u0411\u0414 \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u0432 \u043c\u0435\u0442\u043e\u0434\u0435  onResume()  \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438  MainActivity . \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0432 \u043c\u0435\u0442\u043e\u0434  onResume  \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043a\u043e\u0434:  @Override  protected   void   onResume ()   { \n     super . onResume (); \n     Query   query   =   new   Query ( COLLECTION_NAME ); \n     query . findDocuments ( new   CallbackFindDocument ()   { \n         @Override \n         public   void   onDocumentFound ( List DocumentInfo   documentInfos )   { \n             if ( documentInfos   !=   null )   { \n                 setAdapter ( documentInfos ); \n             } \n         } \n         @Override \n         public   void   onDocumentNotFound ( String   errorCode ,   String   errorMessage )   { \n             Toast . makeText ( MainActivity . this ,   getResources (). getString ( R . string . error_get_docs ),   Toast . LENGTH_SHORT ). show (); \n         } \n     });  }   \u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u043a\u043e\u0434\u0435 \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043e\u0431\u044a\u0435\u043a\u0442\u0430  Query  \u043d\u0435 \u0437\u0430\u0434\u0430\u0432\u0430\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 (\u0442.\u0435 \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u043f\u0435\u0440\u0432\u044b\u0435 100 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u0438\u0437 \u0434\u0430\u043d\u043d\u043e\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438) \u0438 \u0434\u0430\u043b\u0435\u0435 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u0435\u0442\u043e\u0434\u0430 findDocument \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b \u0438\u0437 \u043d\u0430\u0448\u0435\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438.  \u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0435\u0441\u043b\u0438 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043d\u0430\u0439\u0442\u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b \u043c\u044b \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u0430\u0434\u0430\u043f\u0442\u0435\u0440, \u0438\u043d\u0430\u0447\u0435 \u0432\u044b\u0434\u0430\u0435\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435.  \u0422\u0430\u043a \u0436\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0438\u043a\u043e\u043d\u043a\u0438 \u0432  ActionBar  \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c  layout  \u0444\u0430\u0439\u043b  main_activity_menu  \u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0442\u0443\u0434\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 xml \u043a\u043e\u0434:  menu   xmlns:android= http://schemas.android.com/apk/res/android \n     xmlns:app= http://schemas.android.com/apk/res-auto \n     item \n         android:id= @+id/action_add_item \n         android:icon= @drawable/ic_create_new_folder_white_24dp \n         android:title= @string/action_add_item \n         app:showAsAction= always / \n     item \n         android:id= @+id/action_set_filter \n         android:icon= @drawable/ic_filter_list_white_24dp \n         android:title= @string/action_filter_item \n         app:showAsAction= ifRoom / \n     item \n         android:id= @+id/action_logout \n         android:icon= @drawable/ic_exit_to_app_white_24dp \n         android:title= @string/action_logout_item \n         app:showAsAction= ifRoom /  /menu   \u0422.\u0435 \u0432  ActionBar  \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u044c \u0438\u043a\u043e\u043d\u043a\u0438 \u00ab\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0432 \u0411\u0414\u00bb, \u00ab\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0444\u0438\u043b\u044c\u0442\u0440\u00bb \u0438 \u00ab\u0417\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c \u0430\u043a\u0442\u0438\u0432\u043d\u0443\u044e \u0441\u0435\u0441\u0441\u0438\u044e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u00bb (logout). \u041d\u0430 \u044d\u043a\u0440\u0430\u043d \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u043a\u043e\u043d\u043a\u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430:  @Override  public   boolean   onCreateOptionsMenu ( Menu   menu )   { \n     getMenuInflater (). inflate ( R . menu . main_activity_menu ,   menu ); \n     return   super . onCreateOptionsMenu ( menu );  }   \u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u043d\u0430\u0436\u0430\u0442\u0438\u044f \u043d\u0430 \u0438\u043a\u043e\u043d\u043a\u0438 \u0431\u0443\u0434\u0435\u043c \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043d\u0438\u0436\u0435  @Override  public   boolean   onOptionsItemSelected ( MenuItem   item )   { \n     switch   ( item . getItemId ())   { \n         case   R . id . action_add_item : \n             AddItemActivity . display ( this ); \n             break ; \n\n         case   R . id . action_set_filter : \n             new   FilterDialog ( this ). showFilterDialog ( new   FilterDialog . CallbackFilterDialog ()   { \n                 @Override \n                 public   void   onFilterApplied ( List DocumentInfo   documentInfo )   { \n                     setAdapter ( documentInfo ); \n                 } \n             }); \n             break ; \n\n         case   R . id . action_logout : \n             LoginActivity . logout ( this ); \n             break ; \n     } \n     return   super . onOptionsItemSelected ( item );  }   \u0413\u043e\u0442\u043e\u0432\u044b\u0439 \u044d\u043a\u0440\u0430\u043d \u0434\u0430\u043d\u043d\u043e\u0439 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 \u043f\u043e\u043a\u0430\u0437\u0430\u043d \u043d\u0430 \u0440\u0438\u0441\u0443\u043d\u043a\u0435 2.1   \u0420\u0438\u0441\u0443\u043d\u043e\u043a 2.1 \u2014 \u0433\u043b\u0430\u0432\u043d\u044b\u0439 \u044d\u043a\u0440\u0430\u043d \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.  \u041d\u0430 \u0434\u0430\u043d\u043d\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u044b \u0442\u0435\u043a\u0443\u0449\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u043e\u0432, \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u043d\u0430 \u0441\u043a\u043b\u0430\u0434\u0435. \u0412 \u0432\u0435\u0440\u0445\u043d\u0435\u043c \u043f\u0440\u0430\u0432\u043e\u043c \u0443\u0433\u043b\u0443 \u044d\u043a\u0440\u0430\u043d\u0430 \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u044b \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0438\u043a\u043e\u043d\u043a\u0438:   - \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043d\u043e\u0432\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c \u0432 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445.   - \u041f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c \u0444\u0438\u043b\u044c\u0442\u0440 \u043a \u0441\u043f\u0438\u0441\u043a\u0443 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432.   - \u0417\u0430\u043a\u043e\u043d\u0447\u0438\u0442\u044c \u0430\u043a\u0442\u0438\u0432\u043d\u0443\u044e \u0441\u0435\u0441\u0441\u0438\u044e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f (logout).    \u041f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443    \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u0442 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u0432 \u0411\u0414.", 
            "title": "\u0413\u043b\u0430\u0432\u043d\u044b\u0439 \u044d\u043a\u0440\u0430\u043d \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f."
        }, 
        {
            "location": "/Java/Storehouse/#_6", 
            "text": "\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u0441 \u0438\u043c\u0435\u043d\u0435\u043c  AddItemActivity  \u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0432 \u0435\u0451 layout-\u0444\u0430\u0439\u043b \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 xml \u043a\u043e\u0434:  ?xml version= 1.0  encoding= utf-8 ?  LinearLayout   xmlns:android= http://schemas.android.com/apk/res/android \n     xmlns:tools= http://schemas.android.com/tools \n     android:id= @+id/activity_add_item \n     android:layout_width= match_parent \n     android:layout_height= match_parent \n     android:orientation= vertical \n     android:padding= 8dp \n     tools:context= prof_itgroup.ru.storehouseapp.Activities.AddItemActivity \n     ScrollView \n         android:layout_width= match_parent \n         android:layout_height= wrap_content \n         include   layout= @layout/item_core / \n     /ScrollView  /LinearLayout   \u0412 \u0441\u0432\u043e\u044e \u043e\u0447\u0435\u0440\u0435\u0434\u044c, \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u043c\u044b\u0439 \u0444\u0430\u0439\u043b item_core.xml \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439:  LinearLayout   android:layout_width= match_parent \n     android:layout_height= wrap_content \n     android:orientation= vertical \n     xmlns:android= http://schemas.android.com/apk/res/android \n     TextView \n         style= @style/label_style \n         android:text= @string/add_item_device_name   / \n     EditText \n         android:id= @+id/etDeviceName \n         style= @style/textStyle \n         android:hint= @string/add_item_hint_device_name   / \n     TextView \n         style= @style/label_style \n         android:text= @string/add_item_device_platform   / \n     EditText \n         android:id= @+id/etDevicePlatform \n         style= @style/textStyle \n         android:hint= @string/add_item_hint_device_platform   / \n     TextView \n         style= @style/label_style \n         android:text= @string/add_item_camera_info   / \n     EditText \n         android:id= @+id/etDeviceCameraInfo \n         style= @style/textStyle \n         android:hint= @string/add_item_hint_camera_info   / \n     TextView \n         style= @style/label_style \n         android:text= @string/add_item_available_colors_info   / \n     EditText \n         android:id= @+id/etDeviceColors \n         style= @style/textStyle \n         android:hint= @string/add_item_hint_available_colors_info   / \n     LinearLayout \n         android:id= @+id/llChangeColorList \n         android:visibility= gone \n         android:gravity= center_horizontal \n         android:orientation= horizontal \n         android:layout_width= match_parent \n         android:layout_height= wrap_content \n         Button \n             android:id= @+id/btnAddColor \n             android:padding= 12dp \n             android:layout_marginRight= 8dp \n             android:text= @string/add_color \n             android:layout_width= wrap_content \n             android:layout_height= wrap_content   / \n         Button \n             android:id= @+id/btnRemoveColor \n             android:padding= 12dp \n             android:layout_marginLeft= 8dp \n             android:text= @string/remove_color \n             android:layout_width= wrap_content \n             android:layout_height= wrap_content   / \n     /LinearLayout \n     TextView \n         style= @style/label_style \n         android:text= @string/add_item_price   / \n     EditText \n         android:id= @+id/etDevicePrice \n         style= @style/textStyle \n         android:inputType= number \n         android:hint= @string/add_item_hint_available_amount_info   / \n     LinearLayout \n         android:id= @+id/llChangePrice \n         android:visibility= gone \n         android:gravity= center_horizontal \n         android:orientation= horizontal \n         android:layout_width= match_parent \n         android:layout_height= wrap_content \n         Button \n             android:id= @+id/btnIncreaseCount \n             android:padding= 8dp \n             android:layout_marginRight= 8dp \n             android:text= @string/increase_item_count \n             android:layout_width= wrap_content \n             android:layout_height= wrap_content   / \n         Button \n             android:id= @+id/btnDecreaseCount \n             android:padding= 8dp \n             android:layout_marginLeft= 8dp \n             android:text= @string/decrease_item_count \n             android:layout_width= wrap_content \n             android:layout_height= wrap_content   / \n     /LinearLayout \n     LinearLayout \n         android:orientation= vertical \n         android:gravity= center \n         android:layout_gravity= center \n         android:layout_width= 200dp \n         android:layout_height= wrap_content \n         android:weightSum= 1 \n         Button \n             android:id= @+id/btnAddItem \n             android:padding= 8dp \n             android:background= #64b5f6 \n             android:textColor= @android:color/white \n             android:layout_width= match_parent \n             android:layout_height= wrap_content \n             android:layout_gravity= center_horizontal \n             android:layout_marginTop= 8dp \n             android:text= @string/add   / \n         Button \n             android:id= @+id/btnClear \n             android:padding= 8dp \n             android:background= #64b5f6 \n             android:textColor= @android:color/white \n             android:layout_width= match_parent \n             android:layout_height= wrap_content \n             android:layout_gravity= center_horizontal \n             android:layout_marginTop= 8dp \n             android:text= @string/button_clear \n             android:layout_weight= 0.22   / \n     /LinearLayout  /LinearLayout   \u0418\u0442\u043e\u0433\u043e\u0432\u044b\u0439 \u0432\u0438\u0434 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 \u043f\u043e\u043a\u0430\u0437\u0430\u043d \u043d\u0430 \u0440\u0438\u0441\u0443\u043d\u043a\u0435 2.2   \u0420\u0438\u0441\u0443\u043d\u043e\u043a 2.2 \u2014 \u042d\u043a\u0440\u0430\u043d \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u0432 \u0411\u0414.  \u041d\u0430 \u044d\u0442\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0432\u0432\u043e\u0434\u0438\u0442 \u0432\u0441\u044e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0443 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 \u0438 \u043d\u0430\u0436\u0438\u043c\u0430\u0435\u0442 \u043a\u043d\u043e\u043f\u043a\u0443 \u00ab\u0414\u041e\u0411\u0410\u0412\u0418\u0422\u042c\u00bb. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442, \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0435\u0433\u043e \u043f\u043e\u043b\u044f \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435.  \u0414\u043e\u0431\u0430\u0432\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f: \u0437\u0430\u0434\u0430\u0434\u0438\u043c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043d\u0430\u0436\u0430\u0442\u0438\u044f \u043a\u043d\u043e\u043f\u043a\u0438 \u00ab\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c\u00bb \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c \u043c\u0435\u0442\u043e\u0434 \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043d\u0438\u0436\u0435:  @OnClick ( R . id . btnAddItem )  public   void   onBtnAddItemClicked ()   { \n     Document   document   =   new   Document ( MainActivity . COLLECTION_NAME ); \n     if   ( isAllFieldsFilled ())   { \n         document . setField ( fields . getDeviceNameField (),   getStringFrom ( etDeviceName ). trim ()); \n         document . setField ( fields . getPlatformField (),   getStringFrom ( etDevicePlatform ). trim ()); \n         document . setField ( fields . getCameraInfoField (),   getStringFrom ( etDeviceCameraInfo ). trim ()); \n         document . setField ( fields . getColorsAvailableField (),   getColorsListFrom ( getStringFrom ( etDeviceColors ))); \n         document . setField ( fields . getDevicePriceField (),   Double . valueOf ( getStringFrom ( etDevicePrice ))); \n         document . saveDocument ( new   CallbackDocumentSaved ()   { \n             @Override \n             public   void   onDocumentSaved ()   { \n                 Toast . makeText ( AddItemActivity . this ,   getString ( R . string . succed_add_item ),   Toast . LENGTH_SHORT ). show (); \n                 finish (); \n             } \n\n             @Override \n             public   void   onDocumentSaveFailed ( String   errorCode ,   String   errorMessage )   { \n                 Toast . makeText ( AddItemActivity . this ,   getString ( R . string . error_add_item ),   Toast . LENGTH_SHORT ). show (); \n             } \n         }); \n     }   else   { \n         Toast . makeText ( this ,   getString ( R . string . wrong_data ),   Toast . LENGTH_SHORT ). show (); \n     }  }   \u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u043c\u0435\u0442\u043e\u0434\u0435 \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043a\u043b\u0430\u0441\u0441\u0430  Document , \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u043b \u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0432\u0441\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445  EditText  \u0438 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u043f\u043e\u043b\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430  setField(\u2026)  \u043f\u043e\u0441\u043b\u0435 \u0447\u0435\u0433\u043e \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u043c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442. \u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0441\u043e\u0437\u0434\u0430\u043d \u0431\u0435\u0437 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0446\u0438\u0438 \u0441 \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u043c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u043c \u0438\u0437 \u0411\u0414 (\u0442.\u0435 \u0431\u0435\u0437 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u0435\u0442\u043e\u0434\u0430  getDocumentById() , \u0442\u043e \u043d\u043e\u0432\u044b\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c\u0438 \u043f\u043e\u043b\u044f\u043c\u0438 \u0431\u0443\u0434\u0435\u0442 \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440.  \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b \u0445\u0440\u0430\u043d\u044f\u0442\u0441\u044f \u0432 \u0411\u0414 Scorocode \u0432 \u0432\u0438\u0434\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c \u043d\u0430 \u0440\u0438\u0441\u0443\u043d\u043a\u0435 2.3   \u0420\u0438\u0441\u0443\u043d\u043e\u043a 2.3 \u2014 \u0445\u0440\u0430\u043d\u0438\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u0432 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u0411\u0414 Scorocode.  \u041a\u0430\u0436\u0434\u044b\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0441\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u0435 \u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0435 \u043f\u043e\u043b\u044f.\n\u0421\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u043c\u0438 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f:   id \u2014 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0432 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438  readACL \u2014 \u043f\u0440\u0430\u0432\u0430 \u043d\u0430 \u0447\u0442\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430.  updateACL \u2014 \u043f\u0440\u0430\u0432\u0430 \u043d\u0430 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430.  removeACL \u2014 \u043f\u0440\u0430\u0432\u0430 \u043d\u0430 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430.  createdAt \u2014 \u0432\u0440\u0435\u043c\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430.  updatedAt - \u0432\u0440\u0435\u043c\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430.   \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043c\u043e\u0436\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u0434\u0440\u0443\u0433\u0438\u0435 \u043f\u043e\u043b\u044f \u043f\u043e \u0441\u0432\u043e\u0435\u043c\u0443 \u0443\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u0438\u044e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043a\u043d\u043e\u043f\u043a\u0443 \u00ab\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043f\u043e\u043b\u0435\u00bb \u043d\u0430 \u0432\u0435\u0440\u0445\u043d\u0435\u0439 \u043f\u0430\u043d\u0435\u043b\u0438. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0442\u0430\u043a \u0436\u0435 \u043c\u043e\u0436\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u043d\u0430\u0436\u0430\u0432 \u043a\u043d\u043e\u043f\u043a\u0443 \u00ab\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u00bb \u043d\u0430 \u0432\u0435\u0440\u0445\u043d\u0435\u0439 \u043f\u0430\u043d\u0435\u043b\u0438 \u0438 \u0432\u0432\u0435\u0434\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u0435\u0439 \u0432\u0440\u0443\u0447\u043d\u0443\u044e. \u0411\u043e\u043b\u0435\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e \u043e \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0432\u0435\u0440\u0445\u043d\u0435\u0439 \u043f\u0430\u043d\u0435\u043b\u0438 \u0411\u0414 \u0441\u043c.\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e Scorocode.  \u041f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443   \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043f\u043e\u043f\u0430\u0434\u0430\u0435\u0442 \u0432 \u0434\u0438\u0430\u043b\u043e\u0433\u043e\u0432\u043e\u0435 \u043e\u043a\u043d\u043e \u0444\u0438\u043b\u044c\u0442\u0440\u0430.  \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0434\u0430\u043d\u043d\u043e\u0435 \u0434\u0438\u0430\u043b\u043e\u0433\u043e\u0432\u043e\u0435 \u043e\u043a\u043d\u043e. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043a\u043b\u0430\u0441\u0441  FilterDialog  \u043a\u043e\u0434 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043f\u043e\u043a\u0430\u0437\u0430\u043d \u043d\u0438\u0436\u0435:  package   prof_itgroup.ru.storehouseapp.Objects ;  import   android.content.Context ;  import   android.content.DialogInterface ;  import   android.support.v7.app.AlertDialog ;  import   android.view.LayoutInflater ;  import   android.view.View ;  import   android.widget.CheckBox ;  import   android.widget.EditText ;  import   java.util.ArrayList ;  import   java.util.Arrays ;  import   java.util.List ;  import   butterknife.ButterKnife ;  import   prof_itgroup.ru.storehouseapp.Activities.MainActivity ;  import   prof_itgroup.ru.storehouseapp.Helpers.Helper ;  import   prof_itgroup.ru.storehouseapp.R ;  import   ru.profit_group.scorocode_sdk.Callbacks.CallbackFindDocument ;  import   ru.profit_group.scorocode_sdk.scorocode_objects.DocumentInfo ;  import   ru.profit_group.scorocode_sdk.scorocode_objects.Query ;  public   class   FilterDialog   { \n     private   Context   context ; \n     public   FilterDialog ( Context   context )   { \n         this . context   =   context ; \n     } \n     public   void   showFilterDialog ( final   CallbackFilterDialog   callbackFilterDialog )   { \n         final   View   v   =   LayoutInflater . from ( context ). inflate ( R . layout . filter_layout ,   null ); \n         final   CheckBox   cbPriceFilter   =   ButterKnife . findById ( v ,   R . id . cbPriceFilter ); \n         final   CheckBox   cbPlatformFilter   =   ButterKnife . findById ( v ,   R . id . cbPlatformFilter ); \n         final   CheckBox   cbColourFilter   =   ButterKnife . findById ( v ,   R . id . cbColorFilter ); \n         final   EditText   etPlatformFilter   =   ButterKnife . findById ( v ,   R . id . etPlatformFilter ); \n         final   EditText   etColors   =   ButterKnife . findById ( v ,   R . id . etColors ); \n         AlertDialog . Builder   builder   =   new   AlertDialog . Builder ( context ) \n                 . setTitle ( R . string . titleChooseFilterProperties ) \n                 . setPositiveButton ( R . string . continue_action ,   new   DialogInterface . OnClickListener ()   { \n                     @Override \n                     public   void   onClick ( DialogInterface   dialog ,   int   which )   { \n                         Query   query   =   new   Query ( MainActivity . COLLECTION_NAME ); \n                         if   ( cbPriceFilter . isChecked ())   { \n                             setPriceFilter ( v ,   query ); \n                         } \n                         if   ( cbPlatformFilter . isChecked ())   { \n                             query . equalTo ( new   DocumentFields ( context ). getPlatformField (),   etPlatformFilter . getText (). toString ()); \n                         } \n                         if ( cbColourFilter . isChecked ())   { \n                             List Object   colors   =   new   ArrayList (); \n                             colors . addAll ( Arrays . asList ( Helper . getStringFrom ( etColors ). split ( , ))); \n                             query . containedIn ( new   DocumentFields ( context ). getColorsAvailableField (),   colors ); \n                         } \n                         query . findDocuments ( new   CallbackFindDocument ()   { \n                             @Override \n                             public   void   onDocumentFound ( List DocumentInfo   documentInfos )   { \n                                  callbackFilterDialog . onFilterApplied ( documentInfos ); \n                             } \n                             @Override \n                             public   void   onDocumentNotFound ( String   errorCode ,   String   errorMessage )   { \n                                 Helper . showToast ( context ,   R . string . error ); \n                             } \n                         }); \n                     } \n                 }). setView ( v ); \n         builder . show (); \n     } \n     private   void   setPriceFilter ( View   view ,   Query   query )   { \n         String   priceField   =   new   DocumentFields ( view . getContext ()). getDevicePriceField (); \n         final   CheckBox   cbIncludeLower   =   ButterKnife . findById ( view ,   R . id . cbIncludeLower ); \n         final   CheckBox   cbIncludeUpper   =   ButterKnife . findById ( view ,   R . id . cbIncludeUpper ); \n         final   EditText   etLowerPrice   =   ButterKnife . findById ( view ,   R . id . etPriceFrom ); \n         final   EditText   etUpperPrice   =   ButterKnife . findById ( view ,   R . id . etPriceTo ); \n         if ( cbIncludeLower . isChecked ())   { \n             query . greaterThenOrEqualTo ( priceField ,   getPrice ( etLowerPrice )); \n         }   else   { \n             query . greaterThan ( priceField ,   getPrice ( etLowerPrice )); \n         } \n         if ( cbIncludeUpper . isChecked ())   { \n             query . lessThanOrEqualTo ( priceField ,   getPrice ( etUpperPrice )); \n         }   else   { \n             query . lessThan ( priceField ,   getPrice ( etUpperPrice )); \n         } \n     } \n     private   Double   getPrice ( EditText   etPrice )   { \n         String   price   =   etPrice . getText (). toString (); \n         Double   priceDouble   =   0d ; \n         if (! price . isEmpty ())   { \n             priceDouble   =   Double . valueOf ( price ); \n         } \n         return   priceDouble ; \n     } \n     public   interface   CallbackFilterDialog   { \n         void   onFilterApplied ( List DocumentInfo   documentInfo ); \n     }  }   \u0412 \u043c\u0435\u0442\u043e\u0434\u0435  showFilterDialog  \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u0435\u043c  AlertDialog  \u0438 \u0437\u0430\u0434\u0430\u0435\u043c \u0435\u043c\u0443  View  \u0438\u0437 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e layout-\u0444\u0430\u0439\u043b\u0430:    ?xml version= 1.0  encoding= utf-8 ?  LinearLayout   xmlns:android= http://schemas.android.com/apk/res/android \n     android:orientation= vertical \n     android:padding= 16dp \n     android:layout_width= match_parent \n     android:layout_height= match_parent \n     include   layout= @layout/price_filter_layout   / \n\n     include   layout= @layout/dilimeter   / \n\n     include   layout= @layout/platform_filter   / \n\n     include   layout= @layout/dilimeter   / \n\n     LinearLayout \n         android:orientation= horizontal \n         android:layout_width= match_parent \n         android:layout_height= wrap_content \n         CheckBox \n             android:id= @+id/cbColorFilter \n             android:layout_width= wrap_content \n             android:layout_height= wrap_content   / \n         TextView \n             android:text= @string/colorsFilter \n             style= @style/label_style / \n         EditText \n             android:id= @+id/etColors \n             android:layout_marginLeft= 16dp \n             android:hint= @string/color_filter_hint \n             style= @style/label_style   / \n     /LinearLayout  /LinearLayout   \u0412\u043a\u043b\u044e\u0447\u0430\u0435\u043c\u044b\u0435 layout-\u0444\u0430\u0439\u043b\u044b  price_filter_layout  \u0438  platform_filter  \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u044b \u043d\u0438\u0436\u0435:  ?xml version= 1.0  encoding= utf-8 ?  LinearLayout   xmlns:android= http://schemas.android.com/apk/res/android \n     xmlns:tools= http://schemas.android.com/tools \n     android:orientation= vertical \n     android:layout_width= match_parent \n     android:layout_height= wrap_content \n     tools:showIn= @layout/filter_layout \n     LinearLayout \n         android:orientation= horizontal \n         android:layout_width= match_parent \n         android:layout_height= wrap_content \n         CheckBox \n             android:id= @+id/cbPriceFilter \n             android:layout_width= wrap_content \n             android:layout_height= wrap_content   / \n         TextView \n             android:layout_marginLeft= 8dp \n             android:layout_marginStart= 8dp \n             android:text= @string/filter_price_from \n             style= @style/label_style   / \n         EditText \n             android:id= @+id/etPriceFrom \n             android:layout_marginLeft= 4dp \n             android:layout_marginStart= 4dp \n             android:minWidth= 60dp \n             android:layout_width= wrap_content \n             android:layout_height= wrap_content   / \n         TextView \n             android:text= @string/filter_price_up_to \n             android:layout_width= wrap_content \n             android:layout_height= wrap_content   / \n         EditText \n             android:id= @+id/etPriceTo \n             android:layout_marginLeft= 4dp \n             android:layout_marginStart= 4dp \n             android:minWidth= 60dp \n             style= @style/label_style / \n     /LinearLayout \n     RelativeLayout \n         android:layout_width= match_parent \n         android:layout_height= wrap_content \n         LinearLayout \n             android:id= @+id/llLowerBound \n             android:layout_marginLeft= 32dp \n             android:layout_alignParentLeft= true \n             android:orientation= horizontal \n             android:layout_width= wrap_content \n             android:layout_height= wrap_content \n             CheckBox \n                 android:id= @+id/cbIncludeLower \n                 android:layout_width= wrap_content \n                 android:layout_height= wrap_content   / \n             TextView \n                 android:layout_gravity= fill \n                 android:text= @string/include_lower \n                 style= @style/label_style   / \n         /LinearLayout \n         LinearLayout \n             android:layout_marginLeft= 160dp \n             android:orientation= horizontal \n             android:layout_width= wrap_content \n             android:layout_height= wrap_content \n             CheckBox \n                 android:id= @+id/cbIncludeUpper \n                 android:layout_width= wrap_content \n                 android:layout_height= wrap_content   / \n             TextView \n                 android:layout_gravity= fill \n                 android:text= @string/include_upper \n                 style= @style/label_style   / \n         /LinearLayout \n     /RelativeLayout  /LinearLayout   ?xml version= 1.0  encoding= utf-8 ?  LinearLayout   xmlns:android= http://schemas.android.com/apk/res/android \n     xmlns:tools= http://schemas.android.com/tools \n     android:orientation= horizontal \n     android:layout_width= wrap_content \n     android:layout_height= wrap_content \n     tools:showIn= @layout/filter_layout \n     CheckBox \n         android:id= @+id/cbPlatformFilter \n         android:layout_width= wrap_content \n         android:layout_height= wrap_content   / \n     TextView \n         android:layout_marginLeft= 8dp \n         android:layout_marginStart= 8dp \n         android:text= @string/filter_platform \n         style= @style/label_style   / \n     EditText \n         android:id= @+id/etPlatformFilter \n         android:layout_marginLeft= 4dp \n         android:layout_marginStart= 4dp \n         android:minWidth= 60dp \n         android:layout_width= wrap_content \n         android:layout_height= wrap_content   /  /LinearLayout   \u0414\u0438\u0430\u043b\u043e\u0433\u043e\u0432\u043e\u0435 \u043e\u043a\u043d\u043e \u0444\u0438\u043b\u044c\u0442\u0440\u0430 \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u043e \u043d\u0430 \u0440\u0438\u0441\u0443\u043d\u043a\u0435 2.4   \u0420\u0438\u0441\u0443\u043d\u043e\u043a 2.4 \u2014 \u0434\u0438\u0430\u043b\u043e\u0433\u043e\u0432\u043e\u0435 \u043e\u043a\u043d\u043e \u0444\u0438\u043b\u044c\u0442\u0440\u0430.  \u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u0434\u0438\u0430\u043b\u043e\u0433\u043e\u0432\u043e\u043c \u043e\u043a\u043d\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043c\u043e\u0436\u0435\u0442 \u0437\u0430\u0434\u0430\u0442\u044c \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u0438\u0437 \u0411\u0414 \u043f\u043e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u043c \u043a\u0440\u0438\u0442\u0435\u0440\u0438\u044f\u043c, \u0430 \u0438\u043c\u0435\u043d\u043d\u043e:  \u0426\u0435\u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430  \u041f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 (Android \u0438\u043b\u0438 iOS, \u0430 \u0442\u0430\u043a \u0436\u0435 \u043d\u043e\u043c\u0435\u0440 \u0432\u0435\u0440\u0441\u0438\u0438 \u041e\u0421).\n* \u0414\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u0432 \u043d\u0430\u043b\u0438\u0447\u0438\u0438 \u0446\u0432\u0435\u0442\u0430.  \u041f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \u00ab\u041f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c\u00bb \u043c\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0432\u044b\u0431\u0440\u0430\u043d\u044b \u043b\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b CheckBox \u0438 \u0435\u0441\u043b\u0438 \u0434\u0430 \u2014 \u0441\u0442\u0430\u0432\u0438\u043c \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u0444\u0438\u043b\u044c\u0442\u0440.  \u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043a\u043e\u0434\u0430 \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0444\u0438\u043b\u044c\u0442\u0440\u0430:    public   void   showFilterDialog ( final   CallbackFilterDialog   callbackFilterDialog )   { \n     final   View   v   =   LayoutInflater . from ( context ). inflate ( R . layout . filter_layout ,   null ); \n     final   CheckBox   cbPriceFilter   =   ButterKnife . findById ( v ,   R . id . cbPriceFilter ); \n     final   CheckBox   cbPlatformFilter   =   ButterKnife . findById ( v ,   R . id . cbPlatformFilter ); \n     final   CheckBox   cbColourFilter   =   ButterKnife . findById ( v ,   R . id . cbColorFilter ); \n     final   EditText   etPlatformFilter   =   ButterKnife . findById ( v ,   R . id . etPlatformFilter ); \n     final   EditText   etColors   =   ButterKnife . findById ( v ,   R . id . etColors ); \n\n     AlertDialog . Builder   builder   =   new   AlertDialog . Builder ( context ) \n             . setTitle ( R . string . titleChooseFilterProperties ) \n             . setPositiveButton ( R . string . continue_action ,   new   DialogInterface . OnClickListener ()   { \n                 @Override \n                 public   void   onClick ( DialogInterface   dialog ,   int   which )   { \n                     Query   query   =   new   Query ( MainActivity . COLLECTION_NAME ); \n                     if   ( cbPriceFilter . isChecked ())   { \n                         setPriceFilter ( v ,   query ); \n                     } \n\n                     if   ( cbPlatformFilter . isChecked ())   { \n                         query . equalTo ( new   DocumentFields ( context ). getPlatformField (),   etPlatformFilter . getText (). toString ()); \n                     } \n\n                     if ( cbColourFilter . isChecked ())   { \n                         List Object   colors   =   new   ArrayList (); \n                         colors . addAll ( Arrays . asList ( Helper . getStringFrom ( etColors ). split ( , ))); \n                         query . containedIn ( new   DocumentFields ( context ). getColorsAvailableField (),   colors ); \n                     } \n                     query . findDocuments ( new   CallbackFindDocument ()   { \n                         @Override \n                         public   void   onDocumentFound ( List DocumentInfo   documentInfos )   { \n                              callbackFilterDialog . onFilterApplied ( documentInfos ); \n                         } \n                         @Override \n                         public   void   onDocumentNotFound ( String   errorCode ,   String   errorMessage )   { \n                             Helper . showToast ( context ,   R . string . error ); \n                         } \n                     }); \n                 } \n             }). setView ( v ); \n     builder . show ();  }  private   void   setPriceFilter ( View   view ,   Query   query )   { \n     String   priceField   =   new   DocumentFields ( view . getContext ()). getDevicePriceField (); \n     final   CheckBox   cbIncludeLower   =   ButterKnife . findById ( view ,   R . id . cbIncludeLower ); \n     final   CheckBox   cbIncludeUpper   =   ButterKnife . findById ( view ,   R . id . cbIncludeUpper ); \n     final   EditText   etLowerPrice   =   ButterKnife . findById ( view ,   R . id . etPriceFrom ); \n     final   EditText   etUpperPrice   =   ButterKnife . findById ( view ,   R . id . etPriceTo ); \n     if ( cbIncludeLower . isChecked ())   { \n         query . greaterThenOrEqualTo ( priceField ,   getPrice ( etLowerPrice )); \n     }   else   { \n         query . greaterThan ( priceField ,   getPrice ( etLowerPrice )); \n     } \n     if ( cbIncludeUpper . isChecked ())   { \n         query . lessThanOrEqualTo ( priceField ,   getPrice ( etUpperPrice )); \n     }   else   { \n         query . lessThan ( priceField ,   getPrice ( etUpperPrice )); \n     }  }   \u0424\u0438\u043b\u044c\u0442\u0440 \u0437\u0430\u0434\u0430\u0435\u0442\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c: \u043c\u044b \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442  Query , \u0432\u044b\u0431\u043e\u0440\u043a\u0443 \u043c\u044b \u0432\u0435\u0434\u0435\u043c \u0438\u0437 \u043d\u0430\u0448\u0435\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438. \u0414\u0430\u043b\u0435\u0435: \u0435\u0441\u043b\u0438 \u0432\u044b\u0431\u0440\u0430\u043d \u0444\u0438\u043b\u044c\u0442\u0440 \u0446\u0435\u043d\u044b (\u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0430\u044f \u0433\u0430\u043b\u043e\u0447\u043a\u0430), \u0442\u043e \u043c\u044b \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u043c \u0438\u0437 \u0411\u0414 \u0442\u043e\u043b\u044c\u043a\u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u0434\u043b\u044f \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0446\u0435\u043d\u0430 \u043f\u043e\u043f\u0430\u0434\u0430\u0435\u0442 \u0432 \u043f\u0440\u0435\u0434\u0435\u043b\u044b \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0445 \u0433\u0440\u0430\u043d\u0438\u0446.  \u0413\u0440\u0430\u043d\u0438\u0446\u044b \u0446\u0435\u043d \u0437\u0430\u0434\u0430\u044e\u0442\u0441\u044f \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432:  greaterThan \u0437\u0430\u0434\u0430\u0435\u0442 \u043d\u0438\u0436\u043d\u044e\u044e \u0433\u0440\u0430\u043d\u0438\u0446\u0443 \u0446\u0435\u043d\u044b (\u043d\u0435 \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0443\u044e \u0446\u0435\u043d\u0443).  lessThan \u0437\u0430\u0434\u0430\u0435\u0442 \u0432\u0435\u0440\u0445\u043d\u044e\u044e \u0433\u0440\u0430\u043d\u0438\u0446\u0443 \u0446\u0435\u043d\u044b (\u043d\u0435 \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0443\u044e \u0446\u0435\u043d\u0443).  greaterThanOrEqualTo \u0437\u0430\u0434\u0430\u0435\u0442 \u043d\u0438\u0436\u043d\u044e\u044e \u0433\u0440\u0430\u043d\u0438\u0446\u0443 \u0446\u0435\u043d\u044b \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0443\u044e \u0446\u0435\u043d\u0443.  lessThanOrEqualTo \u0437\u0430\u0434\u0430\u0435\u0442 \u0432\u0435\u0440\u0445\u043d\u044e\u044e \u0433\u0440\u0430\u043d\u0438\u0446\u0443 \u0446\u0435\u043d\u044b \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0443\u044e \u0446\u0435\u043d\u0443.  \u041f\u043e\u0438\u0441\u043a \u043f\u043e \u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0435 \u0437\u0430\u0434\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430  equalTo(field, value)  \u043a\u043b\u0430\u0441\u0441\u0430  Query  \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0443 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430 \u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0432 \u0432\u044b\u0431\u043e\u0440\u043a\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0435  field  \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u0435\u0442 \u0441  value . \u0412 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435 Android 7.0 \u0434\u0435\u0432\u0430\u0439\u0441\u044b, \u0443\u043a\u0430\u0437\u0430\u0432  query.equalTo(\u00abplatform\u00bb, \u00abAndroid 7.0\u00bb);  \u041f\u043e\u0438\u0441\u043a \u043f\u043e \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u043c \u0446\u0432\u0435\u0442\u0430\u043c \u0437\u0430\u0434\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430  containedIn  \u043a\u043b\u0430\u0441\u0441\u0430  Query  \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0432 \u0432\u044b\u0431\u043e\u0440\u043a\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b \u0434\u043b\u044f \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043f\u043e\u043b\u0435 (\u0442\u0438\u043f\u0430 \u043c\u0430\u0441\u0441\u0438\u0432) \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432\u0441\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430.  \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u043c\u044b \u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u043c \u0437\u0430\u043f\u0440\u043e\u0441 (query) \u0434\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u0411\u0414 \u0438 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u044b \u043a\u043b\u0430\u0441\u0441\u0430  DocumentInfo  \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0437\u0443\u044e\u0449\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u044b, \u0443\u0434\u043e\u0432\u043b\u0435\u0442\u0432\u043e\u0440\u044f\u044e\u0449\u0438\u0435 \u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443. \u042d\u0442\u0443 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043c\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u043c \u0432 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 callback \u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e.  \u041f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443   \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0435 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0439 \u0441\u0435\u0441\u0441\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f (logout) \u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043f\u043e\u043f\u0430\u0434\u0430\u0435\u0442 \u043e\u0431\u0440\u0430\u0442\u043d\u043e \u043d\u0430 \u0441\u0442\u0430\u0440\u0442\u043e\u0432\u044b\u0439 \u044d\u043a\u0440\u0430\u043d \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.  \u0414\u043b\u044f \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043d\u0443\u0436\u043d\u043e \u0437\u0430\u0434\u0430\u0442\u044c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043d\u0430\u0436\u0430\u0442\u0438\u044f \u0434\u043b\u044f \u0434\u0430\u043d\u043d\u043e\u0439 \u043a\u043d\u043e\u043f\u043a\u0438, \u0432\u044b\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u043c\u0435\u0442\u043e\u0434   logout  \u043a\u043b\u0430\u0441\u0441\u0430  User  \u0434\u043b\u044f \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0439 \u0441\u0435\u0441\u0441\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f:  public   static   void   logout ( final   Context   context )   { \n     LocalPersistence . writeObjectToFile ( context ,   null ,   LocalPersistence . FILE_USER_INFO ); \n     new   User (). logout ( new   CallbackLogoutUser ()   { \n         @Override \n         public   void   onLogoutSucceed ()   { \n             display ( context ); \n         } \n\n         @Override \n         public   void   onLogoutFailed ( String   errorCode ,   String   errorMessage )   { \n             Helper . showToast ( context ,   R . string . error ); \n         } \n     });  }  \n\n\u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u043c\u0435\u0442\u043e\u0434\u0435 \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u0443\u0434\u0430\u043b\u044f\u0435\u0442\u0441\u044f \u0444\u0430\u0439\u043b \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435 (\u0434\u0430\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b \u0445\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0442\u043e\u0433\u043e \u0444\u0430\u043a\u0442\u0430, \u0447\u0442\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043f\u0440\u043e\u0448\u0435\u043b \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e \u0432 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438) \u0437\u0430\u0442\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043c\u0435\u0442\u043e\u0434  logout(\u2026)  \u043a\u043b\u0430\u0441\u0441\u0430  User , \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0437\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442 \u0430\u043a\u0442\u0438\u0432\u043d\u0443\u044e \u0441\u0435\u0441\u0441\u0438\u044e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.  \u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0439 \u0441\u0435\u0441\u0441\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043c\u0435\u0442\u043e\u0434  onLogoutSucceed(...) callback  \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430, \u0438\u043d\u0430\u0447\u0435 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043c\u0435\u0442\u043e\u0434  onLogoutFailed(...) .", 
            "title": "\u042d\u043a\u0440\u0430\u043d \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430"
        }, 
        {
            "location": "/Java/Storehouse/#_7", 
            "text": "\u041f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u043b\u044e\u0431\u043e\u0439 \u0438\u0437 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0441\u043f\u0438\u0441\u043a\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432 \u0433\u043b\u0430\u0432\u043d\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043f\u043e\u043f\u0430\u0434\u0430\u0435\u0442 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0431 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435.  \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u0441 \u0438\u043c\u0435\u043d\u0435\u043c  ItemDetailsInfo  \u0438 \u0432 layout-\u0444\u0430\u0439\u043b \u0434\u0430\u043d\u043d\u043e\u0439 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 xml \u043a\u043e\u0434:  ?xml version= 1.0  encoding= utf-8 ?  LinearLayout   xmlns:android= http://schemas.android.com/apk/res/android \n     xmlns:tools= http://schemas.android.com/tools \n     android:id= @+id/activity_detailed_item_info \n     android:layout_width= match_parent \n     android:layout_height= match_parent \n     android:padding= 16dp \n     android:orientation= vertical \n     tools:context= prof_itgroup.ru.storehouseapp.Activities.ItemDetailsActivity \n     ScrollView \n         android:layout_width= match_parent \n         android:layout_height= wrap_content \n             include   layout= @layout/item_core / \n     /ScrollView  /LinearLayout   \u041a\u0430\u043a \u0432\u0438\u0434\u043d\u043e layout-\u0444\u0430\u0439\u043b \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 \u043f\u0435\u0440\u0435\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 xml \u043a\u043e\u0434 \u044d\u043a\u0440\u0430\u043d\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0432 \u0411\u0414, \u043d\u043e \u043d\u0430 \u0434\u0430\u043d\u043d\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0435 \u0442\u0430\u043a \u0436\u0435 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u0435\u0440\u0435\u0439\u0442\u0438 \u0432 \u0440\u0435\u0436\u0438\u043c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f, \u0442.\u0435 \u0430\u043a\u0442\u0438\u0432\u0438\u0432\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u043a\u0440\u044b\u0442\u044b\u0435  View  \u044d\u043a\u0440\u0430\u043d\u0430.  \u0412  ActionBar  \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u044d\u043a\u0440\u0430\u043d\u0430 \u0442\u0430\u043a \u0436\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0438\u043a\u043e\u043d\u043a\u0438 \u0434\u043b\u044f \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0437\u0430\u043f\u0438\u0441\u0438 \u043e\u0431 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 (\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430), \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0438\u0441\u0438 \u043e\u0431 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 (\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430) \u0438 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0430 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0431 \u043e\u0442\u0433\u0440\u0443\u0437\u043a\u0435.  \u0414\u043b\u044f \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0438\u043a\u043e\u043d\u043e\u043a \u0432  ActionBar  \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c layout-\u0444\u0430\u0439\u043b \u0441 \u0438\u043c\u0435\u043d\u0435\u043c  detailed_info_menu  \u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0432 \u043d\u0435\u0433\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043a\u043e\u0434:  menu   xmlns:android= http://schemas.android.com/apk/res/android \n     xmlns:app= http://schemas.android.com/apk/res-auto \n     item \n         android:id= @+id/action_edit_item \n         android:title= @string/action_edit_item \n         android:icon= @drawable/ic_mode_edit_white_24dp \n         app:showAsAction= always / \n\n     item \n         android:id= @+id/action_remove_item \n         android:title= @string/action_remove_item \n         android:icon= @drawable/ic_delete_forever_white_24dp \n         app:showAsAction= ifRoom / \n\n      item \n         android:id= @+id/action_prepare_item \n         android:icon= @drawable/ic_assignment_white_24dp \n         android:title= @string/action_prepare_item \n         app:showAsAction= ifRoom /  /menu   \u0412 \u0441\u0430\u043c\u043e\u0439 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u043c\u0435\u0442\u043e\u0434:  @Override  public   boolean   onCreateOptionsMenu ( Menu   menu )   { \n     getMenuInflater (). inflate ( R . menu . detailed_info_menu ,   menu ); \n     return   super . onCreateOptionsMenu ( menu );  }   \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442 \u0438\u043a\u043e\u043d\u043a\u0438 \u0432  ActionBar .  \u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u043d\u0430\u0436\u0430\u0442\u0438\u0435 \u043d\u0430 \u0438\u043a\u043e\u043d\u043a\u0438 \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043d\u0438\u0436\u0435:  @Override  public   boolean   onOptionsItemSelected ( MenuItem   item )   { \n     switch   ( item . getItemId ())   { \n         case   android . R . id . home : \n             finish (); \n             break ; \n         case   R . id . action_edit_item : \n             setEditMode ( true ); \n             break ; \n         case   R . id . action_remove_item : \n             DocumentHelper . fetchAndRemoveDocument ( this ,   document ,   getDocumentInfo ()); \n             break ; \n         case   R . id . action_prepare_item : \n             SendItemActivity . display ( this ,   getDocumentInfo ()); \n             break ; \n     } \n     return   super . onOptionsItemSelected ( item );  }   \u0412 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u043c \u044d\u043a\u0440\u0430\u043d \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043d\u0430 \u0440\u0438\u0441\u0443\u043d\u043a\u0435 3.1   \u0420\u0438\u0441\u0443\u043d\u043e\u043a 3.1 \u2014 \u044d\u043a\u0440\u0430\u043d \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0431 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435.  \u0412 \u0432\u0435\u0440\u0445\u043d\u0435\u0439 \u043f\u0440\u0430\u0432\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u044d\u043a\u0440\u0430\u043d\u0430 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0438\u043a\u043e\u043d\u043a\u0438:   \u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435   \u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u043e\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u0438\u0437 \u0411\u0414   \u041f\u0435\u0440\u0435\u0439\u0442\u0438 \u043a \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0431 \u043e\u0442\u0433\u0440\u0443\u0437\u043a\u0435 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u043e\u0432\u0430\u0440\u0430.  \u041f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443   \u044d\u043a\u0440\u0430\u043d \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u0432 \u0440\u0435\u0436\u0438\u043c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0441\u0434\u0435\u043b\u0430\u0435\u043c \u0432\u0438\u0434\u0438\u043c\u044b\u043c\u0438 \u043a\u043d\u043e\u043f\u043a\u0438 \u00ab\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0446\u0432\u0435\u0442\u00bb, \u00ab\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0446\u0432\u0435\u0442\u00bb, \u00ab\u0423\u0432\u0435\u043b\u0438\u0447\u0438\u0442\u044c \u0446\u0435\u043d\u0443 \u043d\u0430 \u0441\u043a\u043b\u0430\u0434\u0435\u00bb, \u00ab\u0423\u043c\u0435\u043d\u044c\u0448\u0438\u0442\u044c \u0446\u0435\u043d\u0443 \u043d\u0430 \u0441\u043a\u043b\u0430\u0434\u0435\u00bb. \u042d\u043a\u0440\u0430\u043d \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 \u0432 \u0440\u0435\u0436\u0438\u043c\u0435 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u043e\u043a\u0430\u0437\u0430\u043d \u043d\u0430 \u0440\u0438\u0441\u0443\u043d\u043a\u0435 3.2   \u0420\u0438\u0441\u0443\u043d\u043e\u043a 3.2 \u2014 \u042d\u043a\u0440\u0430\u043d \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0431 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 \u0432 \u0440\u0435\u0436\u0438\u043c\u0435 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f  \u0417\u0430\u0434\u0430\u0434\u0438\u043c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043d\u0430\u0436\u0430\u0442\u0438\u044f \u043a\u043d\u043e\u043f\u043a\u0438 \u00ab\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0437\u0430\u043f\u0438\u0441\u044c\u00bb, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043c\u0435\u0442\u043e\u0434:  private   void   updateItemDocument ()   { \n     document . getDocumentById ( getDocumentInfo (). getId (),   new   CallbackGetDocumentById ()   { \n         @Override \n         public   void   onDocumentFound ( DocumentInfo   documentInfo )   { \n             document . updateDocument () \n                     . set ( fields . getDeviceNameField (),   getStringFrom ( etDeviceName )) \n                     . set ( fields . getPlatformField (),   getStringFrom ( etDevicePlatform )) \n                     . set ( fields . getCameraInfoField (),   getStringFrom ( etDeviceCameraInfo )); \n             setColorsUpdateInfo (); \n             document . updateDocument (). inc ( fields . getDevicePriceField (),   increaseCount ); \n             document . saveDocument ( new   CallbackDocumentSaved ()   { \n                 @Override \n                 public   void   onDocumentSaved ()   { \n                     setEditMode ( false ); \n                     for   ( String   color   :   deviceColors . keySet ())   { \n                         deviceColors . put ( color ,   ColorState . FROM_DB ); \n                     } \n                     document . updateDocument (). getUpdateInfo (). clear (); \n                 } \n                 @Override \n                 public   void   onDocumentSaveFailed ( String   errorCode ,   String   errorMessage )   { \n                     showToast ( R . string . error_update_item ); \n                     setFields (); \n                 } \n             }); \n         } \n         @Override \n         public   void   onDocumentNotFound ( String   errorCode ,   String   errorMessage )   { \n             showToast ( R . string . error_update_item ); \n             setFields (); \n         } \n     });  }  private   void   setColorsUpdateInfo ()   { \n     for   ( String   color   :   deviceColors . keySet ())   { \n         ColorState   colorState   =   deviceColors . get ( color ); \n         switch   ( colorState )   { \n             case   TO_REMOVE : \n                 document . updateDocument (). pull ( fields . getColorsAvailableField (),   color ); \n                 break ; \n\n             case   NEW : \n                 document . updateDocument (). push ( fields . getColorsAvailableField (),   color ); \n                 break ; \n         } \n     }  }   \u0414\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0431 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043c\u0435\u0442\u043e\u0434  updateDocument()  \u043a\u043b\u0430\u0441\u0441\u0430  Document . \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043a\u043b\u0430\u0441\u0441\u0430 Document \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043c\u044b \u043f\u0440\u043e\u0432\u043e\u0434\u0438\u043c \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0430\u0441\u0441\u043e\u0446\u0438\u0438\u0440\u043e\u0432\u0430\u043d \u0441 \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u043c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u043c \u0438\u0437 \u0411\u0414 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430  getDocumentById . \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u043d\u043e\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u043f\u043e\u043b\u0435\u0439:   \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 (\u043f\u043e\u043b\u0435 deviceName \u0432 \u0411\u0414)  \u041e\u0421 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 (\u043f\u043e\u043b\u0435 platform \u0432 \u0411\u0414)  \u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u0430\u043c\u0435\u0440\u0435 (deviceCameraInfo)   \u0437\u0430\u0434\u0430\u044e\u0442\u0441\u044f \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430  set(field, value)  \u043a\u043b\u0430\u0441\u0441\u0430  Update .  \u041f\u043e\u043b\u0435 \u00ab\u0446\u0435\u043d\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430\u00bb (\u043f\u043e\u043b\u0435 devicePrice \u0432 \u0411\u0414) \u0437\u0430\u0434\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430  .inc(field, value)  \u043a\u043b\u0430\u0441\u0441\u0430  Update . \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u0435\u0441\u043b\u0438 \u043c\u044b \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u043c \u0446\u0435\u043d\u0443, \u0442\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0432 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 value, \u0435\u0441\u043b\u0438 \u0443\u043c\u0435\u043d\u044c\u0448\u0430\u0435\u043c, \u0442\u043e \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u0443\u044e.  \u041f\u043e\u043b\u0435 \u00ab\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u0446\u0432\u0435\u0442\u0430\u00bb (\u043f\u043e\u043b\u0435 colorsAvailable \u0432 \u0411\u0414) \u0437\u0430\u0434\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u043e\u0432  .push()  (\u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0446\u0432\u0435\u0442\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430) \u0438  .pull()  (\u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0446\u0432\u0435\u0442\u0430 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430).  \u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0435\u0449\u0435 \u0440\u0430\u0437 \u0440\u0430\u0431\u043e\u0442\u0443 \u043c\u0435\u0442\u043e\u0434\u0430  updateItemDocument(...) : \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u0435\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0438\u0442\u044c\u0441\u044f, \u0447\u0442\u043e \u0442\u0430\u043a\u043e\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0438 \u0430\u0441\u0441\u043e\u0446\u0438\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043d\u0430\u0448 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043a\u043b\u0430\u0441\u0441\u0430  Document  \u0441 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u043c \u0432 \u0411\u0414. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043c\u0435\u0442\u043e\u0434  .getDocumentById(\u2026)  \u043a\u043b\u0430\u0441\u0441\u0430  Document .\n\u041f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e \u043a\u0430\u043a \u043c\u044b \u0430\u0441\u0441\u043e\u0446\u0438\u0438\u0440\u043e\u0432\u0430\u043b\u0438 \u043d\u0430\u0448 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0441 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u043c \u0438\u0437 \u0411\u0414 \u043c\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442 \u043a\u043b\u0430\u0441\u0441\u0430  Update  \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430  .updateDocument() . \u0414\u0430\u043b\u0435\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043e\u0431\u044a\u0435\u043a\u0442 \u043a\u043b\u0430\u0441\u0441\u0430 Update \u043c\u044b \u0437\u0430\u0434\u0430\u0435\u043c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435, \u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0443 \u0438 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u0430\u043c\u0435\u0440\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430  .set(\u2026) , \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0432 \u043c\u0430\u0441\u0441\u0438\u0432 (\u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430  .push() ) \u0438\u043b\u0438 \u0443\u0434\u0430\u043b\u044f\u0435\u043c \u0438\u0437 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 (\u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430  .pull ) \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u0446\u0432\u0435\u0442\u0430 \u0434\u043b\u044f \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u0438 \u0438\u0437\u043c\u0435\u043d\u044f\u0435\u043c \u0446\u0435\u043d\u0443 (\u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430  .inc() ) \u0432 \u043f\u043e\u043b\u0435 \u0446\u0435\u043d\u044b. \u041f\u043e\u0441\u043b\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0432\u0441\u0435\u0445 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0445 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439 \u0432 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0435 \u043a\u043b\u0430\u0441\u0441\u0430  Update  \u043c\u044b \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u043c \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430  .saveDocument(\u2026)  \u043a\u043b\u0430\u0441\u0441\u0430  Document .  \u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d \u043f\u0443\u0442\u0435\u043c \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0446\u0438\u0438 \u0441 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u043c \u0438\u0437 \u0411\u0414 (\u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430  .getDocumentById ), \u0442\u043e \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f  .saveDocument(\u2026)  \u043f\u0440\u043e\u0438\u0437\u043e\u0439\u0434\u0435\u0442 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430, \u0430 \u043d\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430.  \u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u043a\u043d\u043e\u043f\u043a\u0438   - \u043f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u0434\u0430\u043d\u043d\u0443\u044e \u043a\u043d\u043e\u043f\u043a\u0443 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0431 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435 \u0438\u0437 \u0411\u0414. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043d\u0430\u0436\u0430\u0442\u0438\u044f \u0434\u0430\u043d\u043d\u043e\u0439 \u043a\u043d\u043e\u043f\u043a\u0438 \u0432\u044b\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u043c\u0435\u0442\u043e\u0434 \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043d\u0438\u0436\u0435:  public   static   void   fetchAndRemoveDocument ( final   Context   context ,   final   Document   document ,   DocumentInfo   documentInfo )   { \n     document . getDocumentById ( documentInfo . getId (),   new   CallbackGetDocumentById ()   { \n         @Override \n         public   void   onDocumentFound ( DocumentInfo   documentInfo )   { \n             removeDocument ( context ,   document ); \n         } \n         @Override \n         public   void   onDocumentNotFound ( String   errorCode ,   String   errorMessage )   { \n             Helper . showToast ( context ,   R . string . error_document_not_removed ); \n         } \n     });  }  public   static   void   removeDocument ( final   Context   context ,   Document   document )   { \n         document . removeDocument ( new   CallbackRemoveDocument ()   { \n             @Override \n             public   void   onRemoveSucceed ( ResponseRemove   responseRemove )   { \n                 Toast . makeText ( context ,   context . getString ( R . string . document_removed ),   Toast . LENGTH_SHORT ). show (); \n                 (( Activity )   context ). finish (); \n             } \n             @Override \n             public   void   onRemoveFailed ( String   errorCode ,   String   errorMessage )   { \n                 Toast . makeText ( context ,   context . getString ( R . string . error_document_not_removed ),   Toast . LENGTH_SHORT ). show (); \n             } \n         });  }   \u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0439:\n\u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043c\u0435\u0442\u043e\u0434  .getDocumentById(...)  \u043a\u043b\u0430\u0441\u0441\u0430  Document  \u0434\u043b\u044f \u0442\u043e\u0433\u043e \u0447\u0442\u043e\u0431\u044b \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0438\u0442\u044c\u0441\u044f, \u0447\u0442\u043e \u0442\u0430\u043a\u043e\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0438 \u043f\u0440\u043e\u0432\u0435\u0441\u0442\u0438 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0446\u0438\u044e \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0441 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u043c \u043d\u0430\u043c\u0438 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u043e\u043c \u043a\u043b\u0430\u0441\u0441\u0430  Document .  \u041f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e \u043a\u0430\u043a \u043c\u044b \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0438\u043b\u0438\u0441\u044c \u0432 \u043d\u0430\u043b\u0438\u0447\u0438\u0438 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u043c\u044b \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u043c \u043c\u0435\u0442\u043e\u0434  .removeDocument()  \u043a\u043b\u0430\u0441\u0441\u0430  Document  \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0438\u0437 \u0411\u0414.  \u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u043a\u043d\u043e\u043f\u043a\u0438  . \u041f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u044d\u0442\u0443 \u043a\u043d\u043e\u043f\u043a\u0443 \u043c\u044b \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u043a \u044d\u043a\u0440\u0430\u043d\u0443 \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e\u0431 \u043e\u0442\u0433\u0440\u0443\u0437\u043a\u0435 \u0442\u043e\u0432\u0430\u0440\u0430.", 
            "title": "\u042d\u043a\u0440\u0430\u043d \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0435."
        }, 
        {
            "location": "/Java/Storehouse/#_8", 
            "text": "\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043d\u043e\u0432\u0443\u044e \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u0441 \u0438\u043c\u0435\u043d\u0435\u043c  SendItemActivity  \u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0432 layout-\u0444\u0430\u0439\u043b \u0434\u0430\u043d\u043d\u043e\u0439 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 xml \u043a\u043e\u0434:  ?xml version= 1.0  encoding= utf-8 ?  LinearLayout   xmlns:android= http://schemas.android.com/apk/res/android \n     xmlns:tools= http://schemas.android.com/tools \n     android:id= @+id/activity_send_item \n     android:layout_width= match_parent \n     android:layout_height= match_parent \n     android:padding= 16dp \n     android:orientation= vertical \n     tools:context= prof_itgroup.ru.storehouseapp.Activities.SendItemActivity \n     LinearLayout \n         android:id= @+id/llWaitingUsers \n         android:orientation= vertical \n         android:layout_width= match_parent \n         android:layout_height= wrap_content \n         TextView \n             style= @style/label_style \n             android:textColor= @android:color/black \n             android:text= @string/action_waiting_list / \n         TextView \n             android:id= @+id/tvWaitingUsers \n             style= @style/label_style / \n         TextView \n             android:id= @+id/tvLastChangeLabel \n             android:textColor= @android:color/black \n             android:layout_marginTop= 8dp \n             style= @style/label_style \n             android:text= @string/last_change / \n         TextView \n             android:id= @+id/tvLastChange \n             style= @style/label_style / \n         LinearLayout \n             android:id= @+id/llInfoContainer \n             android:orientation= vertical \n             android:layout_width= match_parent \n             android:layout_height= wrap_content \n             RelativeLayout \n                 android:layout_width= match_parent \n                 android:layout_height= wrap_content \n                 TextView \n                     android:layout_marginTop= 8dp \n                     android:textColor= @android:color/black \n                     android:text= @string/item_info \n                     style= @style/label_style   / \n                 TextView \n                     android:id= @+id/tvEdit \n                     android:layout_alignParentRight= true \n                     android:layout_marginTop= 10dp \n                     android:text= @string/editInfo \n                     android:textColor= @color/colorPrimary \n                     android:layout_width= wrap_content \n                     android:layout_height= wrap_content   / \n             /RelativeLayout \n             ScrollView \n                 android:layout_marginTop= 8dp \n                 android:layout_width= wrap_content \n                 android:layout_height= 180dp \n                 EditText \n                     android:id= @+id/etItemInfo \n                     android:enabled= false \n                     android:layout_width= wrap_content \n                     android:layout_height= 180dp   / \n             /ScrollView \n         /LinearLayout \n     /LinearLayout \n     LinearLayout \n         android:orientation= vertical \n         android:layout_gravity= center_horizontal \n         android:layout_width= wrap_content \n         android:layout_height= wrap_content \n         Button \n             android:layout_marginTop= 8dp \n             android:layout_gravity= center_horizontal \n             android:id= @+id/btnAppUserInList \n             android:text= @string/addUserInList \n             android:layout_width= match_parent \n             android:layout_height= wrap_content   / \n         Button \n             android:layout_marginTop= 8dp \n             android:layout_gravity= center_horizontal \n             android:id= @+id/btnSendToUser \n             android:text= @string/sendToUser \n             android:layout_width= match_parent \n             android:layout_height= wrap_content   / \n     /LinearLayout  /LinearLayout   \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u044d\u043a\u0440\u0430\u043d \u043f\u043e\u043a\u0430\u0437\u0430\u043d \u043d\u0430 \u0440\u0438\u0441\u0443\u043d\u043a\u0435  4.1   \u0420\u0438\u0441\u0443\u043d\u043e\u043a 4.1 \u2014 \u044d\u043a\u0440\u0430\u043d \u0441 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0435\u0439 \u043e\u0431 \u043e\u0442\u0433\u0440\u0443\u0437\u043a\u0435 \u0442\u043e\u0432\u0430\u0440\u0430  \u041f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \u00ab\u0414\u041e\u0411\u0410\u0412\u0418\u0422\u042c \u041f\u041e\u041a\u0423\u041f\u0410\u0422\u0415\u041b\u042f\u00bb \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0434\u0438\u0430\u043b\u043e\u0433\u043e\u0432\u043e\u0435 \u043e\u043a\u043d\u043e \u0441 \u043f\u0440\u043e\u0441\u044c\u0431\u043e\u0439 \u0432\u0432\u0435\u0441\u0442\u0438 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u0435 \u043f\u043e\u0441\u043b\u0435 \u0447\u0435\u0433\u043e \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043c\u0435\u0442\u043e\u0434:  private   void   addBuyerAndRefreshWaitingList ( final   String   buyerInfo )   { \n     if (! buyerInfo . trim (). isEmpty ())   { \n         document . getDocumentById ( getDocumentInfo (). getId (),   new   CallbackGetDocumentById ()   { \n             @Override \n             public   void   onDocumentFound ( DocumentInfo   documentInfo )   { \n                 document . updateDocument (). push ( fields . getBuyersField (),   buyerInfo ); \n                 document . saveDocument ( new   CallbackDocumentSaved ()   { \n                     @Override \n                     public   void   onDocumentSaved ()   { \n                         document . updateDocument (). getUpdateInfo (). clear (); \n                         refreshWaitingList (); \n                         showToast ( getBaseContext (),   R . string . add_waiting_buyer ); \n                     } \n                     @Override \n                     public   void   onDocumentSaveFailed ( String   errorCode ,   String   errorMessage )   { \n                         showToast ( getBaseContext (),   R . string . error ); \n                     } \n                 }); \n             } \n             @Override \n             public   void   onDocumentNotFound ( String   errorCode ,   String   errorMessage )   { \n                 showToast ( getBaseContext (),   R . string . error ); \n             } \n         }); \n     }  }   \u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043c\u0435\u0442\u043e\u0434 \u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e. \u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0447\u0442\u043e \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u043e\u0435 \u043f\u043e\u043b\u0435 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u0443\u0441\u0442\u044b\u043c. \u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0435\u0441\u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0432\u0432\u0435\u043b \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0446\u0438\u044f \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 \u043a\u043b\u0430\u0441\u0441\u0430 Document \u0441 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u043c \u0432 \u0411\u0414 \u043f\u043e\u0441\u043b\u0435 \u0447\u0435\u0433\u043e \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c: \u0432\u0435\u0434\u0435\u043d\u043d\u0430\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0432 \u043a\u043e\u043d\u0435\u0446 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u0435\u0439 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043c\u0435\u0442\u043e\u0434\u0430  .push()  \u043a\u043b\u0430\u0441\u0441\u0430  Update . \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u043e\u0447\u0435\u0440\u0435\u0434\u044c \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u0435\u0439, \u043e\u0436\u0438\u0434\u0430\u044e\u0449\u0438\u0445 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u0442\u043e\u0432\u0430\u0440\u0430.  \u041f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \u00ab\u041e\u0422\u0413\u0420\u0423\u0417\u0418\u0422\u042c \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042e\u00bb \u0438\u0437 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043e\u0436\u0438\u0434\u0430\u044e\u0449\u0438\u0445 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0434\u043e\u043b\u0436\u0435\u043d \u0443\u0434\u0430\u043b\u044f\u0442\u044c\u0441\u044f \u043f\u0435\u0440\u0432\u044b\u0439 \u043a\u043b\u0438\u0435\u043d\u0442, \u0434\u043e\u043b\u0436\u043d\u043e \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c\u0441\u044f \u0432\u0440\u0435\u043c\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u0438 \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u0438 (\u0433\u0440\u0443\u0437\u0447\u0438\u043a\u0438, \u043a\u0443\u0440\u044c\u0435\u0440\u044b, \u0431\u0443\u0445\u0433\u0430\u043b\u0442\u0435\u0440\u0438\u044f) \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043e\u043f\u043e\u0432\u0435\u0449\u0435\u043d\u044b \u043e\u0431 \u044d\u0442\u043e\u043c. \n\u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0434\u043b\u044f \u0434\u0430\u043d\u043d\u043e\u0439 \u043a\u043d\u043e\u043f\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442 \u043c\u0435\u0442\u043e\u0434 \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043d\u0438\u0436\u0435:  @OnClick ( R . id . btnSendToUser )  public   void   onSendToUserButtonClicked ()   { \n     document . getDocumentById ( getDocumentInfo (). getId (),   new   CallbackGetDocumentById ()   { \n         @Override \n         public   void   onDocumentFound ( final   DocumentInfo   documentInfo )   { \n             document . updateDocument () \n                     . popFirst ( fields . getBuyersField ()) \n                     . setCurrentDate ( fields . getLastSendField ()); \n\n          document . saveDocument ( new   CallbackDocumentSaved ()   { \n                 @Override \n                 public   void   onDocumentSaved ()   { \n                     document . updateDocument (). getUpdateInfo (). clear (); \n                     new   ItemNotificator ( getBaseContext (),   documentInfo . getId (),   fields . getDeviceName ()). notifyPersonalAboutItemSend (); \n                     new   BalanceNotificator ( getBaseContext ()). refreshCompanyBalance (); \n                     etItemInfo . setVisibility ( View . VISIBLE ); \n                     etItemInfo . append ( fields . getLastSendTime ()); \n                     refreshWaitingList (); \n                 } \n\n                @Override \n                 public   void   onDocumentSaveFailed ( String   errorCode ,   String   errorMessage )   { \n                     showToast ( getBaseContext (),   R . string . error ); \n                 } \n             }); \n  }   \u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u043c\u0435\u0442\u043e\u0434\u0435 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0446\u0438\u044f \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 \u043a\u043b\u0430\u0441\u0441\u0430  Document  \u0441 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u043c \u0438\u0437 \u0411\u0414 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430  .getDocumentById()  \u043a\u043b\u0430\u0441\u0441\u0430  Document , \u043f\u043e\u0441\u043b\u0435 \u0447\u0435\u0433\u043e \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043a\u043b\u0430\u0441\u0441\u0430  Update  \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0435\u0433\u043e \u043c\u0435\u0442\u043e\u0434  .popFirst  \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 (\u0438\u043c\u0438\u0442\u0438\u0440\u0443\u044f \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u043d\u0438\u0435 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u0438). \u041a\u0440\u043e\u043c\u0435 \u0442\u043e\u0433\u043e \u0432 \u043f\u043e\u043b\u0435 \u00ab\u041f\u043e\u0441\u043b\u0435\u0434\u043d\u044f\u044f \u043e\u0442\u0433\u0440\u0443\u0437\u043a\u0430 \u0441\u043e\u0432\u0435\u0440\u0448\u0435\u043d\u0430 \u0432\u00bb (\u043f\u043e\u043b\u0435 lastSend \u0432 \u0411\u0414) \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0432\u0440\u0435\u043c\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043e\u0442\u0433\u0440\u0443\u0437\u043a\u0438 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430  .setCurrentDate(\u2026)  \u043a\u043b\u0430\u0441\u0441\u0430  Update .  \u0422\u0430\u043a \u0436\u0435 \u043d\u0430 \u044d\u0442\u043e\u043c \u044d\u043a\u0440\u0430\u043d\u0435 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u043a \u043e\u0442\u0433\u0440\u0443\u0437\u043a\u0435 \u0442\u043e\u0432\u0430\u0440\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0445\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u0432 \u0444\u0430\u0439\u043b\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 (\u043f\u043e\u043b\u0435 sendInfo \u0442\u0438\u043f\u0430 File). \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u044d\u0442\u043e\u0442 \u0444\u0430\u0439\u043b \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0438 \u0432 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u0435 \u043e\u043a\u043d\u043e \u0432\u044b\u0434\u0430\u0435\u0442\u0441\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u00ab\u041f\u043e \u0442\u043e\u0432\u0430\u0440\u0443 \u0432 \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f \u043d\u0435\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f ...\u00bb. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043c\u043e\u0436\u0435\u0442 \u043d\u0430\u0436\u0430\u0442\u044c \u043a\u043d\u043e\u043f\u043a\u0443 \u00ab\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u00bb, \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u043a \u043e\u0442\u0433\u0440\u0443\u0437\u043a\u0435 \u0438 \u043d\u0430\u0436\u0430\u0442\u044c \u00ab\u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c\u00bb. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d \u043c\u0435\u0442\u043e\u0434:  public   static   void   uploadFile ( final   Context   context ,   Document   document ,   String   content )   { \n     document . uploadFile ( new   DocumentFields ( context ). getSendInfoField (),   FILE_NAME ,   encode ( content . getBytes ()), \n         new   CallbackUploadFile ()   { \n         @Override \n         public   void   onDocumentUploaded ()   { \n         //file loaded \n         } \n\n         @Override \n         public   void   onDocumentUploadFailed ( String   errorCode ,   String   errorMessage )   { \n             Helper . showToast ( context ,   R . string . error ); \n         } \n     });  }   \u0414\u0430\u043d\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0444\u0430\u0439\u043b \u0432 \u043f\u043e\u043b\u0435 (\u0442\u0438\u043f\u0430 File) \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0411\u0414. \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0430\u0441\u0441\u043e\u0446\u0438\u0438\u0440\u043e\u0432\u0430\u043d \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430  getDocumentById(\u2026) . \u0410\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u044b\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430 \u0438\u0437 \u0411\u0414.  \u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u0445, \u043e\u0436\u0438\u0434\u0430\u044e\u0449\u0438\u0445 \u043e\u0442\u0433\u0440\u0443\u0437\u043a\u0438 \u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438 \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u044e\u0442\u0441\u044f \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043d\u0438\u0436\u0435.  private   void   refreshWaitingList ()   { \n     document . getDocumentById ( getDocumentInfo (). getId (),   new   CallbackGetDocumentById ()   { \n         @Override \n         public   void   onDocumentFound ( DocumentInfo   documentInfo )   { \n             fields . setDocumentInfo ( documentInfo ); \n             tvWaitingUsers . setText ( fields . getBuyers ()); \n             tvLastChange . setText ( fields . getLastSendTime ()); \n             llWaitingUsers . setVisibility ( fields . getBuyers (). isEmpty ()   ?   View . GONE   :   View . VISIBLE ); \n             tvLastChangeLabel . setVisibility ( fields . getLastSendTime (). isEmpty ()   ?   View . GONE   :   View . VISIBLE ); \n             tvLastChange . setVisibility ( fields . getLastSendTime (). isEmpty ()   ?   View . GONE   :   View . VISIBLE ); \n             btnSendToUser . setVisibility ( fields . getBuyers (). isEmpty ()   ?   View . GONE   :   View . VISIBLE ); \n             document . getFileContent ( fields . getSendInfoField (),   FileHelper . FILE_NAME ,   new   CallbackGetFile ()   { \n                 @Override \n                 public   void   onSucceed ( String   fileContent )   { \n                     if ( fileContent   !=   null     ! fileContent . trim (). isEmpty ())   { \n                         etItemInfo . setText ( fileContent ); \n                     }   else   { \n                         etItemInfo . setText ( R . string . no_info ); \n                     } \n                 } \n                 @Override \n                 public   void   onFailed ( String   errorCode ,   String   errorMessage )   { \n                     showToast ( getBaseContext (),   R . string . error ); \n                 } \n             }); \n         } \n         @Override \n         public   void   onDocumentNotFound ( String   errorCode ,   String   errorMessage )   { \n             tvWaitingUsers . setVisibility ( View . GONE ); \n         } \n     });  }   \u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u043c\u0435\u0442\u043e\u0434\u0435 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0446\u0438\u044f \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 \u043a\u043b\u0430\u0441\u0441\u0430  Document  \u0441 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u043c \u0438\u0437 \u0411\u0414 \u043f\u043e\u0441\u043b\u0435 \u0447\u0435\u0433\u043e \u043d\u0430 \u044d\u043a\u0440\u0430\u043d\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u043f\u043e\u043b\u0435\u0439:\n1. \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u0436\u0438\u0434\u0430\u044e\u0449\u0438\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439\n2. \u0432\u0440\u0435\u043c\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043e\u0442\u0433\u0440\u0443\u0437\u043a\u0438\n3. \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u044c \u0442\u0435\u0445 \u0438\u043b\u0438 \u0438\u043d\u044b\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u043a\u043e\u043d\u0442\u0435\u043d\u0442\u0430.\n4. \u041f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 getFileContent \u043a\u043b\u0430\u0441\u0441\u0430 Document \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0444\u0430\u0439\u043b\u0430 \u0432 \u0432\u0438\u0434\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 (\u0441 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435\u043c \u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f). \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u0432 \u043f\u043e\u043b\u0435 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f.  \u0422\u0430\u043a \u0436\u0435 \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043a\u043b\u0430\u0441\u0441  ItemNotificator \u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u0432 \u043d\u0435\u0433\u043e \u043c\u0435\u0442\u043e\u0434 notifyPersonalAboutItemSend()\n\u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u043c \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c \u043f\u0440\u0438 \u043e\u0442\u0433\u0440\u0443\u0437\u043a\u0435 \u0442\u043e\u0432\u0430\u0440\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e. \u041a\u043e\u0434 \u043c\u0435\u0442\u043e\u0434\u0430 \u043f\u043e\u043a\u0430\u0437\u0430\u043d \u043d\u0438\u0436\u0435\npublic void notifyPersonalAboutItemSend() {\n    sendPushToLoaderPerson();\n    sendEmailInAccountingDepartment();\n    sendSmsToDeliveryPerson();\n}  \u0414\u0430\u043d\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 \u043f\u0440\u043e\u0432\u043e\u0434\u0438\u0442 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0441\u043e\u043d\u0430\u043b\u0430 \u043e \u0442\u043e\u043c, \u0447\u0442\u043e \u0442\u043e\u0432\u0430\u0440 \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043b\u0435\u043d \u043a \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c:   \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 push \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0433\u0440\u0443\u0437\u0447\u0438\u043a\u0443 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430:   private   void   sendPushToLoaderPerson ()   { \n     Query   query   =   new   Query ( roles ); \n     query . equalTo ( name ,   loaderPerson ); \n     query . equalTo ( isFree ,   true ); \n     query . setLimit ( 1 ); \n\n     MessagePush   messagePush   =   new   MessagePush ( context . getString ( R . string . you_should_take )   +   getItemInfo ()   +   context . getString ( R . string . and_prepare ),   null ); \n     message . sendPush ( messagePush ,   query ,   new   CallbackSendPush ()   { \n         @Override \n         public   void   onPushSended ()   { \n             Helper . showToast ( context ,   R . string . push_sended ); \n         } \n         @Override \n         public   void   onPushSendFailed ( String   errorCode ,   String   errorMessage )   { \n             Helper . showToast ( context ,   R . string . cant_send_push ); \n         } \n     });  }    \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 sms \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043a\u0443\u0440\u044c\u0435\u0440\u0443   private   void   sendSmsToDeliveryPerson ()   { \n     Query   query   =   new   Query ( roles ); \n     query . equalTo ( name ,   deliveryPerson ); \n     query . equalTo ( isFree ,   true ); \n     query . setLimit ( 1 ); \n\n     MessageSms   messageSms   =   new   MessageSms ( context . getString ( R . string . take_item )   +   getItemInfo ()); \n     message . sendSms ( messageSms ,   query ,   new   CallbackSendSms ()   { \n         @Override \n         public   void   onSmsSended ()   { \n             Helper . showToast ( context ,   R . string . sms_was_sended ); \n         } \n\n         @Override \n         public   void   onSmsSendFailed ( String   errorCode ,   String   errorMessage )   { \n             Helper . showToast ( context ,   R . string . cant_send_sms ); \n         } \n     });  }    \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 email \u0432 \u0431\u0443\u0445\u0433\u0430\u043b\u0442\u0435\u0440\u0438\u044e.   private   void   sendEmailInAccountingDepartment ()   { \n     Query   query   =   new   Query ( roles ); \n     query . equalTo ( name ,   accountantPerson ); \n\n     MessageEmail   messageEmail   =   new   MessageEmail ( context . getString ( R . string . from ),   context . getString ( R . string . device )   +   getItemInfo ()   ,   context . getString ( R . string . device )   +   getItemInfo ()   +   context . getString ( R . string . sold )); \n     message . sendEmail ( messageEmail ,   query ,   new   CallbackSendEmail ()   { \n         @Override \n         public   void   onEmailSend ()   { \n             Helper . showToast ( context ,   R . string . email_was_sended ); \n         } \n         @Override \n         public   void   onEmailSendFailed ( String   errorCode ,   String   errorMessage )   { \n             Helper . showToast ( context ,   R . string . cant_send_email ); \n         } \n     });  }   \u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0440\u0430\u0431\u043e\u0442\u0443 \u044d\u0442\u0438\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e:   \u0412 \u043c\u0435\u0442\u043e\u0434\u0435  sendEmailInAccountingDepartment  \u0438\u0437 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u0440\u043e\u043b\u0435\u0439 (\u00abroles\u00bb) \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u0442\u0441\u044f \u0440\u043e\u043b\u044c \u00abaccountantPerson\u00bb \u0438 \u0432\u0441\u0435\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c \u0441 \u0442\u0430\u043a\u043e\u0439 \u0440\u043e\u043b\u044c\u044e \u043e\u0442\u0441\u044b\u043b\u0430\u044e\u0442\u0441\u044f email \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430  .sendEmail()  \u043a\u043b\u0430\u0441\u0441\u0430  Message .  \u0412 \u043c\u0435\u0442\u043e\u0434\u0435  sendSmdToDeliveryPerson  \u0438\u0437 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u0440\u043e\u043b\u0435\u0439 (\u00abroles\u00bb) \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u0442\u0441\u044f \u043e\u0434\u0438\u043d (\u0443\u0441\u043b\u043e\u0432\u0438\u0435 setLimit(1)) \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u044b\u0439 (\u0443\u0441\u043b\u043e\u0432\u0438\u0435 isFree == true) \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a \u0441 \u0440\u043e\u043b\u044c\u044e \u00abdeliveryPerson\u00bb \u0438 \u0435\u043c\u0443 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f sms \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430  .sendSms  \u043a\u043b\u0430\u0441\u0441\u0430  Message .  \u0412 \u043c\u0435\u0442\u043e\u0434\u0435  sendSmdToLoaderPerson  \u0438\u0437 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u0440\u043e\u043b\u0435\u0439 (\u00abroles\u00bb) \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u0442\u0441\u044f \u043e\u0434\u0438\u043d (\u0443\u0441\u043b\u043e\u0432\u0438\u0435 setLimit(1)) \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u044b\u0439 (\u0443\u0441\u043b\u043e\u0432\u0438\u0435 isFree == true) \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a \u0441 \u0440\u043e\u043b\u044c\u044e loaderPerson \u0438 \u0435\u043c\u0443 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f push \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430  .sendPush  \u043a\u043b\u0430\u0441\u0441\u0430  Message .   \u041a\u0440\u043e\u043c\u0435 \u0442\u043e\u0433\u043e \u043f\u043e\u0441\u043b\u0435 \u043d\u0430\u0436\u0430\u0442\u0438\u044f \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 \u00ab\u041e\u0422\u0413\u0420\u0423\u0417\u0418\u0422\u042c \u041f\u041e\u041b\u042c\u0417\u041e\u0412\u0410\u0422\u0415\u041b\u042e\u00bb \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043c\u0435\u0442\u043e\u0434  refreshCompanyBalance()  \u043a\u043b\u0430\u0441\u0441\u0430  BalanceNotivicator .  \u041b\u0438\u0441\u0442\u0438\u043d\u0433 \u043c\u0435\u0442\u043e\u0434\u0430  resreshCompanyBalance() :  public   void   refreshCompanyBalance ()   { \n     Script   script   =   new   Script (); \n     script . runScript (  5800ad9342d52f1ba275fbcd ,   new   CallbackSendScript ()   { \n         @Override \n         public   void   onScriptSended ()   { \n             Helper . showToast ( context ,   R . id . balance_refreshed ); \n         } \n         @Override \n         public   void   onScriptSendFailed ( String   errorCode ,   String   errorMessage )   { \n             Helper . showToast ( context ,   R . id . can_refresh_balance ); \n         } \n     });  }   \u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u043b\u0438\u0441\u0442\u0438\u043d\u0433\u0435 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u043c\u0435\u0442\u043e\u0434\u0430  runScript(...)  \u043a\u043b\u0430\u0441\u0441\u0430  Script  \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u044b\u0439 \u043a\u043e\u0434 \u0441 id 5800ad9342d52f1ba275fbcd, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0435\u0440\u0435\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0442\u043e\u0432\u0430\u0440\u043e\u0432 \u043d\u0430 \u0441\u043a\u043b\u0430\u0434\u0435, \u0438\u0437\u0434\u0435\u0440\u0436\u043a\u0438 \u043d\u0430 \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0438 \u0434\u0440\u0443\u0433\u0438\u0435 \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0438.", 
            "title": "\u042d\u043a\u0440\u0430\u043d \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0431 \u043e\u0442\u0433\u0440\u0443\u0437\u043a\u0435 \u0442\u043e\u0432\u0430\u0440\u0430."
        }
    ]
}